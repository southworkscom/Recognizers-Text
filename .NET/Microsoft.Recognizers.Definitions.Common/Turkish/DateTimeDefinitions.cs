//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Generation parameters:
//     - DataFilename: Patterns\Turkish\Turkish-DateTime.yaml
//     - Language: Turkish
//     - ClassName: DateTimeDefinitions
// </auto-generated>
//
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// ------------------------------------------------------------------------------

namespace Microsoft.Recognizers.Definitions.Turkish
{
    using System;
    using System.Collections.Generic;

    public static class DateTimeDefinitions
    {
      public const string TillRegex = @"(?<till>\b(kadar|dek|değin)\b)";
      public const string RangeConnectorRegex = @"(?<and>\b(ile|ila)\b|(-|—|——|–))";
      public const string RelativeRegex = @"\b(?<order>ertesi|bir sonraki|gelecek|bu|geçen|bir önceki|evvelki|önümüzdeki)\b";
      public const string NextPrefixRegex = @"\b(bir sonraki|gelecek|önümüzdeki)\b";
      public const string PreviousPrefixRegex = @"(geçen|bir önceki|evvelki)\b";
      public const string ThisPrefixRegex = @"(bu|bugünkü)\b";
      public const string RangeSuffixRegex = @"arasında\b";
      public const string CenturySuffixRegex = @"yüzyıl\b";
      public const string ReferencePrefixRegex = @"(o|şu|bu|aynı)\b";
      public const string FutureSuffixRegex = @"\b(ileride|gelecekte)\b";
      public const string DayRegex = @"(?<day>(10|20|30|(1|2|3)?1|(1|2)?2|(1|2)?3|(1|2)?4|(1|2)?5|(1|2)?6|(1|2)?7|(1|2)?8|(1|2)?9))";
      public const string DayOrdinalRegex = @"(?<day>(((1|2|3)?1)(.|'inci)|((1|2)?2)(.|'nci)|((1|2)?3)(.|'üncü)|((1|2)?4)(.|'üncü)|((1|2)?5)(.|'inci)|((1|2)?6)(.|'ıncı)|((1|2)?7)(.|'inci)|((1|2)?8)(.|'inci)|((1|2)?9)(.|'uncu)|10(.|'uncu)|20(.|'inci)|30(.|'uncu)|((on|yirmi|otuz)\s)?birinci|((on|yirmi)\s)?(ikinci|üçüncü|dördüncü|beşinci|altıncı|yedinci|sekizinci|dokuzuncu)|onuncu|yirminci|otuzuncu)(\sgün))\b";
      public const string DaySuffixRegex = @"(?<day>(1|5|8|11|15|18|21|25|28|31)'i|(2|7|12|17|20|22|27)'si|(3|4|13|14|23|24)'ü|(6|16|26)'sı|(9|10|19|29|30)'u)";
      public const string WrittenDaySuffixRegex = @"(((on|yirmi)\s)?(biri|ikisi|üçü|dördü|beşi|altısı|yedisi|sekizi|dokuzu)|onu|yirmisi|otuzu|otuz biri)";
      public const string MonthNumRegex = @"(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\b";
      public const string WrittenOneToNineRegex = @"(bir|iki|üç|dört|beş|altı|yedi|sekiz|dokuz)";
      public const string WrittenTensRegex = @"(on|yirmi|otuz|kırk|elli|altmış|yetmiş|seksen|doksan)";
      public static readonly string WrittenNumRegex = $@"({WrittenOneToNineRegex}|{WrittenTensRegex}(\s+{WrittenOneToNineRegex})?)";
      public const string WrittenCenturyFullYearRegex = @"(((iki\s+)?bin)?(\s+(iki|üç|dört|beş|altı|yedi|sekiz|dokuz))?(\s+yüz)?)";
      public const string WrittenCenturyOrdinalYearRegex = @"(((on|yirmi)\s+)?birinci|((on)\s+)?ikinci|((on)\s+)?üçüncü|((on)\s+)?dördüncü|((on)\s+)?beşinci|((on)\s+)?altıncı|((on)\s+)?yedinci|((on)\s+)?sekizinci|((on)\s+)?dokuzuncu|onuncu|yirminci)";
      public static readonly string CenturyRegex = $@"\b(?<century>{WrittenCenturyOrdinalYearRegex}(\s+yüzyıl)?)\b";
      public static readonly string FullTextYearRegex = $@"\b{WrittenCenturyFullYearRegex}\s+{WrittenNumRegex}\b";
      public const string OclockRegex = @"(?<oclock>bir|iki|üç|dört|beş|altı|yedi|sekiz|dokuz|on|on bir|on iki)";
      public const string TwoDigitYearRegex = @"\b(?<![$])(?<year>([0-27-9]\d))\b";
      public static readonly string YearRegex = $@"({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})";
      public const string WeekDayRegex = @"\b(?<weekday>pazartesi|salı|çarşamba|perşembe|cuma|cumartesi|pazar|pzt|sal|çrş|per|cum|cmt|paz)\b";
      public const string WrittenMonthRegex = @"(?<month>ocak|şubat|mart|nisan|mayıs|haziran|temmuz|ağustos|eylül|ekim|kasım|aralık|oca|şub|mar|nis|may|haz|eyl|eki|kas|ara)";
      public static readonly string MonthSuffixRegex = $@"(?<msuf>((?<!\d+)((ocak|şubat|mart|mayıs|ağustos|aralık)(ta)|(nisan|haziran|temmuz|kasım)(da)|(eylül|ekim)(de))|{WrittenMonthRegex}\s(ayında)))";
      public static readonly string ProperMonthSuffixRegex = $@"(?<pmsuf>({DayRegex}\s+(ocak|şubat|mart|mayıs|ağustos|aralık)('ta)|(nisan|haziran|temmuz|kasım)('da)|(eylül|ekim)('de)))";
      public const string MonthPossessiveSuffixRegex = @"(?<mpsuf>((ocak|şubat|mart|nisan|mayıs|haziran|kasım|aralık)('ın)|(temmuz|ağustos)('un)|eylül'ün|ekim'in))";
      public const string DateUnitRegex = @"(?<unit>yıl|ay|hafta|gün)\b";
      public static readonly string SimpleCasesRegex = $@"\b{DayRegex}\s+{RangeConnectorRegex}\s+{DayRegex}\s+{WrittenMonthRegex}(\s+{YearRegex})?\b";
      public static readonly string MonthWithYear = $@"\b(({WrittenMonthRegex}(\s|,?){YearRegex})|({RelativeRegex}\s(yıl|sene)|seneye)\s{WrittenMonthRegex}(\s+ayı)?)\b";
      public static readonly string OneWordPeriodRegex = $@"\b(({RelativeRegex}\s+)?{WrittenMonthRegex}\s+ayı|(ay|ayın|sene)\s+(başından beri)|({NextPrefixRegex}\s+)?{WrittenMonthRegex}\s+ayından sonra)\b";
      public static readonly string WeekOfMonthRegex = $@"\b(?<wom>({MonthPossessiveSuffixRegex}|({BaseDateTime.FourDigitYearRegex}\s+yılı\s+|{RelativeRegex}\s+yılın\s+)?{WrittenMonthRegex}\s+ayının)\s+(?<cardinal>ilk|birinci|1(.|'inci)|ikinci|2(.|'inci)|üçüncü|3(.|'inci)|dördüncü|4(.|'inci)|beşinci|5(.|'inci)|son)\s+haftası)\b";
      public static readonly string WeekOfYearRegex = $@"\b(?<woy>({YearRegex}\s+yılının|{RelativeRegex}\s+yılın)\s+((?<cardinal>((on|yirmi|otuz|kırk|elli)\s+)?(birinci|ikinci|üçüncü|dördüncü|beşinci|altıncı|yedinci|sekizinci|dokuzuncu|onuncu|yirminci|otuzuncu|kırkıncı|ellinci)|elli birinci|elli ikinci|(1|2|3|4|5)?1(.|'inci)|(1|2|3|4|5)?2(.|'inci)|(1|2|3|4)?3(.|'üncü)|(1|2|3|4)?4(.|'üncü)|(1|2|3|4)?5(.|'inci)|(1|2|3|4)?6(.|'ıncı)|(1|2|3|4)?7(.|'nci)|(1|2|3|4)?8(.|'inci)|(1|2|3|4)?9(.|'uncu))|son)\s+haftası)\b";
      public static readonly string FollowedDateUnit = $@"^\s*{DateUnitRegex}";
      public static readonly string NumberCombinedWithDateUnit = $@"\b(?<num>\d+(\.)?){DateUnitRegex}";
      public const string QuarterTermRegex = @"\b((?<cardinal>birinci|1'inci|1.|ilk|ikinci|2'nci|2.|üçüncü|3'üncü|3.|dördüncü|4'üncü|4.|son)\s+çeyreği)\b";
      public static readonly string QuarterRegex = $@"((({RelativeRegex}\s+)?yılın|{YearRegex}\s+yılının)\s{QuarterTermRegex})";
      public const string HalfYearTermRegex = @"(?<cardinal>birinci|1'inci|1.|ilk|ikinci|2'nci|2.)\s+yarıyıl";
      public static readonly string HalfYearRegex = $@"((({{RelativeRegex}}\s+)?yılın|{YearRegex}\s+yılının)\s+{HalfYearTermRegex})";
      public const string EarlyPrefixRegex = @"\b(?<EarlyPrefix>başı|başında|başlarında)\b";
      public const string MidPrefixRegex = @"\b(?<MidPrefix>ortası|ortasında|ortalarında)\b";
      public const string LaterPrefixRegex = @"\b(?<LatePrefix>sonu|sonunda|sonlarında)\b";
      public static readonly string PrefixPeriodRegex = $@"({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})";
      public const string PrefixDayRegex = @"\b(günün\s+({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex}))$";
      public const string SeasonDescRegex = @"(?<seas>ilkbahar|yaz|sonbahar|kış)";
      public static readonly string SeasonRegex = $@"\b(?<season>({YearRegex}\s+{SeasonDescRegex}ının|{RelativeRegex}\s{SeasonDescRegex}ın)\s{PrefixPeriodRegex})\b";
      public const string WhichWeekRegex = @"\b((?<cardinal>((on|yirmi|otuz|kırk|elli)\s)?(birinci|ikinci|üçüncü|dördüncü|beşinci|altıncı|yedinci|sekizinci|dokuzuncu|onuncu|yirminci|otuzuncu|kırkıncı|ellinci)|elli birinci|elli ikinci|(1|2|3|4|5)?1(.|'inci)|(1|2|3|4|5)?2(.|'inci)|(1|2|3|4)?3(.|'üncü)|(1|2|3|4)?4(.|'üncü)|(1|2|3|4)?5(.|'inci)|(1|2|3|4)?6(.|'ıncı)|(1|2|3|4)?7(.|'nci)|(1|2|3|4)?8(.|'inci)|(1|2|3|4)?9(.|'uncu))|son)\s+hafta\b";
      public const string WeekOfRegex = @"(haftası)";
      public const string MonthOfRegex = @"(ayı)";
      public static readonly string DateYearRegex = $@"(?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})";
      public static readonly string YearSuffix = $@"(,?\s*({DateYearRegex}|{FullTextYearRegex}))";
      public static readonly string OnRegex = $@"({DayRegex}\s+(gününde|günleri))\b";
      public static readonly string ThisRegex = $@"\b(bu(\s+hafta)?\s+{WeekDayRegex}(\s+günü)?)\b";
      public static readonly string LastDateRegex = $@"\b({PreviousPrefixRegex}(\s+hafta)?\s+{WeekDayRegex}(\s+günü)?)\b";
      public static readonly string NextDateRegex = $@"\b(({NextPrefixRegex}(\s+hafta)?|haftaya)\s+{WeekDayRegex}(\s+günü)?)\b";
      public static readonly string SpecialDayRegex = $@"\b((dünden önceki|yarından sonraki)\s+gün|(önceki|sonraki)\s+gün|{RelativeRegex}\s+gün|dün|yarın|bugün)\b";
      public static readonly string RelativeDayRegex = $@"\b({RelativeRegex}\s+gün)\b";
      public static readonly string RelativeMonthRegex = $@"\b({RelativeRegex}\s+ay)\b";
      public static readonly string WeekDayOfMonthRegex = $@"(?<wom>({MonthPossessiveSuffixRegex}|{WrittenMonthRegex}\s+ayının)\s+(?<cardinal>birinci|1'inci|1.|ilk|ikinci|2'nci|2.|üçüncü|3'üncü|3.|dördüncü|4'üncü|4.|beşinci|5'inci|5.|son)\s+{WeekDayRegex}(\s+günü)?)";
      public static readonly string DateExtractor1 = $@"\b({DayRegex}\s*{WrittenMonthRegex})((\s*\(\s*{WeekDayRegex}\s*\))|\s*,?\s+{WeekDayRegex}(\s+günü)?)?";
      public static readonly string DateExtractor2 = $@"\b({DayRegex}\s*{WrittenMonthRegex}\s*{DateYearRegex})((\s*\(\s*{WeekDayRegex}\s*\))|\s*,?\s+{WeekDayRegex}(\s+günü)?)?";
      public static readonly string DateExtractor3 = $@"\b({DayRegex}\s*[/\\.]\s*{MonthNumRegex}\s*[/\\.]\s*{DateYearRegex})((\s*\(\s*{WeekDayRegex}\s*\))|\s*,?\s+{WeekDayRegex}(\s+günü)?)?";
      public static readonly string DateExtractor4 = $@"({RelativeRegex}\s+)?({WeekDayRegex}\s+)?(\({DayRegex}\s*{WrittenMonthRegex}(\s*{DateYearRegex})?\))\b";
      public static readonly string DateExtractor5 = $@"({RelativeRegex}\s+)?({WeekDayRegex}\s+)?({DayRegex}\s*[/\\.]\s*{MonthNumRegex}\s*[/\\.]\s*{DateYearRegex})\b";
      public static readonly string DateExtractor6 = $@"\b({RelativeRegex}\s+ayın\s+{WrittenDaySuffixRegex})\b";
      public static readonly string DateExtractor7 = $@"\b({MonthPossessiveSuffixRegex}\s+({{WrittenDaySuffixRegex|{DaySuffixRegex}))\b";
      public static readonly string OfMonth = $@"^{WrittenMonthRegex}\s*ayının";
      public static readonly string MonthEnd = $@"{WrittenMonthRegex}\s*(ayı)?\s*$";
      public static readonly string WeekDayEnd = $@"(bu\s+)?{WeekDayRegex}\s*,?\s*$";
      public const string RangeUnitRegex = @"\b(?<unit>hafta|ay|yıl)\b";
      public const string HourNumRegex = @"\b(?<hournum>bir|iki|üç|dört|beş|altı|yedi|sekiz|dokuz|on|on bir|on iki)\b";
      public const string AtHourNumRegex = @"\b(?<hournum>birde|ikide|üçte|dörtte|beşte|altıda|yedide|sekizde|dokuzda|onda|on birde|on ikide|1'de|2'de|3'te|4'te|5'te|6'da|7'de|8'de|9'da|10'da|11'de|12'de|13'te|14'te|15'te|16'da|17'de|18'de|19'da|20'de|21'de|22'de|23'te|24'te)\b";
      public const string MinuteNumRegex = @"(?<minnum>((on|yirmi|otuz|kırk|elli)\s)?(bir|iki|üç|dört|beş|altı|yedi|sekiz|dokuz)|on|yirmi|otuz|kırk|elli)";
      public const string AtMinuteNumRegex = @"(?<minnum>((on|yirmi|otuz|kırk|elli)\s)?(birde|ikide|üçte|dörtte|beşte|altıda|yedide|sekizde|dokuzda)|onda|yirmide|otuzda|kırkta|ellide)";
      public const string AtMinuteRegex = @"((1|2|3|4|5)(1'de|2'de|3'te|4'te|5'te|6'da|7'de|8'de|9'da)|10'da|20'de|30'da|40'ta|50'de)";
      public const string PmRegex = @"(?<pm>(öğle|öğlen|öğlen civarı|öğle saatlerinde|öğleden sonra|akşam|akşamleyin|akşama doğru|akşam saatlerinde|akşamüstü|gece yarısı|gece yarısına doğru|gece|geceleyin|gece boyunca))";
      public const string AmRegex = @"(?<am>(sabah|sabahleyin|sabah saatlerinde|öğleden önce))";
      public const string NightRegex = @"\b(gece yarısı|gece)\b";
      public const string CommonDatePrefixRegex = @"^[\.]";
      public static readonly string LessThanOneHour = $@"(?<lth>(çeyrek|{BaseDateTime.DeltaMinuteRegex}|{MinuteNumRegex}))";
      public static readonly string WrittenTimeRegex = $@"(?<writtentime>{HourNumRegex}\s+{MinuteNumRegex})";
      public static readonly string AtWrittenTimeRegex = $@"(?<writtentime>{HourNumRegex}\s+{AtMinuteNumRegex})";
      public const string HourNumPastSuffixRegex = @"\b(biri|ikiyi|üçü|dördü|beşi|altıyı|yediyi|sekizi|dokuzu|onu|on biri|on ikiyi|1'i|2'yi|3'ü|4'ü|5'i|6'yı|7'yi|8'i|9'u|10'u|11'i|12'yi)\b";
      public const string HourNumToSuffixRegex = @"\b(bire|ikiye|üçe|dörde|beşe|altıya|yediye|sekize|dokuza|ona|on bire|on ikiye|1'e|2'ye|3'e|4'e|5'e|6'ya|7'ye|8'e|9'a|10'a|11'e|12'ye)\b";
      public static readonly string TimeSuffix = $@"(?<suffix>({HourNumPastSuffixRegex}\s{LessThanOneHour}\s(geçe|geçiyor)|{HourNumToSuffixRegex}\s{LessThanOneHour}\s(kala|var)))";
      public static readonly string TimePrefix = $@"(?<prefix>{AmRegex}|{PmRegex})";
      public static readonly string TimeHalfRegex = $@"\b(({HourNumRegex}|{HourRegex})\s+(buçuk|otuz))\b";
      public static readonly string AtTimeHalfRegex = $@"\b(({HourNumRegex},{HourRegex})\s+(buçukta|otuzda))\b";
      public static readonly string BasicTime = $@"\b(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{HourRegex})";
      public const string MidnightRegex = @"(?<midnight>gece yarısı)";
      public const string MidmorningRegex = @"(?<midmorning>kuşluk vakti)";
      public const string MidafternoonRegex = @"(?<midafternoon>öğleden sonra)";
      public const string MiddayRegex = @"(?<midday>öğle|öğlen|öğle vakti|gün ortası)";
      public static readonly string MidTimeRegex = $@"(?<mid>{MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex})";
      public static readonly string AtRegex = $@"\b({TimePrefix}\s+)?(saat\s)?({AtWrittenTimeRegex}|{AtHourNumRegex}|{HourRegex}:{AtMinuteRegex}|(gece yarısı|gün ortası)nda|(kuşluk vakti|öğle vakti)nde)\b";
      public const string AtHourWithZeroMinRegex = @"(0?1:00'de|0?2:00'de|0?3:00'te|0?4:00'te|0?5:00'te|0?6:00'da|0?7:00'de|0?8:00'de|0?9:00'da|10:00'da|11:00'de|12:00'de|13:00'te|14:00'te|15:00'te|16:00'da|17:00'de|18:00'de|19:00'da|20:00'de|21:00'de|22:00'de|23:00'te|24:00'te|00:00'da)";
      public const string TimeUnitRegex = @"([^A-Za-z]{1,}|\b)(?<unit>saat|sa.|dakika|dk.|saniye|sn.)\b";
      public const string RestrictedTimeUnitRegex = @"(?<unit>saat|dakika|saniye)\b";
      public const string AtDateTimeUnitRegex = @"(?<unit>yıllarda|senelerde|aylarda|haftalarda|günlerde|saatlerde|dakikalarda|saniyelerde)\b";
      public const string FivesRegex = @"(?<tens>(beş|(((on|yirmi|otuz|kırk|elli)\s)?beş?))\b";
      public const string HourRegex = @"(?<hour>00|01|02|03|04|05|06|07|08|09|0|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|1|2|3|4|5|6|7|8|9)";
      public const string TwoDigitHourRegex = @"(?<hour>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24)";
      public const string HourNumFromRegex = @"\b(?<hour>(00|06|09|0|10|16|19|6|9)'dan|(01|02|07|08|11|12|17|18|20|21|22|1|2|7|8)'den|(03|04|05|13|14|15|23|24|3|4|5)'ten)\b";
      public const string HourNumToRegex = @"\b(?<hour>(00|09|0|10|19|9)'a|(01|03|04|05|08|11|13|14|15|18|21|23|24|1||3|4|5|8)'e|(02|07|12|17|22|2|7|20)'ye|(06|16|6)'ye)\b";
      public const string MinuteFromRegex = @"(?<min>(01|02|07|08|11|12|17|18|20|21|22|27|28|31|32|37|38|41|42|47|48|50|51|52|57|58|1|2|7|8)'den|(03|04|05|13|14|15|23|24|25|33|34|35|43|44|45|53|54|55|3|4|5)'ten|(06|09|10|16|19|26|29|30|36|39|46|49|56|59|6|9)'dan|40'tan)";
      public const string MinuteToRegex = @"(?<min>(01|03|04|05|08|11|13|14|15|18|21|23|24|25|28|31|33|34|35|38|41|43|44|45|48|51|53|54|55|58|1|3|4|5|8)'e|(02|07|12|17|20|22|27|32|37|42|47|50|52|57|2|7)'ye|(06|16|26|36|46|56|6|9)'ya|(09|10|19|29|30|39|40|49|59)'a)";
      public const string HourWithMinuteZeroFromRegex = @"\b(?<hour>(00|06|09|0|10|16|19|6|9):00'dan|(01|02|07|08|11|12|17|18|20|21|22|1|2|7|8):00'den|(03|04|05|13|14|15|23|24|3|4|5):00'ten)\b";
      public const string HourWithMinuteZeroToRegex = @"\b(?<hour>(00|09|0|10|19|9):00'a|(01|03|04|05|08|11|13|14|15|18|21|23|24|1||3|4|5|8):00'e|(02|07|12|17|22|2|7|20):00'ye|(06|16|6):00'ye)\b";
      public const string PeriodHourNumRegex = @"\b(?<hour>sıfır|bir|iki|üç|dört|beş|altı|yedi|sekiz|dokuz|on|on bir|on iki|on üç|on dört|on beş|on altı|on yedi|on sekiz|on dokuz|yirmi|yirmi bir|yirmi iki|yirmi üç|yirmi dört)\b";
      public const string PeriodHourNumFromRegex = @"\b(?<hour>sıfırdan|birden|ikiden|üçten|dörtten|beşten|altıdan|yediden|sekizden|dokuzdan|ondan|on birden|on ikiden|on üçten|on dörtten|on beşten|on altıdan|on yediden|on sekizden|on dokuzdan|yirmiden|yirmi birden|yirmi ikiden|yirmi üçten|yirmi dörtten)\b";
      public const string PeriodHourNumToRegex = @"\b(?<hour>sıfıra|bire|ikiye|üçe|dörde|beşe|altıya|yediye|sekize|dokuza|ona|on bire|on ikiye|on üçe|on dörde|on beşe|on altıya|on yediye|on sekize|on dokuza|yirmiye|yirmi bire|yirmi ikiye|yirmi üçe|yirmi dörde)\b";
      public static readonly string ConnectNumRegex = $@"\b{HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)";
      public static readonly string TimeRegexWithDotConnector = $@"({HourRegex}(\s*\.\s*){BaseDateTime.MinuteRegex})";
      public static readonly string TimeRegex1 = $@"\b({TimePrefix}\s+)?(saat\s)?({WrittenTimeRegex}|{HourNumRegex}|{HourRegex})";
      public static readonly string TimeRegex2 = $@"\b({TimePrefix}\s+)?(saat\s)?({HourRegex}:{BaseDateTime.MinuteRegex}:{BaseDateTime.SecondRegex})";
      public static readonly string TimeRegex3 = $@"\b({TimePrefix}\s+)?(saat\s)?({HourRegex}:{BaseDateTime.MinuteRegex})";
      public static readonly string TimeRegex4 = $@"\b({TimePrefix}\s+)?(saat\s)?{TimeSuffix}\b";
      public static readonly string TimeRegex5 = $@"\b({TimePrefix}\s+)?(saat\s)?({AroundRegex})\b";
      public static readonly string TimeRegex6 = $@"\b({TimePrefix}\s+)?(saat\s)?({TimeHalfRegex})";
      public static readonly string TimeRegex7 = $@"\b({TimePrefix}\s+)?(saat\s)?({AtHourWithZeroMinRegex}|{HourRegex}:{BaseDateTime.MinuteRegex}:{AtMinuteRegex})";
      public static readonly string TimeRegex8 = $@"\b({TimePrefix}\s+)?(saat\s)?({AtTimeHalfRegex})";
      public static readonly string PureNumFromTo1 = $@"(({TimePrefix})\s*)?(saat\s)?{{PeriodHourNumFromRegex}}\s*(({TimePrefix})\s*)?{{PeriodHourNumToRegex}}(\s+{TillRegex})?";
      public static readonly string PureNumFromTo2 = $@"(({TimePrefix})\s*)?(saat\s)?{HourNumFromRegex}\s*(({TimePrefix})\s*)?({HourNumToRegex}\s+)(\s+{TillRegex})?";
      public static readonly string PureNumBetweenAnd = $@"(({TimePrefix})\s*)?({HourRegex}|{PeriodHourNumRegex}|({TwoDigitHourRegex}{BaseDateTime.TwoDigitMinuteRegex}))\s*{RangeConnectorRegex}\s*(({TimePrefix})\s*)?({HourRegex}|{PeriodHourNumRegex}|({TwoDigitHourRegex}{BaseDateTime.TwoDigitMinuteRegex}))({RangeSuffixRegex}\s+)?";
      public static readonly string SpecificTimeFromTo = $@"(?<time1>((\b{TimePrefix}\s+)?({HourRegex}(\s*)?:(\s*)?{MinuteFromRegex}|{HourWithMinuteZeroFromRegex})|{HourNumFromRegex}|{{PeriodHourNumFromRegex}}))\s*(?<time2>((\b{TimePrefix}\s+)?({HourRegex}(\s*)?:(\s*)?{MinuteToRegex}|{HourWithMinuteZeroToRegex})|{HourNumToRegex}|{PeriodHourNumToRegex}))\s*{TillRegex}\s*";
      public static readonly string SpecificTimeBetweenAnd = $@"(?<time1>({TimeRegex2}|{HourRegex}|{PeriodHourNumRegex}))\s*{RangeConnectorRegex}\s*(?<time2>({TimeRegex2}|{HourRegex}|{PeriodHourNumRegex}))({RangeSuffixRegex}\s+)?";
      public const string TimeOfDayRegex = @"\b(?<timeOfDay>((sabahın|öğlenin|akşamın|gecenin|günün|mesainin)\s+((erken|geç)\s(saatinde|saatlerinde))))\b";
      public static readonly string SpecificTimeOfDayRegex = $@"\b(({RelativeRegex}\s+{TimeOfDayRegex})\b|\bbu\s(sabah|akşam|gece))\b";
      public static readonly string TimeFollowedUnit = $@"^\s*{TimeUnitRegex}";
      public static readonly string TimeNumberCombinedWithUnit = $@"\b(?<num>\d+(\.\d*)?){TimeUnitRegex}";
      public static readonly string[] BusinessHourSplitStrings = { @"mesai" };
      public const string NowRegex = @"\b(?<now>(hemen\s+)?şimdi|en kısa\s(sürede|zamanda)|ilk fırsatta|bir an\s(önce|evvel)|hemen|vakit geçirmeden|(mümkün olduğunca|olabildiğince)\sçabuk|son\s(dönemlerde|zamanlarda|günlerde)|geçenlerde|yakınlarda|(bu|şu)\sıralar|yakın zamanda|(bu|şu|son)\sgünlerde|önceden|evvelce|bundan önce|daha önce)\b";
      public const string SuffixRegex = @"\b(sabah|sabahleyin|sabahtan|öğleden sonra|akşam|akşamleyin|gece|geceleyin)\b";
      public const string DateTimeTimeOfDayRegex = @"\b(?<timeOfDay>sabah|öğle|öğlen|akşam|gece)\b";
      public static readonly string DateTimeSpecificTimeOfDayRegex = $@"\b(({RelativeRegex}\s+{DateTimeTimeOfDayRegex})\b|\b(bu akşam|bu gece))\b";
      public const string UnspecificEndOfRegex = @"\b(günün sonu)\b";
      public const string PeriodTimeOfDayRegex = @"\b(((?<timeOfDay>sabahın|öğlenin|akşamın|gecenin)\s(erken|geç)\ssaatlerinde)|((?<timeOfDay>sabah|öğlen|akşam|gece)\s(eken|geç)\ssaatlerde))\b";
      public static readonly string PeriodSpecificTimeOfDayRegex = $@"\b(({RelativeRegex}\s+{PeriodTimeOfDayRegex})\b|\b(bu akşam|bu gece))\b";
      public const string LessThanRegex = @"\b(daha az)\b";
      public const string MoreThanRegex = @"\b(daha fazla)\b";
      public static readonly string DurationUnitRegex = $@"(?<unit>{DateUnitRegex}|saat|sa\.?|dakika|dk\.?|saniye|s\.?|sn\.?)\b";
      public const string PeriodicRegex = @"\b(?<periodic>günlük|aylık|ayda bir|haftalık|(iki\s)?haftada bir|her hafta|yıllık|senelik|yılda bir|her sene|senede bir)\b";
      public static readonly string EachUnitRegex = $@"(?<each>(her)(bir)?\s*{DurationUnitRegex})";
      public const string EachPrefixRegex = @"\b(?<each>(her)\s*$)";
      public const string SetEachRegex = @"\b(?<each>(her)\s*)";
      public const string SetLastRegex = @"(?<last>izleyen|sonraki|ertesi|gelecek|bu|geçen|son|önceki|evvelsi|şimdiki)";
      public const string EachDayRegex = @"^\s*her\s*gün\b";
      public static readonly string NumberCombinedWithDurationUnit = $@"\b(?<num>\d+(\.\d*)?)(-)?{DurationUnitRegex}";
      public static readonly string HalfUnitRegex = $@"\b((?<half>yarım\s+)?)\s+{DurationUnitRegex}";
      public const string DuringRegex = @"\b(?<unit>gün|hafta|ay|yıl)\s+boyunca\b";
      public const string AllRegex = @"\b(?<all>(tüm|bütün)\s+(?<unit>gün|hafta|ay|yıl)|gün boyu)\b";
      public const string HalfRegex = @"(?<half>yarım\s+(?<unit>saat|gün|hafta|ay|yıl))\b";
      public const string ConjunctionRegex = @"\b(ve|ile)\b";
      public static readonly string HolidayRegex1 = $@"\b(({YearRegex}(\s+yılının)?|{RelativeRegex}\s+yıl)\s+)?(?<holiday>temiz pazartesi|yılbaşı gecesi|noel günü|noel|yuandan festivali|yuandan|paskalya|yılbaşı|şükran günü)\b";
      public static readonly string HolidayRegex2 = $@"\b(({YearRegex}(\s+yılının)?|{RelativeRegex}\s+yıl)\s+)?(?<holiday>işçi bayramı)\b";
      public static readonly string HolidayRegex3 = $@"(({YearRegex}(\s+yılının)?|{RelativeRegex}\s+yıl)\s+)?(?<holiday>(sevgililer|anneler|babalar|öğretmenler|kadınlar|martin luther king)\s+günü)";
      public const string AMTimeRegex = @"(?<am>sabah)";
      public const string PMTimeRegex = @"\b(?<pm>öğle|öğlen|öğleden sonra|akşam|gece)\b";
      public const string AgoRegex = @"\b((?<day>dünden|bugünden)\s+(önce|evvel))\b";
      public const string LaterRegex = @"\b((?<day>yarından|bugünden)\s+(itibaren|sonra))\b";
      public const string InConnectorRegex = @"\b";
      public const string SinceNumSuffixRegex = @"\b^(?!0)(\d{0,3}((1|2|7|8)'den|(3|4|5)'ten|(6|9)'dan)|\d{0,2}(10'dan|20'den|30'dan|40'tan|50'den|60'tan|70'ten|80'den|90'dan|00'den)|\d000'den)\b";
      public static readonly string SinceYearSuffixRegex = $@"({YearSuffix}\s+(yılından beri)|{SinceYearSuffixRegex}\s+beri)";
      public static readonly string WithinNextPrefixRegex = $@"\b((?<next>{NextPrefixRegex})?\s+?\d+\s+(hafta|ay|yıl)\s+(içinde))\b";
      public const string MorningStartEndRegex = @"(^sabah$)";
      public const string AfternoonStartEndRegex = @"(^öğle$)";
      public const string EveningStartEndRegex = @"(^akşam$)";
      public const string NightStartEndRegex = @"(^(geceleyin|bu gece|gece))|((geceleyin|bu gece|gece)$)";
      public const string InexactNumberRegex = @"\b(birkaç)\b";
      public static readonly string InexactNumberUnitRegex = $@"({InexactNumberRegex})\s+({DurationUnitRegex})";
      public static readonly string RelativeTimeUnitRegex = $@"(({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+({TimeUnitRegex}))";
      public static readonly string RelativeDurationUnitRegex = $@"((?<=({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+)({DurationUnitRegex}))";
      public static readonly string RelativeAtDateTimeUnitRegex = $@"(({NextPrefixRegex}|{PreviousPrefixRegex}|{ThisPrefixRegex})\s+({AtDateTimeUnitRegex}))";
      public static readonly string ReferenceDatePeriodRegex = $@"\b{ReferencePrefixRegex}\s+(?<duration>hafta|ay|yıl|sene|yüzyıl|hafta sonu)\b";
      public static readonly string ReferenceDatePeriodPluralRegex = $@"\b{ReferencePrefixRegex}\s+(?<duration>(hafta|ay|yıl|yüzyıl)lar|seneler|hafta sonları)\b";
      public static readonly string AroundRegex = $@"\b({HourNumRegex}|{HourRegex}|{WrittenTimeRegex})\s(civarı|civarında|sularında|dolaylarında)\b";
      public const string SingleAmbiguousMonthRegex = @"^(the\s+)?(ocak|mayıs|ekim|aralık)$";
      public const string UnspecificDatePeriodRegex = @"^(gün|hafta|hafta sonu|ay|yıl)$";
      public const string FlexibleDayRegex = @"(?<DayOfMonth>[A-Za-z\d]+(\s([A-Za-z]+))?)";
      public static readonly string ForTheRegex = $@"\b(({FlexibleDayRegex})(?=(')))";
      public static readonly string WeekDayAndDayOfMonthRegex = $@"\b({FlexibleDayRegex}\s{WeekDayRegex})\b";
      public static readonly string WeekDayAndDayRegex = $@"\b{WeekDayRegex}\s+{DayRegex}\b";
      public const string RestOfDateRegex = @"\b(((bu\s)?(haftanın|ayın|yılın)|haftamın|ayımın|yılımın)\s+(geri kalanı))\b";
      public const string RestOfDateTimeRegex = @"\b((günün|günümün|bugünün)\s+(geri kalanı))\b";
      public const string MealTimeRegex = @"\b(at\s+)?(?<mealTime>öğle yemeği zamanı|öğle yemeği vakti)\b";
      public static readonly string WeekWithWeekDayRangeRegex = $@"\b((?<week>({NextPrefixRegex}|{PreviousPrefixRegex}|bu)\s+hafta)(({WeekDayRegex}\s+ile\s+{WeekDayRegex}\s+arasında)|({WeekDayRegex}\s+gününden\s+{WeekDayRegex}\s+gününe\s+{TillRegex})))\b";
      public const string GeneralEndingRegex = @"^\s*((\.,)|\.|,|!|\?)?\s*$";
      public const string MiddlePauseRegex = @"\s*(,)\s*";
      public const string DurationConnectorRegex = @"^\s*(?<connector>\s+|ile|ila|,)\s*$";
      public const string PrefixArticleRegex = @"\b";
      public const string OrRegex = @"\s*((\b|,\s*)(ve|veya)\b|,)\s*";
      public static readonly string YearPlusNumberRegex = $@"\b(year\s+((?<year>(\d{{3,4}}))|{FullTextYearRegex}))\b";
      public static readonly string NumberAsTimeRegex = $@"\b({WrittenTimeRegex}|{PeriodHourNumRegex}|{HourRegex})\b";
      public static readonly string TimeBeforeAfterRegex = $@"\b({PeriodHourNumFromRegex}|{HourNumFromRegex}|{HourRegex}:{MinuteFromRegex})\s+(önce|sonra)\b";
      public const string DecadeRegex = @"(?<decade>yirmiler|otuzlar|kırklar|elliler|altmışlar|yetmişler|seksenler|doksanlar|iki binler|(yirmili|otuzlu|kırklı|ellili|altmışlı|yetmişli|seksenli|doksanlı|iki binli)\syıllar)";
      public static readonly string YearPeriodRegex = $@"(({YearRegex}\s+(yılından)\s+{YearRegex}\s+(yılına kadar))|({YearRegex}\s*({RangeConnectorRegex})\s*{YearRegex}\s+((yılları\s)?arasında|yıllarında|yılları sırasında)))";
      public const string FromNumSuffixRegex = @"((1|2|7|8)'den|(3|4|5)'ten|(6|9)'dan|10'dan|20'den|30'dan|40'tan|50'den|60'tan|70'ten|80'den|90'dan|00'den|000'den)\b";
      public const string ToNumSuffixRegex = @"((1|2|7|20|50)'ye|(3|4|5|8|70|80|00|000)'e|6'ya|(9|10|30|40|60|90)'a)\b";
      public static readonly string ComplexDatePeriodRegex = $@"((?<start>.+{FromNumSuffixRegex})\s*(?<end>.+{ToNumSuffixRegex})\s*({TillRegex})|(?<start>.+)\s*({RangeConnectorRegex})\s*(?<end>.+)\s*{RangeSuffixRegex})";
      public static readonly Dictionary<string, string> UnitMap = new Dictionary<string, string>
        {
            { @"yüzyıl", @"100Y" },
            { @"yüzyıllar", @"100Y" },
            { @"yıl", @"Y" },
            { @"yıllar", @"Y" },
            { @"ay", @"MO" },
            { @"aylar", @"MO" },
            { @"hafta", @"W" },
            { @"haftalar", @"W" },
            { @"gün", @"D" },
            { @"günler", @"D" },
            { @"saat", @"H" },
            { @"saatler", @"H" },
            { @"dakika", @"M" },
            { @"dakikalar", @"M" },
            { @"dk.", @"M" },
            { @"saniye", @"S" },
            { @"saniyeler", @"S" },
            { @"sn.", @"S" }
        };
      public static readonly Dictionary<string, long> UnitValueMap = new Dictionary<string, long>
        {
            { @"yüzyıl", 3153600000 },
            { @"yüzyıllar", 3153600000 },
            { @"yy.", 3153600000 },
            { @"yıl", 31536000 },
            { @"yıllar", 31536000 },
            { @"ay", 2592000 },
            { @"aylar", 2592000 },
            { @"hafta", 604800 },
            { @"haftalar", 604800 },
            { @"gün", 86400 },
            { @"günler", 86400 },
            { @"saat", 3600 },
            { @"saatler", 3600 },
            { @"sa.", 3600 },
            { @"dakika", 60 },
            { @"dakikalar", 60 },
            { @"dk.", 60 },
            { @"saniye", 1 },
            { @"saniyeler", 1 },
            { @"sn.", 1 }
        };
      public static readonly Dictionary<string, string> SeasonMap = new Dictionary<string, string>
        {
            { @"ilkbahar", @"SP" },
            { @"yaz", @"SU" },
            { @"sonbahar", @"FA" },
            { @"kış", @"WI" }
        };
      public static readonly Dictionary<string, int> SeasonValueMap = new Dictionary<string, int>
        {
            { @"SP", 3 },
            { @"SU", 6 },
            { @"FA", 9 },
            { @"WI", 12 }
        };
      public static readonly Dictionary<string, int> CardinalMap = new Dictionary<string, int>
        {
            { @"birinci", 1 },
            { @"1''inci", 1 },
            { @"1.", 1 },
            { @"ikinci", 2 },
            { @"2''inci", 2 },
            { @"2.", 2 },
            { @"üçüncü", 3 },
            { @"3''üncü", 3 },
            { @"3.", 3 },
            { @"dördüncü", 4 },
            { @"4''üncü", 4 },
            { @"4.", 4 },
            { @"beşinci", 5 },
            { @"5''inci", 5 },
            { @"5.", 5 }
        };
      public static readonly Dictionary<string, int> DayOfWeek = new Dictionary<string, int>
        {
            { @"pazartesi", 1 },
            { @"salı", 2 },
            { @"çarşamba", 3 },
            { @"perşembe", 4 },
            { @"cuma", 5 },
            { @"cumartesi", 6 },
            { @"pazar", 0 },
            { @"pzt", 1 },
            { @"sal", 2 },
            { @"çrş", 3 },
            { @"per", 4 },
            { @"cum", 5 },
            { @"cts", 6 },
            { @"paz", 0 }
        };
      public static readonly Dictionary<string, int> MonthOfYear = new Dictionary<string, int>
        {
            { @"ocak", 1 },
            { @"şubat", 2 },
            { @"mart", 3 },
            { @"nisan", 4 },
            { @"mayıs", 5 },
            { @"haziran", 6 },
            { @"temmuz", 7 },
            { @"ağustos", 8 },
            { @"eylül", 9 },
            { @"ekim", 10 },
            { @"kasım", 11 },
            { @"aralık", 12 },
            { @"oca", 1 },
            { @"şub", 2 },
            { @"mar", 3 },
            { @"nis", 4 },
            { @"may", 5 },
            { @"haz", 6 },
            { @"tem", 7 },
            { @"ağu", 8 },
            { @"eyl", 9 },
            { @"eki", 10 },
            { @"kas", 11 },
            { @"ara", 12 },
            { @"1", 1 },
            { @"2", 2 },
            { @"3", 3 },
            { @"4", 4 },
            { @"5", 5 },
            { @"6", 6 },
            { @"7", 7 },
            { @"8", 8 },
            { @"9", 9 },
            { @"10", 10 },
            { @"11", 11 },
            { @"12", 12 },
            { @"01", 1 },
            { @"02", 2 },
            { @"03", 3 },
            { @"04", 4 },
            { @"05", 5 },
            { @"06", 6 },
            { @"07", 7 },
            { @"08", 8 },
            { @"09", 9 }
        };
      public static readonly Dictionary<string, int> Numbers = new Dictionary<string, int>
        {
            { @"sıfır", 0 },
            { @"bir", 1 },
            { @"iki", 2 },
            { @"üç", 3 },
            { @"dört", 4 },
            { @"beş", 5 },
            { @"altı", 6 },
            { @"yedi", 7 },
            { @"sekiz", 8 },
            { @"dokuz", 9 },
            { @"on", 10 },
            { @"on bir", 11 },
            { @"on iki", 12 },
            { @"on üç", 13 },
            { @"on dört", 14 },
            { @"on beş", 15 },
            { @"on altı", 16 },
            { @"on yedi", 17 },
            { @"on sekiz", 18 },
            { @"on dokuz", 19 },
            { @"yirmi", 20 },
            { @"yirmi bir", 21 },
            { @"yirmi iki", 22 },
            { @"yirmi üç", 23 },
            { @"yirmi dört", 24 },
            { @"yirmi beş", 25 },
            { @"yirmi altı", 26 },
            { @"yirmi yedi", 27 },
            { @"yirmi sekiz", 28 },
            { @"yirmi dokuz", 29 },
            { @"otuz", 30 },
            { @"otuz bir", 31 },
            { @"otuz iki", 32 },
            { @"otuz üç", 33 },
            { @"otuz dört", 34 },
            { @"otuz beş", 35 },
            { @"otuz altı", 36 },
            { @"otuz yedi", 37 },
            { @"otuz sekiz", 38 },
            { @"otuz dokuz", 39 },
            { @"kırk", 40 },
            { @"kırk bir", 41 },
            { @"kırk iki", 42 },
            { @"kırk üç", 43 },
            { @"kırk dört", 44 },
            { @"kırk beş", 45 },
            { @"kırk altı", 46 },
            { @"kırk yedi", 47 },
            { @"kırk sekiz", 48 },
            { @"kırk dokuz", 49 },
            { @"elli", 50 },
            { @"elli bir", 51 },
            { @"elli iki", 52 },
            { @"elli üç", 53 },
            { @"elli dört", 54 },
            { @"elli beş", 55 },
            { @"elli altı", 56 },
            { @"elli yedi", 57 },
            { @"elli sekiz", 58 },
            { @"elli dokuz", 59 },
            { @"altmış", 60 },
            { @"altmış bir", 61 },
            { @"altmış iki", 62 },
            { @"altmış üç", 63 },
            { @"altmış dört", 64 },
            { @"altmış beş", 65 },
            { @"altmış altı", 66 },
            { @"altmış yedi", 67 },
            { @"altmış sekiz", 68 },
            { @"altmış dokuz", 69 },
            { @"yetmiş", 70 },
            { @"yetmiş bir", 71 },
            { @"yetmiş iki", 72 },
            { @"yetmiş üç", 73 },
            { @"yetmiş dört", 74 },
            { @"yetmiş beş", 75 },
            { @"yetmiş altı", 76 },
            { @"yetmiş yedi", 77 },
            { @"yetmiş sekiz", 78 },
            { @"yetmiş dokuz", 79 },
            { @"seksen", 80 },
            { @"seksen bir", 81 },
            { @"seksen iki", 82 },
            { @"seksen üç", 83 },
            { @"seksen dört", 84 },
            { @"seksen beş", 85 },
            { @"seksen altı", 86 },
            { @"seksen yedi", 87 },
            { @"seksen sekiz", 88 },
            { @"seksen dokuz", 89 },
            { @"doksan", 90 },
            { @"doksan bir", 91 },
            { @"doksan iki", 92 },
            { @"doksan üç", 93 },
            { @"doksan dört", 94 },
            { @"doksan beş", 95 },
            { @"doksan altı", 96 },
            { @"doksan yedi", 97 },
            { @"doksan sekiz", 98 },
            { @"doksan dokuz", 99 },
            { @"yüz", 100 }
        };
      public static readonly Dictionary<string, int> DayOfMonth = new Dictionary<string, int>
        {
            { @"1", 1 },
            { @"2", 2 },
            { @"3", 3 },
            { @"4", 4 },
            { @"5", 5 },
            { @"6", 6 },
            { @"7", 7 },
            { @"8", 8 },
            { @"9", 9 },
            { @"10", 10 },
            { @"11", 11 },
            { @"12", 12 },
            { @"13", 13 },
            { @"14", 14 },
            { @"15", 15 },
            { @"16", 16 },
            { @"17", 17 },
            { @"18", 18 },
            { @"19", 19 },
            { @"20", 20 },
            { @"21", 21 },
            { @"22", 22 },
            { @"23", 23 },
            { @"24", 24 },
            { @"25", 25 },
            { @"26", 26 },
            { @"27", 27 },
            { @"28", 28 },
            { @"29", 29 },
            { @"30", 30 },
            { @"31", 31 }
        };
      public static readonly Dictionary<string, double> DoubleNumbers = new Dictionary<string, double>
        {
            { @"yarım", 0.5 },
            { @"çeyrek", 0.25 }
        };
      public static readonly Dictionary<string, IEnumerable<string>> HolidayNames = new Dictionary<string, IEnumerable<string>>
        {
            { @"paskalya", new string[] { @"paskalya" } },
            { @"babalar", new string[] { @"babalargünü" } },
            { @"anneler", new string[] { @"annelergünü" } },
            { @"şükran", new string[] { @"şükrangünü" } },
            { @"martinlutherking", new string[] { @"martinlutherkinggünü" } },
            { @"işçi", new string[] { @"işçibayramı" } },
            { @"yuandan", new string[] { @"yuandanfestivali", @"yuandan" } },
            { @"çocukbayramı", new string[] { @"ulusalegemenlikveçocukbayramı", @"çocukbayramı" } },
            { @"öğretmenlergünü", new string[] { @"öğretmenlergünü" } },
            { @"kadınlargünü", new string[] { @"kadınlargünü" } },
            { @"noel", new string[] { @"noelgünü", @"noel" } },
            { @"yeniyıl", new string[] { @"yeniyıl" } },
            { @"yılbaşı", new string[] { @"yılbaşı" } },
            { @"sevgililergünü", new string[] { @"sevgililergünü" } },
            { @"halloween", new string[] { @"halloween" } },
            { @"noelarifesi", new string[] { @"noelarifesi" } },
            { @"yılbaşıgecesi", new string[] { @"yılbaşıgecesi" } }
        };
      public static readonly Dictionary<string, int> WrittenDecades = new Dictionary<string, int>
        {
            { @"onlu yıllar", 10 },
            { @"onlar", 10 },
            { @"yirmili yıllar", 20 },
            { @"yirmiler", 20 },
            { @"otuzlu yıllar", 30 },
            { @"otuzlar", 30 },
            { @"kırklı yıllar", 40 },
            { @"kırklar", 40 },
            { @"ellili yıllar", 50 },
            { @"elliler", 50 },
            { @"altmışlı yıllar", 60 },
            { @"altmışlar", 60 },
            { @"yetmişli yıllar", 70 },
            { @"yetmişler", 70 },
            { @"seksenli yıllar", 80 },
            { @"seksenler", 80 },
            { @"doksanlı yıllar", 90 },
            { @"doksanlar", 90 }
        };
      public static readonly Dictionary<string, int> SpecialDecadeCases = new Dictionary<string, int>
        {
            { @"iki binler", 2000 },
            { @"iki binli yıllar", 2000 }
        };
      public const string DefaultLanguageFallback = @"DMY";
      public static readonly IList<string> SuperfluousWordList = new List<string>
        {
            @"tercihen",
            @"peki ya",
            @"belki",
            @"farzet",
            @"gibi"
        };
      public static readonly string[] DurationDateRestrictions = { @"bugün", @"şimdi", @"şu an" };
      public static readonly IList<string> MorningTermList = new List<string>
        {
            @"sabah"
        };
      public static readonly IList<string> AfternoonTermList = new List<string>
        {
            @"öğle",
            @"öğlen"
        };
      public static readonly IList<string> EveningTermList = new List<string>
        {
            @"akşam"
        };
      public static readonly IList<string> DaytimeTermList = new List<string>
        {
            @"gündüz"
        };
      public static readonly IList<string> NightTermList = new List<string>
        {
            @"gece"
        };
      public static readonly IList<string> SameDayTerms = new List<string>
        {
            @"bugün"
        };
      public static readonly IList<string> PlusOneDayTerms = new List<string>
        {
            @"yarın"
        };
      public static readonly IList<string> MinusOneDayTerms = new List<string>
        {
            @"dün"
        };
      public static readonly IList<string> PlusTwoDayTerms = new List<string>
        {
            @"yarından sonraki gün"
        };
      public static readonly IList<string> MinusTwoDayTerms = new List<string>
        {
            @"dünden önceki gün"
        };
      public static readonly IList<string> FutureTerms = new List<string>
        {
            @"bu",
            @"gelecek",
            @"önümüzdeki"
        };
      public static readonly IList<string> LastCardinalTerms = new List<string>
        {
            @"geçen"
        };
      public static readonly IList<string> MonthTerms = new List<string>
        {
            @"ay"
        };
      public static readonly IList<string> MonthToDateTerms = new List<string>
        {
            @"ay başından beri",
            @"ayın başından beri"
        };
      public static readonly IList<string> WeekendTerms = new List<string>
        {
            @"hafta sonu"
        };
      public static readonly IList<string> WeekTerms = new List<string>
        {
            @"hafta"
        };
      public static readonly IList<string> YearTerms = new List<string>
        {
            @"yıl",
            @"sene"
        };
      public static readonly IList<string> YearToDateTerms = new List<string>
        {
            @"sene başından beri"
        };
    }
}