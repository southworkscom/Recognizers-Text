---
TillRegex: !simpleRegex
  def: (?<till>hasta|al|a|--|-|—|——)(\s+(el|la(s)?))?
AndRegex: !simpleRegex
  def: (?<and>y|y\s*el|--|-|—|——)
DayRegex: !simpleRegex
  def: (?<day>01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)(?=\b|t)
MonthNumRegex: !simpleRegex
  def: (?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\b
AmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmDescRegex})
  references: [BaseDateTime.BaseAmDescRegex]
PmDescRegex: !nestedRegex
  def: ({BaseDateTime.BasePmDescRegex})
  references: [BaseDateTime.BasePmDescRegex]
AmPmDescRegex: !nestedRegex
  def: ({BaseDateTime.BaseAmPmDescRegex})
  references: [BaseDateTime.BaseAmPmDescRegex]
DescRegex: !nestedRegex
  def: (?<desc>({AmDescRegex}|{PmDescRegex}))
  references: [ AmDescRegex, PmDescRegex ]
RangePrefixRegex: !simpleRegex
  def: ((desde|de|entre)\s+(la(s)?\s+)?)
# As month number can't be 0, so add (?!\.0\b) to filter out some wrong cases
TwoDigitYearRegex: !nestedRegex
  def: \b(?<![$])(?<year>([0-27-9]\d))(?!(\s*((\:)|{AmDescRegex}|{PmDescRegex}|\.\d)))\b
  references: [ AmDescRegex, PmDescRegex]
FullTextYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[\*]
YearRegex: !nestedRegex
  def: ({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})
  references: [ BaseDateTime.FourDigitYearRegex, FullTextYearRegex ]
RelativeMonthRegex: !simpleRegex
  def: (?<relmonth>((este|pr[oó]ximo|[uú]ltimo)\s+mes)|(mes\s+que\s+viene))\b
MonthRegex: !simpleRegex
  def: \b(?<month>abril|abr|agosto|ago|diciembre|dic|febrero|feb|enero|ene|julio|jul|junio|jun|marzo|mar|mayo|may|noviembre|nov|octubre|oct|septiembre|setiembre|sept|set|sep)\b
MonthSuffixRegex: !nestedRegex
  def: (?<msuf>(en\s+|del\s+|de\s+)?({RelativeMonthRegex}|{MonthRegex}))
  references: [ RelativeMonthRegex, MonthRegex ]
DateUnitRegex: !simpleRegex
  def: (?<unit>años|año|meses|mes|semanas|semana|d[ií]a(s)?)\b
PastRegex: !simpleRegex
  def: (?<past>\b(pasad(a|o)(s)?|[uú]ltim[oa](s)?|anterior(es)?|previo(s)?)\b)
FutureRegex: !simpleRegex
  def: (?<past>\b(siguiente(s)?|pr[oó]xim[oa](s)?|dentro\s+de|en)\b)
SimpleCasesRegex: !nestedRegex
  def: \b((desde\s+el|desde|del|de)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*)(en\s+|del\s+|de\s+)?{YearRegex})?\b
  references: [ DayRegex, TillRegex, MonthSuffixRegex, YearRegex ]
MonthFrontSimpleCasesRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+((desde\s+el|desde|del)\s+)?({DayRegex})\s*{TillRegex}\s*({DayRegex})((\s+|\s*,\s*)(en\s+|del\s+|de\s+)?{YearRegex})?\b
  references: [ MonthSuffixRegex, DayRegex, TillRegex, YearRegex ]
MonthFrontBetweenRegex: !nestedRegex
  def: \b{MonthSuffixRegex}\s+((entre|entre\s+el)\s+)({DayRegex})\s*{AndRegex}\s*({DayRegex})((\s+|\s*,\s*)(en\s+|del\s+|de\s+)?{YearRegex})?\b
  references: [ DayRegex, AndRegex, MonthSuffixRegex, YearRegex ]
DayBetweenRegex: !nestedRegex
  def: \b((entre|entre\s+el)\s+)({DayRegex})(\s+{MonthSuffixRegex})?\s*{AndRegex}\s*({DayRegex})\s+{MonthSuffixRegex}((\s+|\s*,\s*)(en\s+|del\s+|de\s+)?{YearRegex})?\b
  references: [ DayRegex, AndRegex, MonthSuffixRegex, YearRegex ]
OneWordPeriodRegex: !nestedRegex
  def: \b(((pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?)\s+)?({MonthRegex})|(?<=\b(del|de la|el|la)\s+)?(pr[oó]xim[oa](s)?|[uú]ltim[oa]?|est(e|a))\s+(fin de semana|semana|mes|año)|fin de semana|(mes|años)? a la fecha)\b
  references: [MonthRegex]
MonthWithYearRegex: !nestedRegex
  def: \b(((pr[oó]xim[oa](s)?|este|esta|[uú]ltim[oa]?)\s+)?({MonthRegex})\s+((de|del|de la)\s+)?({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\s+año))\b
  references: [ MonthRegex, YearRegex ]
MonthNumWithYearRegex: !nestedRegex
  def: ({YearRegex}(\s*?)[/\-\.](\s*?){MonthNumRegex})|({MonthNumRegex}(\s*?)[/\-](\s*?){YearRegex})
  references: [ YearRegex, MonthNumRegex ]
WeekOfMonthRegex: !nestedRegex
  def: (?<wom>(la\s+)?(?<cardinal>primera?|1ra|segunda|2da|tercera?|3ra|cuarta|4ta|quinta|5ta|[uú]ltima)\s+semana\s+{MonthSuffixRegex})
  references: [ MonthSuffixRegex ]
WeekOfYearRegex: !nestedRegex
  def: (?<woy>(la\s+)?(?<cardinal>primera?|1ra|segunda|2da|tercera?|3ra|cuarta|4ta|quinta|5ta|[uú]ltima?)\s+semana(\s+del?)?\s+({YearRegex}|(?<order>pr[oó]ximo|[uú]ltimo|este)\s+año))
  references: [ YearRegex ]
FollowedDateUnit: !nestedRegex
  def: ^\s*{DateUnitRegex}
  references: [ DateUnitRegex ]
NumberCombinedWithDateUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?){DateUnitRegex}
  references: [ DateUnitRegex ]
QuarterRegex: !nestedRegex
  def: (el\s+)?(?<cardinal>primer|1er|segundo|2do|tercer|3ro|cuarto|4to)\s+cuatrimestre(\s+de|\s*,\s*)?\s+({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\s+año)
  references: [ YearRegex ]
QuarterRegexYearFront: !nestedRegex
  def: ({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\s+año)\s+(el\s+)?(?<cardinal>(primer|primero)|1er|segundo|2do|(tercer|terceo)|3ro|cuarto|4to)\s+cuatrimestre
  references: [ YearRegex ]
AllHalfYearRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
PrefixDayRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
CenturySuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
RelativeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
SeasonRegex: !nestedRegex
  def: \b(?<season>(([uú]ltim[oa]|est[ea]|el|la|(pr[oó]xim[oa]s?|siguiente))\s+)?(?<seas>primavera|verano|otoño|invierno)((\s+del?|\s*,\s*)?\s+({YearRegex}|(?<order>pr[oó]ximo|[uú]ltimo|este)\s+año))?)\b
  references: [ YearRegex ]
WhichWeekRegex: !simpleRegex
  def: (semana)(\s*)(?<number>\d\d|\d|0\d)
WeekOfRegex: !simpleRegex
  def: (semana)(\s*)((do|da|de))
MonthOfRegex: !nestedRegex
  def: (mes)(\s+)((do|da|de)\s+){MonthRegex}
  references: [MonthRegex]
RangeUnitRegex: !simpleRegex
  def: \b(?<unit>años|año|meses|mes|semanas|semana)\b
InConnectorRegex: !simpleRegex
  def: \b(in)\b
WithinNextPrefixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
FromRegex: !simpleRegex
  def: ((desde|de)(\s*la(s)?)?)$
ConnectorAndRegex: !simpleRegex
  def: (y\s*(la(s)?)?)$
BetweenRegex: !simpleRegex
  def: (entre\s*(la(s)?)?)
WeekDayRegex: !simpleRegex
  def: \b(?<weekday>domingos?|lunes|martes|mi[eé]rcoles|jueves|viernes|s[aá]bados?|lun|mar|mi[eé]|jue|vie|s[aá]b|dom|lu|ma|mi|ju|vi|sa|do)\b
OnRegex: !nestedRegex
  def: (?<=\ben\s+)({DayRegex}s?)\b
  references: [ DayRegex ]
RelaxedOnRegex: !simpleRegex
  def: (?<=\b(en|el|del)\s+)((?<day>10|11|12|13|14|15|16|17|18|19|1st|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)s?)\b
ThisRegex: !nestedRegex
  def: \b((este\s*){WeekDayRegex})|({WeekDayRegex}\s*((de\s+)?esta\s+semana))\b
  references: [ WeekDayRegex ]
LastDateRegex: !nestedRegex
  def: \b(([uú]ltimo)\s*{WeekDayRegex})|({WeekDayRegex}(\s+((de\s+)?(esta|la)\s+([uú]ltima\s+)?semana)))\b
  references: [ WeekDayRegex ]
NextDateRegex: !nestedRegex
  def: \b(((pr[oó]ximo|siguiente)\s*){WeekDayRegex})|({WeekDayRegex}(\s+(de\s+)?(la\s+)?(pr[oó]xima|siguiente)(\s*semana)))\b
  references: [ WeekDayRegex ]
SpecialDayRegex: !simpleRegex
  def: \b((el\s+)?(d[ií]a\s+antes\s+de\s+ayer|anteayer)|((el\s+)?d[ií]a\s+(despu[eé]s\s+)?de\s+mañana|pasado\s+mañana)|(el\s)?d[ií]a siguiente|(el\s)?pr[oó]ximo\s+d[ií]a|(el\s+)?[uú]ltimo d[ií]a|(d)?el d[ií]a|ayer|mañana|hoy)\b
SpecialDayWithNumRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
ForTheRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
WeekDayAndDayOfMonthRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
WeekDayOfMonthRegex: !nestedRegex
  def: (?<wom>(el\s+)?(?<cardinal>primer|1er|segundo|2do|tercer|3er|cuarto|4to|quinto|5to|[uú]ltimo)\s+{WeekDayRegex}\s+{MonthSuffixRegex})
  references: [ WeekDayRegex, MonthSuffixRegex ]
RelativeWeekDayRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
NumberEndingPattern: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
SpecialDateRegex: !nestedRegex
  def: (?<=\b(en)\s+el\s+){DayRegex}\b
  references: [ DayRegex ]
OfMonthRegex: !nestedRegex
  def: ^\s*de\s*{MonthSuffixRegex}
  references: [ MonthSuffixRegex ]
MonthEndRegex: !nestedRegex
  def: ({MonthRegex}\s*(el)?\s*$)
  references: [ MonthRegex ]
WeekDayEnd: !nestedRegex
  def: '{WeekDayRegex}\s*,?\s*$'
  references: [ WeekDayRegex ]
DateYearRegex: !nestedRegex
  def: (?<year>{YearRegex}|{TwoDigitYearRegex})
  references: [ YearRegex, TwoDigitYearRegex ]
DateExtractor1: !nestedRegex
  # (domingo,)? 5 de Abril
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}?((\s*(de)|[/\\\.\-])\s*)?{MonthRegex}\b
  references: [ WeekDayRegex, DayRegex, MonthRegex ]
DateExtractor2: !nestedRegex
  # (domingo,)? 5 de Abril 5, 2016
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}\s*([\.\-]|de)\s*{MonthRegex}(\s*,\s*|\s*(del?)\s*){DateYearRegex}\b
  references: [ MonthRegex, DayRegex, DateYearRegex, WeekDayRegex ]
DateExtractor3: !nestedRegex
  # (domingo,)? 6 de Abril
  def: \b({WeekDayRegex}(\s+|\s*,\s*))?{DayRegex}(\s+|\s*,\s*|\s+de\s+|\s*-\s*){MonthRegex}((\s+|\s*,\s*){DateYearRegex})?\b
  references: [ DayRegex, MonthRegex, WeekDayRegex, DateYearRegex ]
DateExtractor4: !nestedRegex
  # 3-23-2017
  def: \b{MonthNumRegex}\s*[/\\\-]\s*{DayRegex}\s*[/\\\-]\s*{DateYearRegex}
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor5: !nestedRegex
  # 23-3-2015
  def: \b{DayRegex}\s*[/\\\-\.]\s*({MonthNumRegex}|{MonthRegex})\s*[/\\\-\.]\s*{DateYearRegex}
  references: [ MonthNumRegex, MonthRegex, DayRegex, DateYearRegex ]
DateExtractor6: !nestedRegex
  # el 1/3
  def: (?<=\b(en|el)\s+){MonthNumRegex}[\-\.]{DayRegex}\b
  references: [ MonthNumRegex, DayRegex ]
DateExtractor7: !nestedRegex
  # 7/23
  def: \b{MonthNumRegex}\s*/\s*{DayRegex}((\s+|\s*,\s*|\s+de\s+){DateYearRegex})?\b
  references: [ MonthNumRegex, DayRegex, DateYearRegex ]
DateExtractor8: !nestedRegex
  # el 24-12
  def: (?<=\b(en|el)\s+){DayRegex}[\\\-]{MonthNumRegex}\b
  references: [ MonthNumRegex, DayRegex ]
DateExtractor9: !nestedRegex
  # 23/7
  def: \b{DayRegex}\s*/\s*{MonthNumRegex}((\s+|\s*,\s*|\s+de\s+){DateYearRegex})?\b
  references: [ DayRegex, MonthNumRegex, DateYearRegex ]
DateExtractor10: !nestedRegex
  # 2015-12-23
  def: \b{YearRegex}\s*[/\\\-\.]\s*{MonthNumRegex}\s*[/\\\-\.]\s*{DayRegex}
  references: [ YearRegex, MonthNumRegex, DayRegex ]
# SpanishTimeExtractorConfiguration
HourNumRegex: !simpleRegex
  def: \b(?<hournum>cero|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce)\b
MinuteNumRegex: !simpleRegex
  def: (?<minnum>un|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|dieciseis|diecisiete|dieciocho|diecinueve|veinte|treinta|cuarenta|cincuenta)
DeltaMinuteNumRegex: !simpleRegex
  def: (?<deltaminnum>un|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|dieciseis|diecisiete|dieciocho|diecinueve|veinte|treinta|cuarenta|cincuenta)
OclockRegex: !simpleRegex
  # "... en punto"
  def: (?<oclock>en\s+punto)
PmRegex: !simpleRegex
  # "... tarde"
  def: (?<pm>((por|de|a|en)\s+la)\s+(tarde|noche))
AmRegex: !simpleRegex
  # "... de la mañana"
  def: (?<am>((por|de|a|en)\s+la)\s+(mañana|madrugada))
AmTimeRegex: !simpleRegex
  def: (?<am>(esta|(por|de|a|en)\s+la)\s+(mañana|madrugada))
PmTimeRegex: !simpleRegex
  def: (?<pm>(esta|(por|de|a|en)\s+la)\s+(tarde|noche))
LessThanOneHour: !nestedRegex
  # "y media ..." "menos cuarto ..."
  def: (?<lth>((\s+y\s+)?cuarto|(\s*)menos cuarto|(\s+y\s+)media|{BaseDateTime.DeltaMinuteRegex}(\s+(minuto|minutos|min|mins))|{DeltaMinuteNumRegex}(\s+(minuto|minutos|min|mins))))
  references: [ BaseDateTime.DeltaMinuteRegex, DeltaMinuteNumRegex ]
TensTimeRegex: !simpleRegex
  def: (?<tens>diez|veint(i|e)|treinta|cuarenta|cincuenta)
WrittenTimeRegex: !nestedRegex
  # "seis treinta", "seis veintiuno", "seis menos diez"
  def: (?<writtentime>{HourNumRegex}\s*((y|menos)\s+)?({MinuteNumRegex}|({TensTimeRegex}((\s*y\s+)?{MinuteNumRegex})?)))
  references: [ HourNumRegex, MinuteNumRegex, TensTimeRegex ]
TimePrefix: !nestedRegex
  def: (?<prefix>{LessThanOneHour}(\s+(pasad[ao]s)\s+(de\s+las|las)?|\s+(para|antes\s+de)?\s+(las?))?)
  references: [ LessThanOneHour ]
TimeSuffix: !nestedRegex
  def: (?<suffix>({LessThanOneHour}\s+)?({AmRegex}|{PmRegex}|{OclockRegex}))
  references: [ LessThanOneHour, AmRegex, PmRegex, OclockRegex ]
BasicTime: !nestedRegex
  def: (?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})
  references: [ WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex ]
AtRegex: !nestedRegex
  # "a las cuatro" "a las 3"
  def: \b(?<=\b(a las?)\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\b
  references: [ HourNumRegex, BaseDateTime.HourRegex, WrittenTimeRegex ]
ConnectNumRegex: !nestedRegex
  def: ({BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\s*{DescRegex})
  references: [ BaseDateTime.HourRegex, DescRegex ]
TimeRegex1: !nestedRegex
  # (tres min pasadas las)? siete|7|(siete treinta) pm
  def: (\b{TimePrefix}\s+)?({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\s*({DescRegex})
  references: [ TimePrefix, WrittenTimeRegex, HourNumRegex, BaseDateTime.HourRegex, DescRegex ]
TimeRegex2: !nestedRegex
  # (tres min pasadas las)? 3:00(:00)? (pm)?
  def: (\b{TimePrefix}\s+)?(t)?{BaseDateTime.HourRegex}(\s*)?:(\s*)?{BaseDateTime.MinuteRegex}((\s*)?:(\s*)?{BaseDateTime.SecondRegex})?((\s*{DescRegex})|\b)
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, BaseDateTime.SecondRegex, DescRegex ]
TimeRegex3: !nestedRegex
  # (tres min pasadas las)? 3.00 (pm)
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}\.{BaseDateTime.MinuteRegex}(\s*{DescRegex})
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
TimeRegex4: !nestedRegex
  # (tres min pasadas las) (cinco treinta|siete|7|7:00(:00)?) (pm)?
  def: \b(({DescRegex}?)|({BasicTime}?)({DescRegex}?))({TimePrefix}\s*)({HourNumRegex}|{BaseDateTime.HourRegex})?(\s+{TensTimeRegex}(\s+y\s+)?{MinuteNumRegex}?)?({OclockRegex})?\b
  references: [ DescRegex, BasicTime, TimePrefix, HourNumRegex, BaseDateTime.HourRegex, TensTimeRegex, MinuteNumRegex, OclockRegex ]
TimeRegex5: !nestedRegex
  # (tres min pasadas las) (cinco treinta|siete|7|7:00(:00)?) (pm)? (de la noche)
  def: \b({TimePrefix}|{BasicTime}{TimePrefix})\s+(\s*{DescRegex})?{BasicTime}?\s*{TimeSuffix}\b
  references: [ TimePrefix, BasicTime, DescRegex, TimeSuffix ]
TimeRegex6: !nestedRegex
  # (cinco treinta|siete|7|7:00(:00)?) (pm)? (de la noche)
  def: ({BasicTime}(\s*{DescRegex})?\s+{TimeSuffix}\b)
  references: [ BasicTime, DescRegex, TimeSuffix ]
TimeRegex7: !nestedRegex
  # (En la noche) a las (cinco treinta|siete|7|7:00(:00)?) (pm)?
  def: \b{TimeSuffix}\s+a\s+las\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, DescRegex ]
TimeRegex8: !nestedRegex
  # (En la noche) (cinco treinta|siete|7|7:00(:00)?) (pm)?
  def: \b{TimeSuffix}\s+{BasicTime}((\s*{DescRegex})|\b)
  references: [ TimeSuffix, BasicTime, DescRegex ]
TimeRegex9: !nestedRegex
  # once (y)? veinticinco
  def: \b(?<writtentime>{HourNumRegex}\s+({TensTimeRegex}\s*)?(y\s+)?{MinuteNumRegex}?)\b
  references: [ HourNumRegex, TensTimeRegex, MinuteNumRegex ]
TimeRegex10: !simpleRegex
  def: (a\s+la|al)\s+(madrugada|mañana|medio\s*d[ií]a|tarde|noche)
TimeRegex11: !nestedRegex
  # (tres menos veinte) (pm)?
  def: \b({WrittenTimeRegex})({DescRegex}?)\b
  references: [ WrittenTimeRegex, DescRegex ]
TimeRegex12: !nestedRegex
  # (tres min pasadas las)? 3h00 (pm)?
  def: (\b{TimePrefix}\s+)?{BaseDateTime.HourRegex}(\s*h\s*){BaseDateTime.MinuteRegex}(\s*{DescRegex})?
  references: [ TimePrefix, BaseDateTime.HourRegex, BaseDateTime.MinuteRegex, DescRegex ]
# SpanishDateTimeExtractorConfiguration
PrepositionRegex: !simpleRegex
  def: \b(?<prep>(a(l)?|en|de(l)?)?(\s*(la(s)?|el|los))?$)\b
NowRegex: !simpleRegex
  def: \b(?<now>(justo\s+)?ahora(\s+mismo)?|en\s+este\s+momento|tan\s+pronto\s+como\s+sea\s+posible|tan\s+pronto\s+como\s+(pueda|puedas|podamos|puedan)|lo\s+m[aá]s\s+pronto\s+posible|recientemente|previamente)\b
SuffixRegex: !simpleRegex
  def: ^\s*(((y|a|en|por)\s+la|al)\s+)?(mañana|madrugada|medio\s*d[ií]a|tarde|noche)\b
TimeOfDayRegex: !simpleRegex
  def: \b(?<timeOfDay>mañana|madrugada|(pasado\s+(el\s+)?)?medio\s?d[ií]a|tarde|noche|anoche)\b
SpecificTimeOfDayRegex: !nestedRegex
  def: \b(((((a\s+)?la|esta|siguiente|pr[oó]xim[oa]|[uú]ltim[oa])\s+)?{TimeOfDayRegex}))\b
  references: [ TimeOfDayRegex ]
TimeOfTodayAfterRegex: !nestedRegex
  def: ^\s*(,\s*)?(en|de(l)?\s+)?{SpecificTimeOfDayRegex}
  references: [ SpecificTimeOfDayRegex ]
TimeOfTodayBeforeRegex: !nestedRegex
  def: ({SpecificTimeOfDayRegex}(\s*,)?(\s+(a\s+la(s)?|para))?\s*)
  references: [ SpecificTimeOfDayRegex ]
SimpleTimeOfTodayAfterRegex: !nestedRegex
  def: ({HourNumRegex}|{BaseDateTime.HourRegex})\s*(,\s*)?((en|de(l)?)?\s+)?{SpecificTimeOfDayRegex}
  references: [ HourNumRegex, BaseDateTime.HourRegex, SpecificTimeOfDayRegex ]
SimpleTimeOfTodayBeforeRegex: !nestedRegex
  def: ({SpecificTimeOfDayRegex}(\s*,)?(\s+(a\s+la|para))?\s*({HourNumRegex}|{BaseDateTime.HourRegex}))
  references: [ SpecificTimeOfDayRegex, HourNumRegex, BaseDateTime.HourRegex ]
SpecificEndOfRegex: !simpleRegex
  def: ((a|e)l\s+)?fin(alizar|al)?(\s+(el|de(l)?)(\s+d[ií]a)?(\s+de)?)?\s*$
UnspecificEndOfRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
UnspecificEndOfRangeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
UnitRegex: !simpleRegex
  def: (?<unit>años|año|meses|mes|semanas|semana|d[ií]as|d[ií]a|horas|hora|h|hr|hrs|hs|minutos|minuto|mins|min|segundos|segundo|segs|seg)\b
ConnectorRegex: !simpleRegex
  def: ^(,|t|para la|para las|cerca de la|cerca de las)$
# SpanishTimePeriodExtractorConfiguration
TimeHourNumRegex: !simpleRegex
  def: (?<hour>veintiuno|veintidos|veintitres|veinticuatro|cero|uno|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|diecis([eé])is|diecisiete|dieciocho|diecinueve|veinte)
PureNumFromTo: !nestedRegex
  def: ((desde|de)\s+(la(s)?\s+)?)?({BaseDateTime.HourRegex}|{TimeHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*{TillRegex}\s*({BaseDateTime.HourRegex}|{TimeHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?
  references: [ BaseDateTime.HourRegex, TimeHourNumRegex, DescRegex, TillRegex, PmRegex, AmRegex ]
PureNumBetweenAnd: !nestedRegex
  def: (entre\s+(la(s)?\s+)?)({BaseDateTime.HourRegex}|{TimeHourNumRegex})(\s*(?<leftDesc>{DescRegex}))?\s*y\s*(la(s)?\s+)?({BaseDateTime.HourRegex}|{TimeHourNumRegex})\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?
  references: [ BaseDateTime.HourRegex, TimeHourNumRegex, DescRegex, PmRegex, AmRegex ]
SpecificTimeFromTo: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
SpecificTimeBetweenAnd: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
TimeUnitRegex: !simpleRegex
  def: (?<unit>horas|hora|h|minutos|minuto|mins|min|segundos|segundo|secs|sec)\b
TimeFollowedUnit: !nestedRegex
  def: ^\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
TimeNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\,\d*)?)\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
# SpanishDateTimePeriodExtractorConfiguration
DateTimePeriodNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\.\d*)?)\s*{TimeUnitRegex}
  references: [ TimeUnitRegex ]
PeriodTimeOfDayWithDateRegex: !simpleRegex
  def: \b(((y|a|en|por)\s+la|al)\s+)?(?<timeOfDay>mañana|madrugada|(pasado\s+(el\s+)?)?medio\s?d[ií]a|tarde|noche|anoche)\b
RelativeTimeUnitRegex: !nestedRegex
  def: ({PastRegex}|{FutureRegex})\s+{UnitRegex}
  references: [ PastRegex, FutureRegex, UnitRegex ]
# SpanishDurationExtractorConfiguration
LessThanRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
MoreThanRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
SuffixAndRegex: !simpleRegex
  def: (?<suffix>\s*(y)\s+((un|uno|una)\s+)?(?<suffix_num>media|cuarto))
FollowedUnit: !nestedRegex
  def: ^\s*{UnitRegex}
  references: [ UnitRegex ]
DurationNumberCombinedWithUnit: !nestedRegex
  def: \b(?<num>\d+(\,\d*)?){UnitRegex}
  references: [ UnitRegex ]
AnUnitRegex: !nestedRegex
  def: \b(un(a)?)\s+{UnitRegex}
  references: [ UnitRegex ]
DuringRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
AllRegex: !simpleRegex
  def: \b(?<all>tod[oa]?\s+(el|la)\s+(?<unit>año|mes|semana|d[ií]a))\b
HalfRegex: !simpleRegex
  def: \b(?<half>medi[oa]\s+(?<unit>ano|mes|semana|d[íi]a|hora))\b
ConjunctionRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
InexactNumberRegex: !simpleRegex
  def: \b(pocos|poco|algo|varios)\b
InexactNumberUnitRegex: !nestedRegex
  def: \b(pocos|poco|algo|varios)\s+{UnitRegex}
  references: [ UnitRegex ]
# SpanishHolidayExtractorConfiguration
HolidayRegex1: !nestedRegex
  def: \b(?<holiday>viernes santo|mi[eé]rcoles de ceniza|martes de carnaval|d[ií]a (de|de los) presidentes?|clebraci[oó]n de mao|año nuevo chino|año nuevo|noche vieja|(festividad de )?los mayos|d[ií]a de los inocentes|navidad|noche buena|d[ií]a de acci[oó]n de gracias|acci[oó]n de gracias|yuandan|halloween|noches de brujas|pascuas)(\s+(del?\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\s+año))?\b
  references: [ YearRegex ]
HolidayRegex2: !nestedRegex
  def: \b(?<holiday>(d[ií]a( del?( la)?)? )?(martin luther king|todos los santos|blanco|san patricio|san valent[ií]n|san jorge|cinco de mayo|independencia|raza|trabajador))(\s+(del?\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\s+año))?\b
  references: [ YearRegex ]
HolidayRegex3: !nestedRegex
  def: \b(?<holiday>(d[ií]a( del?( las?)?)? )(trabajador|madres?|padres?|[aá]rbol|mujer(es)?|solteros?|niños?|marmota|san valent[ií]n|maestro))(\s+(del?\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\s+año))?\b
  references: [ YearRegex ]
# SpanishMergedExtractorConfiguration
BeforeRegex: !simpleRegex
  def: (antes(\s+del?(\s+las?)?)?)
AfterRegex: !simpleRegex
  def: (despues(\s*del?(\s+las?)?)?)
SinceRegex: !simpleRegex
  def: (desde(\s+(las?|el))?)
AroundRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
# SpanishSetExtractorConfiguration
PeriodicRegex: !simpleRegex
  def: \b(?<periodic>a\s*diario|diariamente|mensualmente|semanalmente|quincenalmente|anualmente)\b
EachExpression: !simpleRegex
  def: cada|tod[oa]s\s*(l[oa]s)?
EachUnitRegex: !nestedRegex
  def: (?<each>({EachExpression})\s*{UnitRegex})
  references: [ EachExpression, UnitRegex ]
EachPrefixRegex: !nestedRegex
  def: (?<each>({EachExpression})\s*$)
  references: [ EachExpression ]
EachDayRegex: !nestedRegex
  def: \s*({EachExpression})\s*d[ií]as\s*\b
  references: [ EachExpression ]
BeforeEachDayRegex: !nestedRegex
  def: ({EachExpression})\s*d[ií]as(\s+a\s+las?)?\s*\b
  references: [ EachExpression ]
SetEachRegex: !nestedRegex
  def: (?<each>({EachExpression})\s*)
  references: [ EachExpression ]
LaterEarlyPeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
WeekWithWeekDayRangeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
GeneralEndingRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
MiddlePauseRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
PrefixArticleRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[\.]
OrRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearPlusNumberRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
NumberAsTimeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
TimeBeforeAfterRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
DateNumberConnectorRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
CenturyRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
DecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
DecadeWithCenturyRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
RelativeDecadeRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
ComplexDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearSuffix: !nestedRegex
  def: (,?\s*({YearRegex}|{FullTextYearRegex}))
  references: [ YearRegex, FullTextYearRegex ]
# SpanishDatetimeUtilityConfiguration
AgoRegex: !simpleRegex
  def: \b(antes)\b
LaterRegex: !simpleRegex
  def: \b(despu[eé]s|desde ahora)\b
# DateTimePeriodParser
Tomorrow: mañana
# SpanishCommonDateTimeParserConfiguration
UnitMap: !dictionary
  types: [ string, string ]
  entries:
    años: Y
    año: Y
    meses: MON
    mes: MON
    semanas: W
    semana: W
    dias: D
    dia: D
    días: D
    día: D
    horas: H
    hora: H
    hrs: H
    hr: H
    h: H
    minutos: M
    minuto: M
    mins: M
    min: M
    segundos: S
    segundo: S
    segs: S
    seg: S
UnitValueMap: !dictionary
  types: [ string, long ]
  entries:
    años: 31536000
    año: 31536000
    meses: 2592000
    mes: 2592000
    semanas: 604800
    semana: 604800
    dias: 86400
    dia: 86400
    días: 86400
    día: 86400
    horas: 3600
    hora: 3600
    hrs: 3600
    hr: 3600
    h: 3600
    minutos: 60
    minuto: 60
    mins: 60
    min: 60
    segundos: 1
    segundo: 1
    segs: 1
    seg: 1
SeasonMap: !dictionary
  types: [ string, string ]
  entries:
    primavera: SP
    verano: SU
    otoño: FA
    invierno: WI
SeasonValueMap: !dictionary
  types: [ string, int ]
  entries:
    SP: 3
    SU: 6
    FA: 9
    WI: 12
CardinalMap: !dictionary
  types: [ string, int ]
  entries:
    primer: 1
    primero: 1
    primera: 1
    1er: 1
    1ro: 1
    1ra: 1
    segundo: 2
    segunda: 2
    2do: 2
    2da: 2
    tercer: 3
    tercero: 3
    tercera: 3
    3er: 3
    3ro: 3
    3ra: 3
    cuarto: 4
    cuarta: 4
    4to: 4
    4ta: 4
    quinto: 5
    quinta: 5
    5to: 5
    5ta: 5
DayOfWeek: !dictionary
  types: [ string, int ]
  entries:
    lunes: 1
    martes: 2
    miercoles: 3
    miércoles: 3
    jueves: 4
    viernes: 5
    sabado: 6
    domingo: 0
    lu: 1
    ma: 2
    mi: 3
    ju: 4
    vi: 5
    sa: 6
    do: 0
MonthOfYear: !dictionary
  types: [ string, int ]
  entries:
    'enero': 1
    'febrero': 2
    'marzo': 3
    'abril': 4
    'mayo': 5
    'junio': 6
    'julio': 7
    'agosto': 8
    'septiembre': 9
    'setiembre': 9
    'octubre': 10
    'noviembre': 11
    'diciembre': 12
    'ene': 1
    'feb': 2
    'mar': 3
    'abr': 4
    'may': 5
    'jun': 6
    'jul': 7
    'ago': 8
    'sept': 9
    'set': 9
    'oct': 10
    'nov': 11
    'dic': 12
    '1': 1
    '2': 2
    '3': 3
    '4': 4
    '5': 5
    '6': 6
    '7': 7
    '8': 8
    '9': 9
    '10': 10
    '11': 11
    '12': 12
    '01': 1
    '02': 2
    '03': 3
    '04': 4
    '05': 5
    '06': 6
    '07': 7
    '08': 8
    '09': 9
Numbers: !dictionary
  types: [ string, int ]
  entries:
    cero: 0
    un: 1
    una: 1
    uno: 1
    dos: 2
    tres: 3
    cuatro: 4
    cinco: 5
    seis: 6
    siete: 7
    ocho: 8
    nueve: 9
    diez: 10
    once: 11
    doce: 12
    docena: 12
    docenas: 12
    trece: 13
    catorce: 14
    quince: 15
    dieciseis: 16
    dieciséis: 16
    diecisiete: 17
    dieciocho: 18
    diecinueve: 19
    veinte: 20
    ventiuna: 21
    ventiuno: 21
    veintiun: 21
    veintiún: 21
    veintiuno: 21
    veintiuna: 21
    veintidos: 22
    veintidós: 22
    veintitres: 23
    veintitrés: 23
    veinticuatro: 24
    veinticinco: 25
    veintiseis: 26
    veintiséis: 26
    veintisiete: 27
    veintiocho: 28
    veintinueve: 29
    treinta: 30
HolidayNames: !dictionary
  types: [ string, 'string[]' ]
  entries:
    padres: [ diadelpadre ]
    madres: [ diadelamadre ]
    acciondegracias: [ diadegracias, diadeacciondegracias, acciondegracias ]
    trabajador: [ diadeltrabajador ]
    delaraza: [ diadelaraza, diadeladiversidadcultural ]
    memoria: [ diadelamemoria ]
    pascuas: [ diadepascuas, pascuas ]
    navidad: [ navidad , diadenavidad ]
    nochebuena: [ diadenochebuena, nochebuena]
    añonuevo: [ añonuevo, diadeañonuevo ]
    nochevieja: [ nochevieja, diadenochevieja ]
    yuandan: [ yuandan ]
    maestro: [ diadelmaestro ]
    todoslossantos: [ todoslossantos ]
    niño: [ diadelniño ]
    mujer: [ diadelamujer ]
    
VariableHolidaysTimexDictionary: !dictionary
  types: [ string, string ]
  entries:
    padres: -06-WXX-7-3
    madres: -05-WXX-7-2
    acciondegracias: -11-WXX-4-4
    trabajador: -05-WXX-1-1
    delaraza: -10-WXX-1-2
    memoria: -03-WXX-2-4
 
DoubleNumbers: !dictionary
  types: [ string, double ]
  entries:
    mitad: 0.5
    cuarto: 0.25
DateTokenPrefix: 'en '
TimeTokenPrefix: 'a las '
TokenBeforeDate: 'el '
TokenBeforeTime: 'la '
NextPrefixRegex: !simpleRegex
  def: (pr[oó]xim[oa]|siguiente)\b
PastPrefixRegex: !simpleRegex
  def: ([uú]ltim[oa])\b
ThisPrefixRegex: !simpleRegex
  def: (est[ea])\b
RelativeDayRegex: !simpleRegex
  # TODO: implement the relative day regex if needed. If yes, they should be abstracted
  def: ^[\.]
RestOfDateRegex: !simpleRegex
  # TODO: add this regex, let it correspond to the one in English
  def: ^[\.]
RelativeDurationUnitRegex: !simpleRegex
  # TODO: change to Spanish according to corresponding Regex
  def: ^[\.]
ReferenceDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
FromToRegex: !simpleRegex
  # TODO: change to Spanish according to corresponding Regex
  def: \b(from).+(to)\b.+
SingleAmbiguousMonthRegex: !simpleRegex
  # TODO: change to Spanish according to corresponding Regex
  def: ^(the\s+)?(may|march)$
UnspecificDatePeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
PrepositionSuffixRegex: !simpleRegex
  # TODO: change to Spanish according to corresponding Regex
  def: \b(on|in|at|around|for|during|since|from|to)$
RestOfDateTimeRegex: !simpleRegex
  # TODO: add this according to the related part in English
  def: ^[\.]
SetWeekDayRegex: !simpleRegex
  # TODO: add this according to the related part in English
  def: ^[\.]
NightRegex: !simpleRegex
  def: \b(medionoche|noche)\b
CommonDatePrefixRegex: !simpleRegex
  def: ^[\.]
DurationUnitRegex: !simpleRegex
  # TODO: add this according to the related part in English
  def: ^[\.]
DurationConnectorRegex: !simpleRegex
  # TODO: add this according to the related part in English
  def: ^[.]
YearAfterRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
YearPeriodRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
FutureSuffixRegex: !simpleRegex
  # TODO: modify below regex according to the counterpart in English
  def: ^[.]
WrittenDecades: !dictionary
  types: [ string, int ]
  # TODO: modify below dictionary according to the counterpart in English
  entries:
    "": 0
SpecialDecadeCases: !dictionary
  types: [ string, int ]
  # TODO: modify below dictionary there're special cases for written decades
  entries:
    '': 0
DefaultLanguageFallback: DMY
DurationDateRestrictions: []
# For TimeOfDay resolution
EarlyMorningTermList: !list
  types: [ string ]
  entries: 
    - madrugada
MorningTermList: !list
  types: [ string ]
  entries: 
    - mañana
AfternoonTermList: !list
  types: [ string ]
  entries:
    - pasado mediodia
    - pasado el mediodia
EveningTermList: !list
  types: [ string ]
  entries: 
    - tarde
NightTermList: !list
  types: [ string ]
  entries: 
    - noche
SameDayTerms: !list
  types: [ string ]
  entries: 
    - hoy
    - el dia
PlusOneDayTerms: !list
  types: [ string ]
  entries: 
    - mañana
    - dia siguiente
    - el dia de mañana
    - proximo dia
MinusOneDayTerms: !list
  types: [ string ]
  entries: 
    - ayer
    - ultimo dia
PlusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - pasado mañana
    - dia despues de mañana
MinusTwoDayTerms: !list
  types: [ string ]
  entries: 
    - anteayer
    - dia antes de ayer
# For DatePeriodParserConfiguration Logic
MonthTerms: !list
  types: [ string ]
  entries:
    - mes
    - meses
MonthToDateTerms: !list
  types: [ string ]
  entries:
    - mes a la fecha
    - meses a la fecha
WeekendTerms: !list
  types: [ string ]
  entries:
    - fin de semana
WeekTerms: !list
  types: [ string ]
  entries:
    - semana
YearTerms: !list
  types: [ string ]
  entries:
    - año
    - años
YearToDateTerms: !list
  types: [ string ]
  entries:
    - año a la fecha
    - años a la fecha
...