# ------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
# ------------------------------------------------------------------------------

from .base_date_time import BaseDateTime
# pylint: disable=line-too-long
class FrenchDateTime:
    TillRegex = f'(?<till>au|[aà]|et|jusqu\'[aà]|avant|--|-|—|——)'
    RangeConnectorRegex = f'(?<and>et|de la|au|[aà]|et\\s*la|--|-|—|——)'
    RelativeRegex = f'(?<order>prochain|prochaine|de|du|ce|cette|l[ae]|derni[eè]re|pr[eé]c[eé]dente|au\\s+cours+(de|du\\s*))'
    NextSuffixRegex = f'(?<order>prochain|prochaine|prochaines|suivante)\\b'
    PastSuffixRegex = f'(?<order>dernier|derni[eè]re|pr[eé]c[eé]dente)\\b'
    ThisPrefixRegex = f'(?<order>ce|cette|au\\s+cours+(du|de))\\b'
    RangePrefixRegex = f'(du|de|des|depuis|entre)'
    DayRegex = f'(?<day>01|02|03|04|05|06|07|08|09|10|11|11e|12|12e|13|13e|14|14e|15|15e|16|16e|17|17e|18|18e|19|19e|1er|1|21|21e|20|20e|22|22e|23|23e|24|24e|25|25e|26|26e|27|27e|28|28e|29|29e|2|2e|30|30e|31|31e|3|3e|4|4e|5|5e|6|6e|7|7e|8|8e|9|9e)(?=\\b|t)'
    MonthNumRegex = f'(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\\b'
    SpecialDescRegex = f'(p\\b)'
    AmDescRegex = f'(h|{BaseDateTime.BaseAmDescRegex})'
    PmDescRegex = f'(h|{BaseDateTime.BasePmDescRegex})'
    AmPmDescRegex = f'(h|{BaseDateTime.BaseAmPmDescRegex})'
    DescRegex = f'(?<desc>{AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})'
    TwoDigitYearRegex = f'\\b(?<![$])(?<year>([0-27-9]\\d))(?!(\\s*((\\:)|{AmDescRegex}|{PmDescRegex}|\\.\\d)))\\b'
    FullTextYearRegex = f'^[\\*]'
    YearRegex = f'({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})'
    WeekDayRegex = f'(?<weekday>dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi|lun|mar|mer|jeu|ven|sam|dim)\\b'
    RelativeMonthRegex = f'(?<relmonth>({ThisPrefixRegex}\\s+mois)|(mois\\s+{PastSuffixRegex})|(mois\\s+{NextSuffixRegex}))\\b'
    WrittenMonthRegex = f'(?<month>avril|avr\\.|avr|ao[uû]t|d[eé]cembre|d[eé]c\\.|d[eé]c|f[eé]vrier|f[eé]v|f[eé]vr\\.|f[eé]vr|janvier|janv\\.|janv|jan|juillet|jul|juil\\.|juil|juin|jun|mars|mar|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept|sep)'
    MonthSuffixRegex = f'(?<msuf>(en\\s*|le\\s*|de\\s*|dans\\s*)?({RelativeMonthRegex}|{WrittenMonthRegex}))'
    DateUnitRegex = f'(?<unit>l\'ann[eé]e|ann[eé]es|an|mois|semaines|semaine|jours|jour|journ[eé]e|journ[eé]es)\\b'
    SimpleCasesRegex = f'\\b((d[ue])|entre\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex})\\s+{MonthSuffixRegex}((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontSimpleCasesRegex = f'\\b((d[ue]|entre)\\s+)?{MonthSuffixRegex}\\s+((d[ue]|entre)\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontBetweenRegex = f'\\b{MonthSuffixRegex}\\s+(entre|d[ue]\\s+)({DayRegex})\\s*{RangeConnectorRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    BetweenRegex = f'\\b(entre\\s+)({DayRegex})\\s*{RangeConnectorRegex}\\s*({DayRegex})\\s+{MonthSuffixRegex}((\\s+|\\s*,\\s*){YearRegex})?\\b'
    YearWordRegex = f'\\b(?<year>l\'ann[ée]e)\\b'
    MonthWithYear = f'\\b((?<month>avril|avr\\.|avr|ao[uû]t|d[eé]cembre|d[eé]c\\.|d[eé]c|f[eé]vrier|f[eé]v|f[eé]vr\\.|f[eé]vr|janvier|janv\\.|janv|jan|juillet|jul|juil\\.|juil|juin|jun|mars|mar|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept|sep)(\\s*),?(\\s+de)?(\\s*)({YearRegex}|(?<order>cette)\\s*{YearWordRegex})|{YearWordRegex}\\s*({PastSuffixRegex}|{NextSuffixRegex}))'
    OneWordPeriodRegex = f'\\b(({RelativeRegex}\\s+)?(?<month>avril|avr\\.|avr|ao[uû]t|d[eé]cembre|d[eé]c\\.|d[eé]c|f[eé]vrier|f[eé]v|f[eé]vr\\.|f[eé]vr|janvier|janv\\.|janv|jan|juillet|jul|juil\\.|juil|juin|jun|mars|mar|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept|sep)|{RelativeRegex}\\s+(weekend|fin de semaine|week-end|semaine|mois|ans|l\'année)|weekend|week-end|(mois|l\'année))\\b'
    MonthNumWithYear = f'({YearRegex}(\\s*)[/\\-\\.](\\s*){MonthNumRegex})|({MonthNumRegex}(\\s*)[/\\-](\\s*){YearRegex})'
    WeekOfMonthRegex = f'(?<wom>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+semaine\\s+{MonthSuffixRegex})'
    WeekOfYearRegex = f'(?<woy>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+semaine(\\s+de)?\\s+({YearRegex}|{RelativeRegex}\\s+ann[ée]e))'
    FollowedDateUnit = f'^\\s*{DateUnitRegex}'
    NumberCombinedWithDateUnit = f'\\b(?<num>\\d+(\\.\\d*)?){DateUnitRegex}'
    QuarterRegex = f'(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\\s+quart(\\s+de|\\s*,\\s*)?\\s+({YearRegex}|{RelativeRegex}\\s+l\'ann[eé]e)'
    QuarterRegexYearFront = f'({YearRegex}|l\'année\\s+({PastSuffixRegex}|{NextSuffixRegex})|{RelativeRegex}\\s+ann[eé]e)\\s+(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\\s+quarts'
    AllHalfYearRegex = f'^[.]'
    PrefixDayRegex = f'^[.]'
    CenturySuffixRegex = f'^[.]'
    SeasonRegex = f'\\b((<seas>printemps|été|automne|hiver)+\\s*({NextSuffixRegex}|{PastSuffixRegex}))|(?<season>({RelativeRegex}\\s+)?(?<seas>printemps|[ée]t[ée]|automne|hiver)((\\s+de|\\s*,\\s*)?\\s+({YearRegex}|{RelativeRegex}\\s+l\'ann[eé]e))?)\\b'
    WhichWeekRegex = f'(semaine)(\\s*)(?<number>\\d\\d|\\d|0\\d)'
    WeekOfRegex = f'(semaine)(\\s*)(de)'
    MonthOfRegex = f'(mois)(\\s*)(de)'
    MonthRegex = f'(?<month>avril|avr\\.|avr|ao[uû]t|d[eé]cembre|d[eé]c\\.|d[eé]c|f[eé]vrier|f[eé]v|f[eé]vr\\.|f[eé]vr|janvier|janv\\.|janv|jan|juillet|jul|juil\\.|juil|juin|jun|mars|mar|mai|novembre|nov\\.|nov|octobre|oct\\.|oct|septembre|sept\\.|sept|sep)'
    OnRegex = f'(?<=\\b(en|sur\\s*l[ea]|sur)\\s+)({DayRegex}s?)\\b'
    RelaxedOnRegex = f'(?<=\\b(en|le|dans|sur\\s*l[ea]|du|sur)\\s+)((?<day>10e|11e|12e|13e|14e|15e|16e|17e|18e|19e|1er|20e|21e|22e|23e|24e|25e|26e|27e|28e|29e|2e|30e|31e|3e|4e|5e|6e|7e|8e|9e)s?)\\b'
    ThisRegex = f'\\b((cette(\\s*semaine)?\\s+){WeekDayRegex})|({WeekDayRegex}(\\s+cette\\s*semaine))\\b'
    LastDateRegex = f'\\b(({WeekDayRegex}(\\s*(de)?\\s*la\\s*semaine\\s+{PastSuffixRegex}))|({WeekDayRegex}(\\s+{PastSuffixRegex})))\\b'
    NextDateRegex = f'\\b(({WeekDayRegex}(\\s+{NextSuffixRegex}))|({WeekDayRegex}(\\s*(de)?\\s*la\\s*semaine\\s+{NextSuffixRegex})))\\b'
    SpecialDayRegex = f'\\b(avant[\\s|-]hier|apr[eè]s(-demain|\\s*demain)|(le\\s)?jour suivant|(le\\s+)?dernier jour|hier|lendemain|demain|de la journ[ée]e|aujourd\'hui)\\b'
    SpecialDayWithNumRegex = f'^[.]'
    StrictWeekDay = f'\\b(?<weekday>dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi|lun|mar|mer|jeu|ven|sam|dim)s?\\b'
    SetWeekDayRegex = f'\\b(?<prefix>le\\s+)?(?<weekday>matin|matin[ée]e|apres-midi|soir[ée]e|soir|dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)s\\b'
    WeekDayOfMonthRegex = f'(?<wom>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+{WeekDayRegex}\\s+{MonthSuffixRegex})'
    RelativeWeekDayRegex = f'^[.]'
    NumberEndingPattern = f'^[.]'
    SpecialDate = f'(?<=\\b([àa]|au|le)\\s+){DayRegex}\\b'
    DateYearRegex = f'(?<year>{YearRegex}|{TwoDigitYearRegex})'
    DateExtractor1 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{MonthRegex}\\s*[/\\\\\\.\\-]?\\s*{DayRegex}\\b'
    DateExtractor2 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}(\\s+|\\s*,\\s*|\\s+){MonthRegex}\\s*[\\.\\-]?\\s*{DateYearRegex}\\b'
    DateExtractor3 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}(\\s+|\\s*,\\s*|\\s*-\\s*){MonthRegex}((\\s+|\\s*,\\s*){DateYearRegex})?\\b'
    DateExtractor4 = f'\\b{MonthNumRegex}\\s*[/\\\\\\-]\\s*{DayRegex}\\s*[/\\\\\\-]\\s*{DateYearRegex}'
    DateExtractor5 = f'\\b{DayRegex}\\s*[/\\\\\\-\\.]\\s*({MonthNumRegex}|{MonthRegex})\\s*[/\\\\\\-\\.]\\s*{DateYearRegex}'
    DateExtractor6 = f'(?<=\\b(le|sur|sur l[ae])\\s+){MonthNumRegex}[\\-\\.\\/]{DayRegex}\\b'
    DateExtractor7 = f'\\b{DayRegex}\\s*/\\s*{MonthNumRegex}((\\s+|\\s*,\\s*){DateYearRegex})?\\b'
    DateExtractor8 = f'(?<=\\b(le)\\s+){DayRegex}[\\\\\\-]{MonthNumRegex}\\b'
    DateExtractor9 = f'\\b{DayRegex}\\s*/\\s*{MonthNumRegex}((\\s+|\\s*,\\s*){DateYearRegex})?\\b'
    DateExtractorA = f'\\b{DateYearRegex}\\s*[/\\\\\\-\\.]\\s*{MonthNumRegex}\\s*[/\\\\\\-\\.]\\s*{DayRegex}'
    OfMonth = f'^\\s*de\\s*{MonthRegex}'
    MonthEnd = f'{MonthRegex}\\s*(le)?\\s*$'
    WeekDayEnd = f'{WeekDayRegex}\\s*,?\\s*$'
    RangeUnitRegex = f'\\b(?<unit>l\'année|ann[eé]e(s)?|mois|semaines|semaine)\\b'
    HourNumRegex = f'\\b(?<hournum>zero|un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|dix-six|dix-sept|dix-huit|dix-neuf|vingt|vingt-et-un|vingt-deux|vingt-trois)\\b'
    MinuteNumRegex = f'(?<minnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante)'
    DeltaMinuteNumRegex = f'(?<deltaminnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante)'
    OclockRegex = f'(?<oclock>heure|heures|h)'
    PmRegex = f'(?<pm>(dans l\'\\s*)?apr[eè]s(\\s*|-)midi|(du|ce|de|le)\\s*(soir[ée]e|soir)|(dans l[ea]\\s+)?(nuit|soir[eé]e))'
    AmRegex = f'(?<am>(du|de|ce|(du|de|dans)\\s*l[ea]|le)?\\s*matin[ée]e|(du|de|ce|dans l[ea]|le)?\\s*matin)'
    LessThanOneHour = f'(?<lth>(une\\s+)?quart|trois quart(s)?|demie( heure)?|{BaseDateTime.DeltaMinuteRegex}(\\s+(minute|minutes|min|mins))|{DeltaMinuteNumRegex}(\\s+(minute|minutes|min|mins)))'
    WrittenTimeRegex = f'(?<writtentime>{HourNumRegex}\\s+({MinuteNumRegex}|(?<tens>vingt|trente|quarante|cinquante)\\s+{MinuteNumRegex}))'
    TimePrefix = f'(?<prefix>(heures\\s*et\\s+{LessThanOneHour}|et {LessThanOneHour}|{LessThanOneHour} [àa]))'
    TimeSuffix = f'(?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})'
    BasicTime = f'(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})'
    MidnightRegex = f'(?<midnight>minuit)'
    CommonDatePrefixRegex = f'^[\\.]'
    MorningRegex = f'(?<morning>matin[ée]e|matin)'
    AfternoonRegex = f'(?<afternoon>(d\'|l\')?apr[eè]s(-|\\s*)midi)'
    MidmorningRegex = f'(?<midmorning>milieu\\s*d[ue]\\s*{MorningRegex})'
    MiddayRegex = f'(?<midday>milieu(\\s*|-)d[eu]\\s*(jour|midi)|apr[eè]s(-|\\s*)midi)'
    MidafternoonRegex = f'(?<midafternoon>milieu\\s*d\'+{AfternoonRegex})'
    MidTimeRegex = f'(?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))'
    AtRegex = f'\\b(((?<=\\b[àa]\\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\\b'
    IshRegex = f'\\b(peu\\s*pr[èe]s\\s*{BaseDateTime.HourRegex}|peu\\s*pr[èe]s\\s*{WrittenTimeRegex}|peu\\s*pr[èe]s\\s*[àa]\\s*{BaseDateTime.HourRegex}|peu pr[èe]s midi)\\b'
    TimeUnitRegex = f'(?<unit>heures|heure|hrs|hr|h|minutes|minute|mins|min|secondes|seconde|secs|sec)\\b'
    RestrictedTimeUnitRegex = f'(?<unit>huere|minute)\\b'
    ConnectNumRegex = f'{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\\s*{DescRegex}'
    FivesRegex = f'(?<tens>(quinze|vingt(\\s*|-*(cinq))?|trente(\\s*|-*(cinq))?|quarante(\\s*|-*(cinq))??|cinquante(\\s*|-*(cinq))?|dix|cinq))\\b'
    PeriodHourNumRegex = f'(?<hour>vingt-et-un|vingt-deux|vingt-trois|vingt-quatre|zero|une|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt)'
    TimeRegex1 = f'\\b({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\\s*{DescRegex}(\\s+{TimePrefix})?'
    TimeRegex2 = f'(\\b{TimePrefix}\\s+)?(t)?{BaseDateTime.HourRegex}(\\s*)?:(\\s*)?{BaseDateTime.MinuteRegex}((\\s*)?:(\\s*)?{BaseDateTime.SecondRegex})?((\\s*{DescRegex})|\\b)'
    TimeRegex3 = f'\\b{BaseDateTime.HourRegex}\\.{BaseDateTime.MinuteRegex}(\\s*{DescRegex})(\\s+{TimePrefix})?'
    TimeRegex4 = f'\\b{BasicTime}(\\s*{DescRegex})?(\\s+{TimePrefix})?\\s+{TimeSuffix}\\b'
    TimeRegex5 = f'\\b{BasicTime}((\\s*{DescRegex})|\\b)(\\s+{TimePrefix})?'
    TimeRegex6 = f'{BasicTime}(\\s*{DescRegex})?\\s+{TimeSuffix}\\b'
    TimeRegex7 = f'\\b{TimeSuffix}\\s+[àa]\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex8 = f'\\b{TimeSuffix}\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex9 = f'\\b{PeriodHourNumRegex}\\s+{FivesRegex}((\\s*{DescRegex})|\\b)'
    TimeRegex10 = f'\\b{BaseDateTime.HourRegex}(\\s*h\\s*){BaseDateTime.MinuteRegex}(\\s*{DescRegex})?(\\s+{TimePrefix})?'
    HourRegex = f'\\b{BaseDateTime.HourRegex}'
    PeriodDescRegex = f'(?<desc>pm|am|p\\.m\\.|a\\.m\\.|p)'
    PeriodPmRegex = f'(?<pm>dans l\'apr[eè]s-midi|ce soir|d[eu] soir|dans l[ea] soir[eé]e|dans la nuit|d[eu] soir[ée]e)s?'
    PeriodAmRegex = f'(?<am>matin|d[eu] matin|matin[ée]e)s?'
    PureNumFromTo = f'((du|de|des|depuis)\\s+)?({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{PeriodDescRegex}))?\\s*{TillRegex}\\s*({HourRegex}|{PeriodHourNumRegex})\\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex})?'
    PureNumBetweenAnd = f'(entre\\s+)({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{PeriodDescRegex}))?\\s*{RangeConnectorRegex}\\s*({HourRegex}|{PeriodHourNumRegex})\\s*(?<rightDesc>{PmRegex}|{AmRegex}|{PeriodDescRegex})?'
    SpecificTimeFromTo = f'^[.]'
    SpecificTimeBetweenAnd = f'^[.]'
    PrepositionRegex = f'(?<prep>^([aà] la|en|sur\\s*l[ea]|sur|de)$)'
    TimeOfDayRegex = f'\\b(?<timeOfDay>((((dans\\s+(l[ea])?\\s+)?((?<early>d[eé]but(\\s+|-)|t[oô]t(\\s+|-)(l[ea]\\s*)?)|(?<late>fin\\s*|fin de(\\s+(la)?)|tard\\s*))?(matin[ée]e|matin|((d|l)?\'?)apr[eè]s[-|\\s*]midi|nuit|soir[eé]e|soir)))|(((\\s+(l[ea])?\\s+)?)(jour|journ[eé]e)))s?)\\b'
    SpecificTimeOfDayRegex = f'\\b(({RelativeRegex}\\s+{TimeOfDayRegex})|({TimeOfDayRegex}\\s*({NextSuffixRegex}))\\b|\\bsoir|\\bdu soir)s?\\b'
    TimeFollowedUnit = f'^\\s*{TimeUnitRegex}'
    TimeNumberCombinedWithUnit = f'\\b(?<num>\\d+(\\.\\d*)?){TimeUnitRegex}'
    NowRegex = f'\\b(?<now>(ce\\s+)?moment|maintenant|d[eè]s que possible|dqp|r[eé]cemment|auparavant)\\b'
    SuffixRegex = f'^\\s*(dans\\s+l[ea]\\s+)|(en\\s+)|(du)?(matin|matin([eé]e)?|apr[eè]s-midi|soir[eé]e|nuit)\\b'
    DateTimeTimeOfDayRegex = f'\\b(?<timeOfDay>matin[ée]e|matin|apr[eè]s-midi|nuit|soir)\\b'
    DateTimeSpecificTimeOfDayRegex = f'\\b(({RelativeRegex}\\s+{DateTimeTimeOfDayRegex})\\b|\\b(ce|cette\\s+)(soir|nuit))\\b'
    TimeOfTodayAfterRegex = f'^\\s*(,\\s*)?(en|dans|du\\s+)?{DateTimeSpecificTimeOfDayRegex}'
    TimeOfTodayBeforeRegex = f'{DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+([àa]|pour))?\\s*$'
    SimpleTimeOfTodayAfterRegex = f'({HourNumRegex}|{BaseDateTime.HourRegex})\\s*(,\\s*)?(en|[àa]\\s+)?{DateTimeSpecificTimeOfDayRegex}'
    SimpleTimeOfTodayBeforeRegex = f'{DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+([àa]|vers))?\\s*({HourNumRegex}|{BaseDateTime.HourRegex})'
    SpecificEndOfRegex = f'(la\\s+)?fin(\\s+de\\s*|\\s*de*l[ea])?\\s*$'
    UnspecificEndOfRegex = f'^[.]'
    UnspecificEndOfRangeRegex = f'^[.]'
    PeriodTimeOfDayRegex = f'\\b((dans\\s+(le)?\\s+)?((?<early>d[eé]but(\\s+|-|d[ue]|de la)|t[oô]t)|(?<late>tard\\s*|fin(\\s+|-|d[eu])?))?(?<timeOfDay>matin|((d|l)?\'?)apr[eè]s-midi|nuit|soir[eé]e|soir))\\b'
    PeriodSpecificTimeOfDayRegex = f'\\b(({RelativeRegex}\\s+{PeriodTimeOfDayRegex})\\b|\\b(ce|cette\\s+)(soir|nuit))\\b'
    PeriodTimeOfDayWithDateRegex = f'\\b(({TimeOfDayRegex}))\\b'
    LessThanRegex = f'^[.]'
    MoreThanRegex = f'^[.]'
    DurationUnitRegex = f'(?<unit>ans|ann[eé]e|mois|semaines|semaine|jour|jours|heures|heure|hrs|hr|h|minutes|minute|mins|min|secondes|seconde|secs|sec|ann[eé]es|journ[eé]e)\\b'
    SuffixAndRegex = f'(?<suffix>\\s*(et)\\s+((un|une)\\s+)?(?<suffix_num>demi|quart))'
    PeriodicRegex = f'\\b(?<periodic>quotidienne|quotidien|journellement|mensuel|mensuelle|jour|jours|hebdomadaire|bihebdomadaire|annuellement|annuel)\\b'
    EachUnitRegex = f'(?<each>(chaque|toutes les|tous les)(?<other>\\s+autres)?\\s*{DurationUnitRegex})'
    EachPrefixRegex = f'\\b(?<each>(chaque|tous les|(toutes les))\\s*$)'
    SetEachRegex = f'\\b(?<each>(chaque|tous les|(toutes les))\\s*)'
    SetLastRegex = f'(?<last>prochain|dernier|derni[eè]re|pass[ée]s|pr[eé]c[eé]dent|courant|en\\s*cours)'
    EachDayRegex = f'^\\s*(chaque|tous les)\\s*(jour|jours)\\b'
    DurationFollowedUnit = f'^\\s*{SuffixAndRegex}?(\\s+|-)?{DurationUnitRegex}'
    NumberCombinedWithDurationUnit = f'\\b(?<num>\\d+(\\.\\d*)?)(-)?{DurationUnitRegex}'
    AnUnitRegex = f'\\b(((?<half>demi\\s+)?(-)\\s+{DurationUnitRegex}))'
    DuringRegex = f'^[.]'
    AllRegex = f'\\b(?<all>toute\\s(l[\'ea])\\s?(?<unit>ann[eé]e|mois|semaine|semaines|jour|jours|journ[eé]e))\\b'
    HalfRegex = f'(((un|une)\\s*)|\\b)(?<half>demi?(\\s*|-)+(?<unit>ann[eé]e|ans|mois|semaine|jour|heure))\\b'
    ConjunctionRegex = f'\\b((et(\\s+de|pour)?)|avec)\\b'
    HolidayRegex1 = f'\\b(?<holiday>vendredi saint|mercredi des cendres|p[aâ]ques|l\'action de gr[âa]ce|mardi gras|la saint-sylvestre|la saint sylvestre|la saint-valentin|la saint valentin|nouvel an chinois|nouvel an|r[eé]veillon de nouvel an|jour de l\'an|premier-mai|ler-mai|1-mai|poisson d\'avril|r[eé]veillon de no[eë]l|veille de no[eë]l|noël|noel|thanksgiving|halloween|yuandan)(\\s+((d[ue]\\s+|d\'))?({YearRegex}|({ThisPrefixRegex}\\s+)ann[eé]e|ann[eé]e\\s+({PastSuffixRegex}|{NextSuffixRegex})))?\\b'
    HolidayRegex2 = f'\\b(?<holiday>martin luther king|martin luther king jr|toussaint|st patrick|st george|cinco de mayo|l\'ind[eé]pendance|guy fawkes)(\\s+(de\\s+)?({YearRegex}|{ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+({PastSuffixRegex}|{NextSuffixRegex})))?\\b'
    HolidayRegex3 = f'(?<holiday>(jour\\s*(d[eu]|des)\\s*(canberra|p[aâ]ques|colomb|bastille|la prise de la bastille|l\'ind[eé]pendance|l\'ind[eé]pendance am[eé]ricaine|thanks\\s*giving|bapt[êe]me|nationale|d\'armistice|inaugueration|marmotte|assomption|femme|comm[ée]moratif)))(\\s+(de\\s+)?({YearRegex}|{ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+({PastSuffixRegex}|{NextSuffixRegex})))?'
    HolidayRegex4 = f'(?<holiday>(f[eê]te\\s*(d[eu]|des)\\s*)(travail|m[eè]re|m[eè]res|p[eè]re|p[eè]res))(\\s+(de\\s+)?({YearRegex}|{ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+({PastSuffixRegex}|{NextSuffixRegex})))?\\b'
    DateTokenPrefix = 'le '
    TimeTokenPrefix = 'à '
    TokenBeforeDate = 'le '
    TokenBeforeTime = 'à '
    AMTimeRegex = f'(?<am>matin[ée]e|matin)'
    PMTimeRegex = f'\\b(?<pm>(d\'|l\')?apr[eè]s-midi|soir|nuit|\\s*ce soir|du soir)\\b'
    BeforeRegex = f'\\b(avant)\\b'
    BeforeRegex2 = f'\\b(entre\\s*(le|la(s)?)?)\\b'
    AfterRegex = f'\\b(apres)\\b'
    SinceRegex = f'\\b(depuis)\\b'
    AroundRegex = f'^[.]'
    AgoPrefixRegex = f'\\b(y a)\\b'
    LaterRegex = f'\\b(plus tard)\\b'
    AgoRegex = f'^[.]'
    InConnectorRegex = f'\\b(dans|en|sur)\\b'
    WithinNextPrefixRegex = f'^[.]'
    MorningStartEndRegex = f'(^(matin))|((matin)$)'
    AfternoonStartEndRegex = f'(^((d\'|l\')?apr[eè]s-midi))|(((d\'|l\')?apr[eè]s-midi)$)'
    EveningStartEndRegex = f'(^(soir[ée]e|soir))|((soir[ée]e|soir)$)'
    NightStartEndRegex = f'(^(nuit))|((nuit)$)'
    InexactNumberRegex = f'\\b(quelque|quel qu[ée]s|quelqu[ée]s|plusieur|plusieurs|divers)\\b'
    InexactNumberUnitRegex = f'({InexactNumberRegex})\\s+({DurationUnitRegex})'
    RelativeTimeUnitRegex = f'(((({ThisPrefixRegex})?)\\s+({TimeUnitRegex}(\\s*{NextSuffixRegex}|{PastSuffixRegex})?))|((le))\\s+({RestrictedTimeUnitRegex}))'
    RelativeDurationUnitRegex = f'(((?<=({ThisPrefixRegex})\\s+)?\\b({DurationUnitRegex})(\\s+{NextSuffixRegex}|{PastSuffixRegex})?)|((le|my))\\s+({RestrictedTimeUnitRegex}))'
    ReferenceDatePeriodRegex = f'^[.]'
    NextPrefixRegex = f'^[\\.]'
    PastPrefixRegex = f'^[\\.]'
    RelativeDayRegex = f'^[\\.]'
    ConnectorRegex = f'^(,|pour|t|vers)$'
    ConnectorAndRegex = f'\\b(et\\s*(le|la(s)?)?)\\b.+'
    FromRegex = f'((de|du)?)$'
    FromRegex2 = f'((depuis|de)(\\s*la(s)?)?)$'
    FromToRegex = f'\\b(du|de|des|depuis).+(à|a|au)\\b.+'
    SingleAmbiguousMonthRegex = f'^(le\\s+)?(may|march)$'
    UnspecificDatePeriodRegex = f'^[.]'
    PrepositionSuffixRegex = f'\\b(du|de|[àa]|vers|dans)$'
    FlexibleDayRegex = f'(?<DayOfMonth>([A-Za-z]+\\s)?[A-Za-z\\d]+)'
    ForTheRegex = f'\\b(((pour le {FlexibleDayRegex})|(dans (le\\s+)?{FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\\s*(,|\\.|!|\\?|$)))'
    WeekDayAndDayOfMonthRegex = f'\\b{WeekDayRegex}\\s+(le\\s+{FlexibleDayRegex})\\b'
    RestOfDateRegex = f'\\b(reste|fin)\\s+(d[eu]\\s+)?((le|cette|ce)\\s+)?(?<duration>semaine|mois|l\'ann[ée]e)\\b'
    RestOfDateTimeRegex = f'\\b(reste|fin)\\s+(d[eu]\\s+)?((le|cette|ce)\\s+)?(?<unit>jour)\\b'
    LaterEarlyPeriodRegex = f'^[.]'
    WeekWithWeekDayRangeRegex = f'^[.]'
    GeneralEndingRegex = f'^[.]'
    MiddlePauseRegex = f'^[.]'
    DurationConnectorRegex = f'^[.]'
    PrefixArticleRegex = f'^[\\.]'
    OrRegex = f'^[.]'
    YearPlusNumberRegex = f'^[.]'
    NumberAsTimeRegex = f'^[.]'
    TimeBeforeAfterRegex = f'^[.]'
    DateNumberConnectorRegex = f'^[.]'
    CenturyRegex = f'^[.]'
    DecadeRegex = f'^[.]'
    DecadeWithCenturyRegex = f'^[.]'
    RelativeDecadeRegex = f'^[.]'
    YearSuffix = f'(,?\\s*({DateYearRegex}|{FullTextYearRegex}))'
    YearAfterRegex = f'^[.]'
    YearPeriodRegex = f'^[.]'
    FutureSuffixRegex = f'^[.]'
    ComplexDatePeriodRegex = f'^[.]'
    UnitMap = dict([(r'''annees''', r'''Y'''),
                    (r'''annee''', r'''Y'''),
                    (r'''ans''', r'''Y'''),
                    (r'''mois''', r'''MON'''),
                    (r'''semaines''', r'''W'''),
                    (r'''semaine''', r'''W'''),
                    (r'''journees''', r'''D'''),
                    (r'''journee''', r'''D'''),
                    (r'''jour''', r'''D'''),
                    (r'''jours''', r'''D'''),
                    (r'''heures''', r'''H'''),
                    (r'''heure''', r'''H'''),
                    (r'''hrs''', r'''H'''),
                    (r'''hr''', r'''H'''),
                    (r'''h''', r'''H'''),
                    (r'''minutes''', r'''M'''),
                    (r'''minute''', r'''M'''),
                    (r'''mins''', r'''M'''),
                    (r'''min''', r'''M'''),
                    (r'''secondes''', r'''S'''),
                    (r'''seconde''', r'''S'''),
                    (r'''secs''', r'''S'''),
                    (r'''sec''', r'''S''')])
    UnitValueMap = dict([(r'''annees''', 31536000),
                         (r'''annee''', 31536000),
                         (r'''l'annees''', 31536000),
                         (r'''l'annee''', 31536000),
                         (r'''ans''', 31536000),
                         (r'''mois''', 2592000),
                         (r'''semaines''', 604800),
                         (r'''semaine''', 604800),
                         (r'''journees''', 86400),
                         (r'''journee''', 86400),
                         (r'''jour''', 86400),
                         (r'''jours''', 86400),
                         (r'''heures''', 3600),
                         (r'''heure''', 3600),
                         (r'''hrs''', 3600),
                         (r'''hr''', 3600),
                         (r'''h''', 3600),
                         (r'''minutes''', 60),
                         (r'''minute''', 60),
                         (r'''mins''', 60),
                         (r'''min''', 60),
                         (r'''secondes''', 1),
                         (r'''seconde''', 1),
                         (r'''secs''', 1),
                         (r'''sec''', 1)])
    SeasonMap = dict([(r'''printemps''', r'''SP'''),
                      (r'''été''', r'''SU'''),
                      (r'''automne''', r'''FA'''),
                      (r'''hiver''', r'''WI''')])
    SeasonValueMap = dict([(r'''SP''', 3),
                           (r'''SU''', 6),
                           (r'''FA''', 9),
                           (r'''WI''', 12)])
    CardinalMap = dict([(r'''premier''', 1),
                        (r'''1er''', 1),
                        (r'''deuxième''', 2),
                        (r'''2e''', 2),
                        (r'''troisième''', 3),
                        (r'''troisieme''', 3),
                        (r'''3e''', 3),
                        (r'''quatrième''', 4),
                        (r'''4e''', 4),
                        (r'''cinqième''', 5),
                        (r'''5e''', 5)])
    DayOfWeek = dict([(r'''lundi''', 1),
                      (r'''mardi''', 2),
                      (r'''mercredi''', 3),
                      (r'''jeudi''', 4),
                      (r'''vendredi''', 5),
                      (r'''samedi''', 6),
                      (r'''dimanche''', 0),
                      (r'''lun''', 1),
                      (r'''mar''', 2),
                      (r'''mer''', 3),
                      (r'''jeu''', 4),
                      (r'''ven''', 5),
                      (r'''sam''', 6),
                      (r'''dim''', 0)])
    MonthOfYear = dict([(r'''janvier''', 1),
                        (r'''fevrier''', 2),
                        (r'''février''', 2),
                        (r'''mars''', 3),
                        (r'''mar''', 3),
                        (r'''avril''', 4),
                        (r'''avr''', 4),
                        (r'''mai''', 5),
                        (r'''juin''', 6),
                        (r'''jun''', 6),
                        (r'''juillet''', 7),
                        (r'''aout''', 8),
                        (r'''août''', 8),
                        (r'''septembre''', 9),
                        (r'''octobre''', 10),
                        (r'''novembre''', 11),
                        (r'''decembre''', 12),
                        (r'''décembre''', 12),
                        (r'''janv''', 1),
                        (r'''janv.''', 1),
                        (r'''jan''', 1),
                        (r'''fevr''', 2),
                        (r'''fevr.''', 2),
                        (r'''févr.''', 2),
                        (r'''févr''', 2),
                        (r'''fev''', 2),
                        (r'''juil''', 7),
                        (r'''jul''', 7),
                        (r'''sep''', 9),
                        (r'''sept.''', 9),
                        (r'''sept''', 9),
                        (r'''oct''', 10),
                        (r'''oct.''', 10),
                        (r'''nov''', 11),
                        (r'''nov.''', 11),
                        (r'''dec''', 12),
                        (r'''déc.''', 12),
                        (r'''déc''', 12),
                        (r'''1''', 1),
                        (r'''2''', 2),
                        (r'''3''', 3),
                        (r'''4''', 4),
                        (r'''5''', 5),
                        (r'''6''', 6),
                        (r'''7''', 7),
                        (r'''8''', 8),
                        (r'''9''', 9),
                        (r'''10''', 10),
                        (r'''11''', 11),
                        (r'''12''', 12),
                        (r'''01''', 1),
                        (r'''02''', 2),
                        (r'''03''', 3),
                        (r'''04''', 4),
                        (r'''05''', 5),
                        (r'''06''', 6),
                        (r'''07''', 7),
                        (r'''08''', 8),
                        (r'''09''', 9)])
    Numbers = dict([(r'''zero''', 0),
                    (r'''un''', 1),
                    (r'''une''', 1),
                    (r'''a''', 1),
                    (r'''deux''', 2),
                    (r'''trois''', 3),
                    (r'''quatre''', 4),
                    (r'''cinq''', 5),
                    (r'''six''', 6),
                    (r'''sept''', 7),
                    (r'''huit''', 8),
                    (r'''neuf''', 9),
                    (r'''dix''', 10),
                    (r'''onze''', 11),
                    (r'''douze''', 12),
                    (r'''treize''', 13),
                    (r'''quatorze''', 14),
                    (r'''quinze''', 15),
                    (r'''seize''', 16),
                    (r'''dix-sept''', 17),
                    (r'''dix-huit''', 18),
                    (r'''dix-neuf''', 19),
                    (r'''vingt-et-un''', 21),
                    (r'''vingt et un''', 21),
                    (r'''vingt''', 20),
                    (r'''vingt deux''', 22),
                    (r'''vingt-deux''', 22),
                    (r'''vingt trois''', 23),
                    (r'''vingt-trois''', 23),
                    (r'''vingt quatre''', 24),
                    (r'''vingt-quatre''', 24),
                    (r'''vingt cinq''', 25),
                    (r'''vingt-cinq''', 25),
                    (r'''vingt six''', 26),
                    (r'''vingt-six''', 26),
                    (r'''vingt sept''', 27),
                    (r'''vingt-sept''', 27),
                    (r'''vingt huit''', 28),
                    (r'''vingt-huit''', 28),
                    (r'''vingt neuf''', 29),
                    (r'''vingt-neuf''', 29),
                    (r'''trente''', 30),
                    (r'''trente et un''', 31),
                    (r'''trente-et-un''', 31),
                    (r'''trente deux''', 32),
                    (r'''trente-deux''', 32),
                    (r'''trente trois''', 33),
                    (r'''trente-trois''', 33),
                    (r'''trente quatre''', 34),
                    (r'''trente-quatre''', 34),
                    (r'''trente cinq''', 35),
                    (r'''trente-cinq''', 35),
                    (r'''trente six''', 36),
                    (r'''trente-six''', 36),
                    (r'''trente sept''', 37),
                    (r'''trente-sept''', 37),
                    (r'''trente huit''', 38),
                    (r'''trente-huit''', 38),
                    (r'''trente neuf''', 39),
                    (r'''trente-neuf''', 39),
                    (r'''quarante''', 40),
                    (r'''quarante et un''', 41),
                    (r'''quarante-et-un''', 41),
                    (r'''quarante deux''', 42),
                    (r'''quarante-duex''', 42),
                    (r'''quarante trois''', 43),
                    (r'''quarante-trois''', 43),
                    (r'''quarante quatre''', 44),
                    (r'''quarante-quatre''', 44),
                    (r'''quarante cinq''', 45),
                    (r'''quarante-cinq''', 45),
                    (r'''quarante six''', 46),
                    (r'''quarante-six''', 46),
                    (r'''quarante sept''', 47),
                    (r'''quarante-sept''', 47),
                    (r'''quarante huit''', 48),
                    (r'''quarante-huit''', 48),
                    (r'''quarante neuf''', 49),
                    (r'''quarante-neuf''', 49),
                    (r'''cinquante''', 50),
                    (r'''cinquante et un''', 51),
                    (r'''cinquante-et-un''', 51),
                    (r'''cinquante deux''', 52),
                    (r'''cinquante-deux''', 52),
                    (r'''cinquante trois''', 53),
                    (r'''cinquante-trois''', 53),
                    (r'''cinquante quatre''', 54),
                    (r'''cinquante-quatre''', 54),
                    (r'''cinquante cinq''', 55),
                    (r'''cinquante-cinq''', 55),
                    (r'''cinquante six''', 56),
                    (r'''cinquante-six''', 56),
                    (r'''cinquante sept''', 57),
                    (r'''cinquante-sept''', 57),
                    (r'''cinquante huit''', 58),
                    (r'''cinquante-huit''', 58),
                    (r'''cinquante neuf''', 59),
                    (r'''cinquante-neuf''', 59),
                    (r'''soixante''', 60),
                    (r'''soixante et un''', 61),
                    (r'''soixante-et-un''', 61),
                    (r'''soixante deux''', 62),
                    (r'''soixante-deux''', 62),
                    (r'''soixante trois''', 63),
                    (r'''soixante-trois''', 63),
                    (r'''soixante quatre''', 64),
                    (r'''soixante-quatre''', 64),
                    (r'''soixante cinq''', 65),
                    (r'''soixante-cinq''', 65),
                    (r'''soixante six''', 66),
                    (r'''soixante-six''', 66),
                    (r'''soixante sept''', 67),
                    (r'''soixante-sept''', 67),
                    (r'''soixante huit''', 68),
                    (r'''soixante-huit''', 68),
                    (r'''soixante neuf''', 69),
                    (r'''soixante-neuf''', 69),
                    (r'''soixante dix''', 70),
                    (r'''soixante-dix''', 70),
                    (r'''soixante et onze''', 71),
                    (r'''soixante-et-onze''', 71),
                    (r'''soixante douze''', 72),
                    (r'''soixante-douze''', 72),
                    (r'''soixante treize''', 73),
                    (r'''soixante-treize''', 73),
                    (r'''soixante quatorze''', 74),
                    (r'''soixante-quatorze''', 74),
                    (r'''soixante quinze''', 75),
                    (r'''soixante-quinze''', 75),
                    (r'''soixante seize''', 76),
                    (r'''soixante-seize''', 76),
                    (r'''soixante dix sept''', 77),
                    (r'''soixante-dix-sept''', 77),
                    (r'''soixante dix huit''', 78),
                    (r'''soixante-dix-huit''', 78),
                    (r'''soixante dix neuf''', 79),
                    (r'''soixante-dix-neuf''', 79),
                    (r'''quatre vingt''', 80),
                    (r'''quatre-vingt''', 80),
                    (r'''quatre vingt un''', 81),
                    (r'''quatre-vingt-un''', 81),
                    (r'''quatre vingt deux''', 82),
                    (r'''quatre-vingt-duex''', 82),
                    (r'''quatre vingt trois''', 83),
                    (r'''quatre-vingt-trois''', 83),
                    (r'''quatre vingt quatre''', 84),
                    (r'''quatre-vingt-quatre''', 84),
                    (r'''quatre vingt cinq''', 85),
                    (r'''quatre-vingt-cinq''', 85),
                    (r'''quatre vingt six''', 86),
                    (r'''quatre-vingt-six''', 86),
                    (r'''quatre vingt sept''', 87),
                    (r'''quatre-vingt-sept''', 87),
                    (r'''quatre vingt huit''', 88),
                    (r'''quatre-vingt-huit''', 88),
                    (r'''quatre vingt neuf''', 89),
                    (r'''quatre-vingt-neuf''', 89),
                    (r'''quatre vingt dix''', 90),
                    (r'''quatre-vingt-dix''', 90),
                    (r'''quatre vingt onze''', 91),
                    (r'''quatre-vingt-onze''', 91),
                    (r'''quatre vingt douze''', 92),
                    (r'''quatre-vingt-douze''', 92),
                    (r'''quatre vingt treize''', 93),
                    (r'''quatre-vingt-treize''', 93),
                    (r'''quatre vingt quatorze''', 94),
                    (r'''quatre-vingt-quatorze''', 94),
                    (r'''quatre vingt quinze''', 95),
                    (r'''quatre-vingt-quinze''', 95),
                    (r'''quatre vingt seize''', 96),
                    (r'''quatre-vingt-seize''', 96),
                    (r'''quatre vingt dix sept''', 97),
                    (r'''quatre-vingt-dix-sept''', 97),
                    (r'''quatre vingt dix huit''', 98),
                    (r'''quatre-vingt-dix-huit''', 98),
                    (r'''quatre vingt dix neuf''', 99),
                    (r'''quatre-vingt-dix-neuf''', 99),
                    (r'''cent''', 100)])
    DayOfMonth = dict([(r'''1er''', 1),
                       (r'''2e''', 2),
                       (r'''3e''', 3),
                       (r'''4e''', 4),
                       (r'''5e''', 5),
                       (r'''6e''', 6),
                       (r'''7e''', 7),
                       (r'''8e''', 8),
                       (r'''9e''', 9),
                       (r'''10e''', 10),
                       (r'''11e''', 11),
                       (r'''12e''', 12),
                       (r'''13e''', 13),
                       (r'''14e''', 14),
                       (r'''15e''', 15),
                       (r'''16e''', 16),
                       (r'''17e''', 17),
                       (r'''18e''', 18),
                       (r'''19e''', 19),
                       (r'''20e''', 20),
                       (r'''21e''', 21),
                       (r'''22e''', 22),
                       (r'''23e''', 23),
                       (r'''24e''', 24),
                       (r'''25e''', 25),
                       (r'''26e''', 26),
                       (r'''27e''', 27),
                       (r'''28e''', 28),
                       (r'''29e''', 29),
                       (r'''30e''', 30),
                       (r'''31e''', 31)])
    DoubleNumbers = dict([(r'''demi''', 0.5),
                          (r'''quart''', 0.25)])
    HolidayNames = dict([(r'''fathers''', ["peres", "p\u00e8res", "f\u00eatedesp\u00e8res", "fetedesperes"]),
                         (r'''mothers''', ["f\u00eatedesm\u00e8res", "fetedesmeres"]),
                         (r'''thanksgiving''', ["lactiondegrace", "lactiondegr\u00e2ce", "jourdethanksgiving", "thanksgiving"]),
                         (r'''martinlutherking''', ["journeemartinlutherking", "martinlutherkingjr"]),
                         (r'''washingtonsbirthday''', ["washingtonsbirthday", "washingtonbirthday"]),
                         (r'''canberra''', ["canberraday"]),
                         (r'''labour''', ["fetedetravail", "travail", "fetedutravail"]),
                         (r'''columbus''', ["columbusday"]),
                         (r'''memorial''', ["jourcomm\u00e9moratif", "jourcommemoratif"]),
                         (r'''yuandan''', ["yuandan", "nouvelanchinois"]),
                         (r'''maosbirthday''', ["maosbirthday"]),
                         (r'''teachersday''', ["teachersday", "teacherday"]),
                         (r'''singleday''', ["singleday"]),
                         (r'''allsaintsday''', ["allsaintsday"]),
                         (r'''youthday''', ["youthday"]),
                         (r'''childrenday''', ["childrenday", "childday"]),
                         (r'''femaleday''', ["femaleday"]),
                         (r'''treeplantingday''', ["treeplantingday"]),
                         (r'''arborday''', ["arborday"]),
                         (r'''girlsday''', ["girlsday"]),
                         (r'''whiteloverday''', ["whiteloverday"]),
                         (r'''loverday''', ["loverday"]),
                         (r'''christmas''', ["noel", "no\u00ebl"]),
                         (r'''xmas''', ["xmas"]),
                         (r'''newyear''', ["nouvellesannees", "nouvelan"]),
                         (r'''newyearday''', ["jourdunouvelan"]),
                         (r'''newyearsday''', ["jourdel'an", "jourpremierdelannee", "jourpremierdelann\u00e9e"]),
                         (r'''inaugurationday''', ["jourd'inaugueration", "inaugueration"]),
                         (r'''groundhougday''', ["marmotte"]),
                         (r'''valentinesday''', ["lasaint-valentin", "lasaintvalentin"]),
                         (r'''stpatrickday''', ["stpatrickday"]),
                         (r'''aprilfools''', ["poissond'avril"]),
                         (r'''stgeorgeday''', ["stgeorgeday"]),
                         (r'''mayday''', ["premier-mai", "ler-mai", "1-mai"]),
                         (r'''cincodemayoday''', ["cincodemayo"]),
                         (r'''baptisteday''', ["bapteme", "bapt\u00eame"]),
                         (r'''usindependenceday''', ["l'independanceamericaine", "lind\u00e9pendanceam\u00e9ricaine"]),
                         (r'''independenceday''', ["l'ind\u00e9pendance", "lindependance"]),
                         (r'''bastilleday''', ["laprisedelabastille", "bastille"]),
                         (r'''halloweenday''', ["halloween"]),
                         (r'''allhallowday''', ["allhallowday"]),
                         (r'''allsoulsday''', ["allsoulsday"]),
                         (r'''guyfawkesday''', ["guyfawkesday"]),
                         (r'''veteransday''', ["veteransday"]),
                         (r'''christmaseve''', ["reveillondenoel", "r\u00e9veillondeno\u00ebl", "veilledenoel", "veilledeno\u00ebl"]),
                         (r'''newyeareve''', ["r\u00e9veillondenouvelan", "reveillondenouvelan", "lasaint-sylvestre", "lasaintsylvestre"])])
    NightRegex = f'\\b(minuit|nuit)\\b'
    WrittenDecades = dict([(r'''''', 0)])
    SpecialDecadeCases = dict([(r'''''', 0)])
    DefaultLanguageFallback = 'DMY'
    DurationDateRestrictions = []
    MorningTermList = [r'matinee', r'matin', r'matinée']
    AfternoonTermList = [r'apres-midi', r'apres midi', r'après midi', r'après-midi']
    EveningTermList = [r'soir', r'soiree', r'soirée']
    DaytimeTermList = [r'jour', r'journee', r'journée']
    NightTermList = [r'nuit']
    SameDayTerms = [r'aujourd\'hui', r'auj']
    PlusOneDayTerms = [r'demain', r'a2m1', r'lendemain', r'jour suivant']
    MinusOneDayTerms = [r'hier', r'dernier']
    PlusTwoDayTerms = [r'après demain', r'après-demain', r'apres-demain']
    MinusTwoDayTerms = [r'avant-hier', r'avant hier']
    FutureStartTerms = [r'cette']
    FutureEndTerms = [r'prochaine', r'prochain']
    LastCardinalTerms = [r'dernières', r'dernière', r'dernieres', r'derniere', r'dernier']
    MonthTerms = [r'mois']
    MonthToDateTerms = [r'mois à ce jour']
    WeekendTerms = [r'fin de semaine', r'le weekend']
    WeekTerms = [r'semaine']
    YearTerms = [r'années', r'ans', r'l\'annees', r'l\'annee']
    YearToDateTerms = [r'année à ce jour', r'an à ce jour']
# pylint: enable=line-too-long
