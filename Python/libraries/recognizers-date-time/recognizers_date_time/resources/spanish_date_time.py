# ------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
# ------------------------------------------------------------------------------

from .base_date_time import BaseDateTime
# pylint: disable=line-too-long
class SpanishDateTime:
    TillRegex = f'(?<till>hasta|al|a|--|-|—|——)(\\s+(el|la(s)?))?'
    AndRegex = f'(?<and>y|y\\s*el|--|-|—|——)'
    DayRegex = f'(?<day>01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|1|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)(?=\\b|t)'
    MonthNumRegex = f'(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\\b'
    AmDescRegex = f'({BaseDateTime.BaseAmDescRegex})'
    PmDescRegex = f'({BaseDateTime.BasePmDescRegex})'
    AmPmDescRegex = f'({BaseDateTime.BaseAmPmDescRegex})'
    DescRegex = f'(?<desc>({AmDescRegex}|{PmDescRegex}))'
    RangePrefixRegex = f'((desde|de|entre)\\s+(la(s)?\\s+)?)'
    TwoDigitYearRegex = f'\\b(?<![$])(?<year>([0-27-9]\\d))(?!(\\s*((\\:)|{AmDescRegex}|{PmDescRegex}|\\.\\d)))\\b'
    FullTextYearRegex = f'^[\\*]'
    YearRegex = f'({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})'
    RelativeMonthRegex = f'(?<relmonth>(este|pr[oó]ximo|[uú]ltimo)\\s+mes)\\b'
    MonthRegex = f'\\b(?<month>abril|abr|agosto|ago|diciembre|dic|febrero|feb|enero|ene|julio|jul|junio|jun|marzo|mar|mayo|may|noviembre|nov|octubre|oct|septiembre|setiembre|sept|set)\\b'
    MonthSuffixRegex = f'(?<msuf>(en\\s+|del\\s+|de\\s+)?({RelativeMonthRegex}|{MonthRegex}))'
    DateUnitRegex = f'(?<unit>años|año|meses|mes|semanas|semana|d[ií]a(s)?)\\b'
    PastRegex = f'(?<past>\\b(pasad(a|o)(s)?|[uú]ltim[oa](s)?|anterior(es)?|previo(s)?)\\b)'
    FutureRegex = f'(?<past>\\b(siguiente(s)?|pr[oó]xim[oa](s)?|dentro\\s+de|en)\\b)'
    SimpleCasesRegex = f'\\b((desde\\s+el|desde|del)\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex})\\s+{MonthSuffixRegex}((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontSimpleCasesRegex = f'\\b{MonthSuffixRegex}\\s+((desde\\s+el|desde|del)\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontBetweenRegex = f'\\b{MonthSuffixRegex}\\s+((entre|entre\\s+el)\\s+)({DayRegex})\\s*{AndRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    DayBetweenRegex = f'\\b((entre|entre\\s+el)\\s+)({DayRegex})\\s*{AndRegex}\\s*({DayRegex})\\s+{MonthSuffixRegex}((\\s+|\\s*,\\s*){YearRegex})?\\b'
    OneWordPeriodRegex = f'\\b(((pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en)\\s+)?(?<month>abril|abr|agosto|ago|diciembre|dic|febrero|feb|enero|ene|julio|jul|junio|jun|marzo|mar|mayo|may|noviembre|nov|octubre|oct|septiembre|setiembre|sept|set)|(?<=\\b(del|de la|el|la)\\s+)?(pr[oó]xim[oa](s)?|[uú]ltim[oa]?|est(e|a))\\s+(fin de semana|semana|mes|año)|fin de semana|(mes|años)? a la fecha)\\b'
    MonthWithYearRegex = f'\\b(((pr[oó]xim[oa](s)?|este|esta|[uú]ltim[oa]?|en)\\s+)?(?<month>abril|abr|agosto|ago|diciembre|dic|febrero|feb|enero|ene|julio|jul|junio|jun|marzo|mar|mayo|may|noviembre|nov|octubre|oct|septiembre|setiembre|sept|set)\\s+((de|del|de la)\\s+)?({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\\s+año))\\b'
    MonthNumWithYearRegex = f'({YearRegex}(\\s*?)[/\\-\\.](\\s*?){MonthNumRegex})|({MonthNumRegex}(\\s*?)[/\\-](\\s*?){YearRegex})'
    WeekOfMonthRegex = f'(?<wom>(la\\s+)?(?<cardinal>primera?|1ra|segunda|2da|tercera?|3ra|cuarta|4ta|quinta|5ta|[uú]ltima)\\s+semana\\s+{MonthSuffixRegex})'
    WeekOfYearRegex = f'(?<woy>(la\\s+)?(?<cardinal>primera?|1ra|segunda|2da|tercera?|3ra|cuarta|4ta|quinta|5ta|[uú]ltima?)\\s+semana(\\s+del?)?\\s+({YearRegex}|(?<order>pr[oó]ximo|[uú]ltimo|este)\\s+año))'
    FollowedDateUnit = f'^\\s*{DateUnitRegex}'
    NumberCombinedWithDateUnit = f'\\b(?<num>\\d+(\\.\\d*)?){DateUnitRegex}'
    QuarterRegex = f'(el\\s+)?(?<cardinal>primer|1er|segundo|2do|tercer|3ro|cuarto|4to)\\s+cuatrimestre(\\s+de|\\s*,\\s*)?\\s+({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\\s+año)'
    QuarterRegexYearFront = f'({YearRegex}|(?<order>pr[oó]ximo(s)?|[uú]ltimo?|este)\\s+año)\\s+(el\\s+)?(?<cardinal>(primer|primero)|1er|segundo|2do|(tercer|terceo)|3ro|cuarto|4to)\\s+cuatrimestre'
    AllHalfYearRegex = f'^[.]'
    PrefixDayRegex = f'^[.]'
    CenturySuffixRegex = f'^[.]'
    RelativeRegex = f'^[.]'
    SeasonRegex = f'\\b(?<season>(([uú]ltim[oa]|est[ea]|el|la|(pr[oó]xim[oa]s?|siguiente))\\s+)?(?<seas>primavera|verano|otoño|invierno)((\\s+del?|\\s*,\\s*)?\\s+({YearRegex}|(?<order>pr[oó]ximo|[uú]ltimo|este)\\s+año))?)\\b'
    WhichWeekRegex = f'(semana)(\\s*)(?<number>\\d\\d|\\d|0\\d)'
    WeekOfRegex = f'(semana)(\\s*)((do|da|de))'
    MonthOfRegex = f'(mes)(\\s*)((do|da|de))'
    RangeUnitRegex = f'\\b(?<unit>años|año|meses|mes|semanas|semana)\\b'
    InConnectorRegex = f'\\b(in)\\b'
    WithinNextPrefixRegex = f'^[.]'
    FromRegex = f'((desde|de)(\\s*la(s)?)?)$'
    ConnectorAndRegex = f'(y\\s*(la(s)?)?)$'
    BetweenRegex = f'(entre\\s*(la(s)?)?)'
    WeekDayRegex = f'\\b(?<weekday>domingos?|lunes|martes|mi[eé]rcoles|jueves|viernes|s[aá]bados?|lu|ma|mi|ju|vi|sa|do)\\b'
    OnRegex = f'(?<=\\ben\\s+)({DayRegex}s?)\\b'
    RelaxedOnRegex = f'(?<=\\b(en|el|del)\\s+)((?<day>10|11|12|13|14|15|16|17|18|19|1st|20|21|22|23|24|25|26|27|28|29|2|30|31|3|4|5|6|7|8|9)s?)\\b'
    ThisRegex = f'\\b((este\\s*){WeekDayRegex})|({WeekDayRegex}\\s*((de\\s+)?esta\\s+semana))\\b'
    LastDateRegex = f'\\b(([uú]ltimo)\\s*{WeekDayRegex})|({WeekDayRegex}(\\s+((de\\s+)?(esta|la)\\s+([uú]ltima\\s+)?semana)))\\b'
    NextDateRegex = f'\\b(((pr[oó]ximo|siguiente)\\s*){WeekDayRegex})|({WeekDayRegex}(\\s+(de\\s+)?(la\\s+)?(pr[oó]xima|siguiente)(\\s*semana)))\\b'
    SpecialDayRegex = f'\\b((el\\s+)?(d[ií]a\\s+antes\\s+de\\s+ayer|anteayer)|((el\\s+)?d[ií]a\\s+(despu[eé]s\\s+)?de\\s+mañana|pasado\\s+mañana)|(el\\s)?d[ií]a siguiente|(el\\s)?pr[oó]ximo\\s+d[ií]a|(el\\s+)?[uú]ltimo d[ií]a|(d)?el d[ií]a|ayer|mañana|hoy)\\b'
    SpecialDayWithNumRegex = f'^[.]'
    ForTheRegex = f'^[.]'
    WeekDayAndDayOfMonthRegex = f'^[.]'
    WeekDayOfMonthRegex = f'(?<wom>(el\\s+)?(?<cardinal>primer|1er|segundo|2do|tercer|3er|cuarto|4to|quinto|5to|[uú]ltimo)\\s+{WeekDayRegex}\\s+{MonthSuffixRegex})'
    RelativeWeekDayRegex = f'^[.]'
    NumberEndingPattern = f'^[.]'
    SpecialDateRegex = f'(?<=\\b(en)\\s+el\\s+){DayRegex}\\b'
    OfMonthRegex = f'^\\s*de\\s*{MonthSuffixRegex}'
    MonthEndRegex = f'({MonthRegex}\\s*(el)?\\s*$)'
    WeekDayEnd = f'{WeekDayRegex}\\s*,?\\s*$'
    DateYearRegex = f'(?<year>{YearRegex}|{TwoDigitYearRegex})'
    DateExtractor1 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}?((\\s*(de)|[/\\\\\\.\\-])\\s*)?{MonthRegex}\\b'
    DateExtractor2 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}\\s*([\\.\\-]|de)\\s*{MonthRegex}(\\s*,\\s*|\\s*(del?)\\s*){DateYearRegex}\\b'
    DateExtractor3 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}(\\s+|\\s*,\\s*|\\s+de\\s+|\\s*-\\s*){MonthRegex}((\\s+|\\s*,\\s*){DateYearRegex})?\\b'
    DateExtractor4 = f'\\b{MonthNumRegex}\\s*[/\\\\\\-]\\s*{DayRegex}\\s*[/\\\\\\-]\\s*{DateYearRegex}'
    DateExtractor5 = f'\\b{DayRegex}\\s*[/\\\\\\-\\.]\\s*({MonthNumRegex}|{MonthRegex})\\s*[/\\\\\\-\\.]\\s*{DateYearRegex}'
    DateExtractor6 = f'(?<=\\b(en|el)\\s+){MonthNumRegex}[\\-\\.]{DayRegex}\\b'
    DateExtractor7 = f'\\b{MonthNumRegex}\\s*/\\s*{DayRegex}((\\s+|\\s*,\\s*|\\s+de\\s+){DateYearRegex})?\\b'
    DateExtractor8 = f'(?<=\\b(en|el)\\s+){DayRegex}[\\\\\\-]{MonthNumRegex}\\b'
    DateExtractor9 = f'\\b{DayRegex}\\s*/\\s*{MonthNumRegex}((\\s+|\\s*,\\s*|\\s+de\\s+){DateYearRegex})?\\b'
    DateExtractor10 = f'\\b{YearRegex}\\s*[/\\\\\\-\\.]\\s*{MonthNumRegex}\\s*[/\\\\\\-\\.]\\s*{DayRegex}'
    HourNumRegex = f'\\b(?<hournum>cero|una|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce)\\b'
    MinuteNumRegex = f'(?<minnum>un|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|dieciseis|diecisiete|dieciocho|diecinueve|veinte|treinta|cuarenta|cincuenta)'
    DeltaMinuteNumRegex = f'(?<deltaminnum>un|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|dieciseis|diecisiete|dieciocho|diecinueve|veinte|treinta|cuarenta|cincuenta)'
    OclockRegex = f'(?<oclock>en\\s+punto)'
    PmRegex = f'(?<pm>((por|de|a|en)\\s+la)\\s+(tarde|noche))'
    AmRegex = f'(?<am>((por|de|a|en)\\s+la)\\s+(mañana|madrugada))'
    AmTimeRegex = f'(?<am>(esta|(por|de|a|en)\\s+la)\\s+(mañana|madrugada))'
    PmTimeRegex = f'(?<pm>(esta|(por|de|a|en)\\s+la)\\s+(tarde|noche))'
    LessThanOneHour = f'(?<lth>((\\s+y\\s+)?cuarto|(\\s*)menos cuarto|(\\s+y\\s+)media|{BaseDateTime.DeltaMinuteRegex}(\\s+(minuto|minutos|min|mins))|{DeltaMinuteNumRegex}(\\s+(minuto|minutos|min|mins))))'
    TensTimeRegex = f'(?<tens>diez|veint(i|e)|treinta|cuarenta|cincuenta)'
    WrittenTimeRegex = f'(?<writtentime>{HourNumRegex}\\s*((y|menos)\\s+)?({MinuteNumRegex}|({TensTimeRegex}((\\s*y\\s+)?{MinuteNumRegex})?)))'
    TimePrefix = f'(?<prefix>{LessThanOneHour}(\\s+(pasad[ao]s)\\s+(de\\s+las|las)?|\\s+(para|antes\\s+de)?\\s+(las?))?)'
    TimeSuffix = f'(?<suffix>({LessThanOneHour}\\s+)?({AmRegex}|{PmRegex}|{OclockRegex}))'
    BasicTime = f'(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})'
    AtRegex = f'\\b(?<=\\b(a las?)\\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\\b'
    ConnectNumRegex = f'({BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\\s*{DescRegex})'
    TimeRegex1 = f'(\\b{TimePrefix}\\s+)?({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\\s*({DescRegex})'
    TimeRegex2 = f'(\\b{TimePrefix}\\s+)?(t)?{BaseDateTime.HourRegex}(\\s*)?:(\\s*)?{BaseDateTime.MinuteRegex}((\\s*)?:(\\s*)?{BaseDateTime.SecondRegex})?((\\s*{DescRegex})|\\b)'
    TimeRegex3 = f'(\\b{TimePrefix}\\s+)?{BaseDateTime.HourRegex}\\.{BaseDateTime.MinuteRegex}(\\s*{DescRegex})'
    TimeRegex4 = f'\\b(({DescRegex}?)|({BasicTime}?)({DescRegex}?))({TimePrefix}\\s*)({HourNumRegex}|{BaseDateTime.HourRegex})?(\\s+{TensTimeRegex}(\\s+y\\s+)?{MinuteNumRegex}?)?({OclockRegex})?\\b'
    TimeRegex5 = f'\\b({TimePrefix}|{BasicTime}{TimePrefix})\\s+(\\s*{DescRegex})?{BasicTime}?\\s*{TimeSuffix}\\b'
    TimeRegex6 = f'({BasicTime}(\\s*{DescRegex})?\\s+{TimeSuffix}\\b)'
    TimeRegex7 = f'\\b{TimeSuffix}\\s+a\\s+las\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex8 = f'\\b{TimeSuffix}\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex9 = f'\\b(?<writtentime>{HourNumRegex}\\s+({TensTimeRegex}\\s*)?(y\\s+)?{MinuteNumRegex}?)\\b'
    TimeRegex10 = f'(a\\s+la|al)\\s+(madrugada|mañana|medio\\s*d[ií]a|tarde|noche)'
    TimeRegex11 = f'\\b({WrittenTimeRegex})({DescRegex}?)\\b'
    TimeRegex12 = f'(\\b{TimePrefix}\\s+)?{BaseDateTime.HourRegex}(\\s*h\\s*){BaseDateTime.MinuteRegex}(\\s*{DescRegex})?'
    PrepositionRegex = f'\\b(?<prep>(a(l)?|en|de(l)?)?(\\s*(la(s)?|el|los))?$)\\b'
    NowRegex = f'\\b(?<now>(justo\\s+)?ahora(\\s+mismo)?|en\\s+este\\s+momento|tan\\s+pronto\\s+como\\s+sea\\s+posible|tan\\s+pronto\\s+como\\s+(pueda|puedas|podamos|puedan)|lo\\s+m[aá]s\\s+pronto\\s+posible|recientemente|previamente)\\b'
    SuffixRegex = f'^\\s*(((y|a|en|por)\\s+la|al)\\s+)?(mañana|madrugada|medio\\s*d[ií]a|tarde|noche)\\b'
    TimeOfDayRegex = f'\\b(?<timeOfDay>mañana|madrugada|(pasado\\s+(el\\s+)?)?medio\\s?d[ií]a|tarde|noche|anoche)\\b'
    SpecificTimeOfDayRegex = f'\\b(((((a)?\\s+la|esta|siguiente|pr[oó]xim[oa]|[uú]ltim[oa])\\s+)?{TimeOfDayRegex}))\\b'
    TimeOfTodayAfterRegex = f'^\\s*(,\\s*)?(en|de(l)?\\s+)?{SpecificTimeOfDayRegex}'
    TimeOfTodayBeforeRegex = f'({SpecificTimeOfDayRegex}(\\s*,)?(\\s+(a\\s+la(s)?|para))?\\s*)'
    SimpleTimeOfTodayAfterRegex = f'({HourNumRegex}|{BaseDateTime.HourRegex})\\s*(,\\s*)?((en|de(l)?)?\\s+)?{SpecificTimeOfDayRegex}'
    SimpleTimeOfTodayBeforeRegex = f'({SpecificTimeOfDayRegex}(\\s*,)?(\\s+(a\\s+la|para))?\\s*({HourNumRegex}|{BaseDateTime.HourRegex}))'
    SpecificEndOfRegex = f'((a|e)l\\s+)?fin(alizar|al)?(\\s+(el|de(l)?)(\\s+d[ií]a)?(\\s+de)?)?\\s*$'
    UnspecificEndOfRegex = f'^[.]'
    UnspecificEndOfRangeRegex = f'^[.]'
    UnitRegex = f'(?<unit>años|año|meses|mes|semanas|semana|d[ií]as|d[ií]a|horas|hora|h|hr|hrs|hs|minutos|minuto|mins|min|segundos|segundo|segs|seg)\\b'
    ConnectorRegex = f'^(,|t|para la|para las|cerca de la|cerca de las)$'
    TimeHourNumRegex = f'(?<hour>veintiuno|veintidos|veintitres|veinticuatro|cero|uno|dos|tres|cuatro|cinco|seis|siete|ocho|nueve|diez|once|doce|trece|catorce|quince|diecis([eé])is|diecisiete|dieciocho|diecinueve|veinte)'
    PureNumFromTo = f'((desde|de)\\s+(la(s)?\\s+)?)?({BaseDateTime.HourRegex}|{TimeHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?\\s*{TillRegex}\\s*({BaseDateTime.HourRegex}|{TimeHourNumRegex})\\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?'
    PureNumBetweenAnd = f'(entre\\s+(la(s)?\\s+)?)({BaseDateTime.HourRegex}|{TimeHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?\\s*y\\s*(la(s)?\\s+)?({BaseDateTime.HourRegex}|{TimeHourNumRegex})\\s*(?<rightDesc>{PmRegex}|{AmRegex}|{DescRegex})?'
    SpecificTimeFromTo = f'^[.]'
    SpecificTimeBetweenAnd = f'^[.]'
    TimeUnitRegex = f'(?<unit>horas|hora|h|minutos|minuto|mins|min|segundos|segundo|secs|sec)\\b'
    TimeFollowedUnit = f'^\\s*{TimeUnitRegex}'
    TimeNumberCombinedWithUnit = f'\\b(?<num>\\d+(\\,\\d*)?)\\s*{TimeUnitRegex}'
    DateTimePeriodNumberCombinedWithUnit = f'\\b(?<num>\\d+(\\.\\d*)?)\\s*{TimeUnitRegex}'
    PeriodTimeOfDayWithDateRegex = f'\\b(((y|a|en|por)\\s+la|al)\\s+)?(?<timeOfDay>mañana|madrugada|(pasado\\s+(el\\s+)?)?medio\\s?d[ií]a|tarde|noche|anoche)\\b'
    RelativeTimeUnitRegex = f'({PastRegex}|{FutureRegex})\\s+{UnitRegex}'
    LessThanRegex = f'^[.]'
    MoreThanRegex = f'^[.]'
    SuffixAndRegex = f'(?<suffix>\\s*(y)\\s+((un|uno|una)\\s+)?(?<suffix_num>media|cuarto))'
    FollowedUnit = f'^\\s*{UnitRegex}'
    DurationNumberCombinedWithUnit = f'\\b(?<num>\\d+(\\,\\d*)?){UnitRegex}'
    AnUnitRegex = f'\\b(un(a)?)\\s+{UnitRegex}'
    DuringRegex = f'^[.]'
    AllRegex = f'\\b(?<all>tod[oa]?\\s+(el|la)\\s+(?<unit>año|mes|semana|d[ií]a))\\b'
    HalfRegex = f'\\b(?<half>medi[oa]\\s+(?<unit>ano|mes|semana|d[íi]a|hora))\\b'
    ConjunctionRegex = f'^[.]'
    InexactNumberRegex = f'\\b(pocos|poco|algo|varios)\\b'
    InexactNumberUnitRegex = f'\\b(pocos|poco|algo|varios)\\s+{UnitRegex}'
    HolidayRegex1 = f'\\b(?<holiday>viernes santo|mi[eé]rcoles de ceniza|martes de carnaval|d[ií]a (de|de los) presidentes?|clebraci[oó]n de mao|año nuevo chino|año nuevo|noche vieja|(festividad de )?los mayos|d[ií]a de los inocentes|navidad|noche buena|d[ií]a de acci[oó]n de gracias|acci[oó]n de gracias|yuandan|halloween|noches de brujas|pascuas)(\\s+(del?\\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\\s+año))?\\b'
    HolidayRegex2 = f'\\b(?<holiday>(d[ií]a( del?( la)?)? )?(martin luther king|todos los santos|blanco|san patricio|san valent[ií]n|san jorge|cinco de mayo|independencia|raza|trabajador))(\\s+(del?\\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\\s+año))?\\b'
    HolidayRegex3 = f'\\b(?<holiday>(d[ií]a( del?( las?)?)? )(trabajador|madres?|padres?|[aá]rbol|mujer(es)?|solteros?|niños?|marmota|san valent[ií]n|maestro))(\\s+(del?\\s+)?({YearRegex}|(?<order>(pr[oó]xim[oa]?|est[ea]|[uú]ltim[oa]?|en))\\s+año))?\\b'
    BeforeRegex = f'(antes(\\s+del?(\\s+las?)?)?)'
    AfterRegex = f'(despues(\\s*del?(\\s+las?)?)?)'
    SinceRegex = f'(desde(\\s+(las?|el))?)'
    AroundRegex = f'^[.]'
    PeriodicRegex = f'\\b(?<periodic>a\\s*diario|diariamente|mensualmente|semanalmente|quincenalmente|anualmente)\\b'
    EachExpression = f'cada|tod[oa]s\\s*(l[oa]s)?'
    EachUnitRegex = f'(?<each>({EachExpression})\\s*{UnitRegex})'
    EachPrefixRegex = f'(?<each>({EachExpression})\\s*$)'
    EachDayRegex = f'\\s*({EachExpression})\\s*d[ií]as\\s*\\b'
    BeforeEachDayRegex = f'({EachExpression})\\s*d[ií]as(\\s+a\\s+las?)?\\s*\\b'
    SetEachRegex = f'(?<each>({EachExpression})\\s*)'
    LaterEarlyPeriodRegex = f'^[.]'
    WeekWithWeekDayRangeRegex = f'^[.]'
    GeneralEndingRegex = f'^[.]'
    MiddlePauseRegex = f'^[.]'
    PrefixArticleRegex = f'^[\\.]'
    OrRegex = f'^[.]'
    YearPlusNumberRegex = f'^[.]'
    NumberAsTimeRegex = f'^[.]'
    TimeBeforeAfterRegex = f'^[.]'
    DateNumberConnectorRegex = f'^[.]'
    CenturyRegex = f'^[.]'
    DecadeRegex = f'^[.]'
    DecadeWithCenturyRegex = f'^[.]'
    RelativeDecadeRegex = f'^[.]'
    ComplexDatePeriodRegex = f'^[.]'
    YearSuffix = f'(,?\\s*({YearRegex}|{FullTextYearRegex}))'
    AgoRegex = f'\\b(antes)\\b'
    LaterRegex = f'\\b(despu[eé]s|desde ahora)\\b'
    Tomorrow = 'mañana'
    UnitMap = dict([(r'''años''', r'''Y'''),
                    (r'''año''', r'''Y'''),
                    (r'''meses''', r'''MON'''),
                    (r'''mes''', r'''MON'''),
                    (r'''semanas''', r'''W'''),
                    (r'''semana''', r'''W'''),
                    (r'''dias''', r'''D'''),
                    (r'''dia''', r'''D'''),
                    (r'''días''', r'''D'''),
                    (r'''día''', r'''D'''),
                    (r'''horas''', r'''H'''),
                    (r'''hora''', r'''H'''),
                    (r'''hrs''', r'''H'''),
                    (r'''hr''', r'''H'''),
                    (r'''h''', r'''H'''),
                    (r'''minutos''', r'''M'''),
                    (r'''minuto''', r'''M'''),
                    (r'''mins''', r'''M'''),
                    (r'''min''', r'''M'''),
                    (r'''segundos''', r'''S'''),
                    (r'''segundo''', r'''S'''),
                    (r'''segs''', r'''S'''),
                    (r'''seg''', r'''S''')])
    UnitValueMap = dict([(r'''años''', 31536000),
                         (r'''año''', 31536000),
                         (r'''meses''', 2592000),
                         (r'''mes''', 2592000),
                         (r'''semanas''', 604800),
                         (r'''semana''', 604800),
                         (r'''dias''', 86400),
                         (r'''dia''', 86400),
                         (r'''días''', 86400),
                         (r'''día''', 86400),
                         (r'''horas''', 3600),
                         (r'''hora''', 3600),
                         (r'''hrs''', 3600),
                         (r'''hr''', 3600),
                         (r'''h''', 3600),
                         (r'''minutos''', 60),
                         (r'''minuto''', 60),
                         (r'''mins''', 60),
                         (r'''min''', 60),
                         (r'''segundos''', 1),
                         (r'''segundo''', 1),
                         (r'''segs''', 1),
                         (r'''seg''', 1)])
    SeasonMap = dict([(r'''primavera''', r'''SP'''),
                      (r'''verano''', r'''SU'''),
                      (r'''otoño''', r'''FA'''),
                      (r'''invierno''', r'''WI''')])
    SeasonValueMap = dict([(r'''SP''', 3),
                           (r'''SU''', 6),
                           (r'''FA''', 9),
                           (r'''WI''', 12)])
    CardinalMap = dict([(r'''primer''', 1),
                        (r'''primero''', 1),
                        (r'''primera''', 1),
                        (r'''1er''', 1),
                        (r'''1ro''', 1),
                        (r'''1ra''', 1),
                        (r'''segundo''', 2),
                        (r'''segunda''', 2),
                        (r'''2do''', 2),
                        (r'''2da''', 2),
                        (r'''tercer''', 3),
                        (r'''tercero''', 3),
                        (r'''tercera''', 3),
                        (r'''3er''', 3),
                        (r'''3ro''', 3),
                        (r'''3ra''', 3),
                        (r'''cuarto''', 4),
                        (r'''cuarta''', 4),
                        (r'''4to''', 4),
                        (r'''4ta''', 4),
                        (r'''quinto''', 5),
                        (r'''quinta''', 5),
                        (r'''5to''', 5),
                        (r'''5ta''', 5)])
    DayOfWeek = dict([(r'''lunes''', 1),
                      (r'''martes''', 2),
                      (r'''miercoles''', 3),
                      (r'''miércoles''', 3),
                      (r'''jueves''', 4),
                      (r'''viernes''', 5),
                      (r'''sabado''', 6),
                      (r'''domingo''', 0),
                      (r'''lu''', 1),
                      (r'''ma''', 2),
                      (r'''mi''', 3),
                      (r'''ju''', 4),
                      (r'''vi''', 5),
                      (r'''sa''', 6),
                      (r'''do''', 0)])
    MonthOfYear = dict([(r'''enero''', 1),
                        (r'''febrero''', 2),
                        (r'''marzo''', 3),
                        (r'''abril''', 4),
                        (r'''mayo''', 5),
                        (r'''junio''', 6),
                        (r'''julio''', 7),
                        (r'''agosto''', 8),
                        (r'''septiembre''', 9),
                        (r'''setiembre''', 9),
                        (r'''octubre''', 10),
                        (r'''noviembre''', 11),
                        (r'''diciembre''', 12),
                        (r'''ene''', 1),
                        (r'''feb''', 2),
                        (r'''mar''', 3),
                        (r'''abr''', 4),
                        (r'''may''', 5),
                        (r'''jun''', 6),
                        (r'''jul''', 7),
                        (r'''ago''', 8),
                        (r'''sept''', 9),
                        (r'''set''', 9),
                        (r'''oct''', 10),
                        (r'''nov''', 11),
                        (r'''dic''', 12),
                        (r'''1''', 1),
                        (r'''2''', 2),
                        (r'''3''', 3),
                        (r'''4''', 4),
                        (r'''5''', 5),
                        (r'''6''', 6),
                        (r'''7''', 7),
                        (r'''8''', 8),
                        (r'''9''', 9),
                        (r'''10''', 10),
                        (r'''11''', 11),
                        (r'''12''', 12),
                        (r'''01''', 1),
                        (r'''02''', 2),
                        (r'''03''', 3),
                        (r'''04''', 4),
                        (r'''05''', 5),
                        (r'''06''', 6),
                        (r'''07''', 7),
                        (r'''08''', 8),
                        (r'''09''', 9)])
    Numbers = dict([(r'''cero''', 0),
                    (r'''un''', 1),
                    (r'''una''', 1),
                    (r'''uno''', 1),
                    (r'''dos''', 2),
                    (r'''tres''', 3),
                    (r'''cuatro''', 4),
                    (r'''cinco''', 5),
                    (r'''seis''', 6),
                    (r'''siete''', 7),
                    (r'''ocho''', 8),
                    (r'''nueve''', 9),
                    (r'''diez''', 10),
                    (r'''once''', 11),
                    (r'''doce''', 12),
                    (r'''docena''', 12),
                    (r'''docenas''', 12),
                    (r'''trece''', 13),
                    (r'''catorce''', 14),
                    (r'''quince''', 15),
                    (r'''dieciseis''', 16),
                    (r'''dieciséis''', 16),
                    (r'''diecisiete''', 17),
                    (r'''dieciocho''', 18),
                    (r'''diecinueve''', 19),
                    (r'''veinte''', 20),
                    (r'''ventiuna''', 21),
                    (r'''ventiuno''', 21),
                    (r'''veintiun''', 21),
                    (r'''veintiún''', 21),
                    (r'''veintiuno''', 21),
                    (r'''veintiuna''', 21),
                    (r'''veintidos''', 22),
                    (r'''veintidós''', 22),
                    (r'''veintitres''', 23),
                    (r'''veintitrés''', 23),
                    (r'''veinticuatro''', 24),
                    (r'''veinticinco''', 25),
                    (r'''veintiseis''', 26),
                    (r'''veintiséis''', 26),
                    (r'''veintisiete''', 27),
                    (r'''veintiocho''', 28),
                    (r'''veintinueve''', 29),
                    (r'''treinta''', 30)])
    HolidayNames = dict([(r'''padres''', ["diadelpadre"]),
                         (r'''madres''', ["diadelamadre"]),
                         (r'''acciondegracias''', ["diadegracias", "diadeacciondegracias", "acciondegracias"]),
                         (r'''trabajador''', ["diadeltrabajador"]),
                         (r'''delaraza''', ["diadelaraza", "diadeladiversidadcultural"]),
                         (r'''memoria''', ["diadelamemoria"]),
                         (r'''pascuas''', ["diadepascuas", "pascuas"]),
                         (r'''navidad''', ["navidad", "diadenavidad"]),
                         (r'''nochebuena''', ["diadenochebuena", "nochebuena"]),
                         (r'''añonuevo''', ["a\u00f1onuevo", "diadea\u00f1onuevo"]),
                         (r'''nochevieja''', ["nochevieja", "diadenochevieja"]),
                         (r'''yuandan''', ["yuandan"]),
                         (r'''maestro''', ["diadelmaestro"]),
                         (r'''todoslossantos''', ["todoslossantos"]),
                         (r'''niño''', ["diadelni\u00f1o"]),
                         (r'''mujer''', ["diadelamujer"])])
    VariableHolidaysTimexDictionary = dict([(r'''padres''', r'''-06-WXX-7-3'''),
                                            (r'''madres''', r'''-05-WXX-7-2'''),
                                            (r'''acciondegracias''', r'''-11-WXX-4-4'''),
                                            (r'''trabajador''', r'''-05-WXX-1-1'''),
                                            (r'''delaraza''', r'''-10-WXX-1-2'''),
                                            (r'''memoria''', r'''-03-WXX-2-4''')])
    DoubleNumbers = dict([(r'''mitad''', 0.5),
                          (r'''cuarto''', 0.25)])
    DateTokenPrefix = 'en '
    TimeTokenPrefix = 'a las '
    TokenBeforeDate = 'el '
    TokenBeforeTime = 'la '
    NextPrefixRegex = f'(pr[oó]xim[oa]|siguiente)\\b'
    PastPrefixRegex = f'([uú]ltim[oa])\\b'
    ThisPrefixRegex = f'(est[ea])\\b'
    RelativeDayRegex = f'^[\\.]'
    RestOfDateRegex = f'^[\\.]'
    RelativeDurationUnitRegex = f'^[\\.]'
    ReferenceDatePeriodRegex = f'^[.]'
    FromToRegex = f'\\b(from).+(to)\\b.+'
    SingleAmbiguousMonthRegex = f'^(the\\s+)?(may|march)$'
    UnspecificDatePeriodRegex = f'^[.]'
    PrepositionSuffixRegex = f'\\b(on|in|at|around|for|during|since|from|to)$'
    RestOfDateTimeRegex = f'^[\\.]'
    SetWeekDayRegex = f'^[\\.]'
    NightRegex = f'\\b(medionoche|noche)\\b'
    CommonDatePrefixRegex = f'^[\\.]'
    DurationUnitRegex = f'^[\\.]'
    DurationConnectorRegex = f'^[.]'
    YearAfterRegex = f'^[.]'
    YearPeriodRegex = f'^[.]'
    FutureSuffixRegex = f'^[.]'
    WrittenDecades = dict([(r'''''', 0)])
    SpecialDecadeCases = dict([(r'''''', 0)])
    DefaultLanguageFallback = 'DMY'
    DurationDateRestrictions = []
    EarlyMorningTermList = [r'madrugada']
    MorningTermList = [r'mañana']
    AfternoonTermList = [r'pasado mediodia', r'pasado el mediodia']
    EveningTermList = [r'tarde']
    NightTermList = [r'noche']
    SameDayTerms = [r'hoy', r'el dia']
    PlusOneDayTerms = [r'mañana', r'dia siguiente', r'el dia de mañana', r'proximo dia']
    MinusOneDayTerms = [r'ayer', r'ultimo dia']
    PlusTwoDayTerms = [r'pasado mañana', r'dia despues de mañana']
    MinusTwoDayTerms = [r'anteayer', r'dia antes de ayer']
    MonthTerms = [r'mes', r'meses']
    MonthToDateTerms = [r'mes a la fecha', r'meses a la fecha']
    WeekendTerms = [r'fin de semana']
    WeekTerms = [r'semana']
    YearTerms = [r'año', r'años']
    YearToDateTerms = [r'año a la fecha', r'años a la fecha']
# pylint: enable=line-too-long
