# ------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
# ------------------------------------------------------------------------------

from .base_date_time import BaseDateTime
# pylint: disable=line-too-long
class EnglishDateTime:
    TillRegex = f'(?<till>\\b(to|till|til|until|thru|through)\\b|{BaseDateTime.RangeConnectorSymbolRegex})'
    RangeConnectorRegex = f'(?<and>\\b(and|through|to)\\b|{BaseDateTime.RangeConnectorSymbolRegex})'
    RelativeRegex = f'\\b(?<order>following|next|coming|upcoming|this|last|past|previous|current|the)\\b'
    StrictRelativeRegex = f'\\b(?<order>following|next|coming|upcoming|this|last|past|previous|current)\\b'
    NextPrefixRegex = f'\\b(following|next|upcoming|coming)\\b'
    AfterNextSuffixRegex = f'\\b(after\\s+(the\\s+)?next)\\b'
    PastPrefixRegex = f'(last|past|previous)\\b'
    ThisPrefixRegex = f'(this|current)\\b'
    RangePrefixRegex = f'(from|between)'
    CenturySuffixRegex = f'(^century)\\b'
    ReferencePrefixRegex = f'(that|same)\\b'
    FutureSuffixRegex = f'\\b(in\\s+the\\s+)?(future|hence)\\b'
    DayRegex = f'(the\\s*)?(?<day>01|02|03|04|05|06|07|08|09|10th|10|11th|11st|11|12nd|12th|12|13rd|13th|13|14th|14|15th|15|16th|16|17th|17|18th|18|19th|19|1st|1|20th|20|21st|21th|21|22nd|22th|22|23rd|23th|23|24th|24|25th|25|26th|26|27th|27|28th|28|29th|29|2nd|2|30th|30|31st|31|3rd|3|4th|4|5th|5|6th|6|7th|7|8th|8|9th|9)(?=\\b|t)'
    ImplicitDayRegex = f'(the\\s*)?(?<day>10th|11th|11st|12nd|12th|13rd|13th|14th|15th|16th|17th|18th|19th|1st|20th|21st|21th|22nd|22th|23rd|23th|24th|25th|26th|27th|28th|29th|2nd|30th|31st|3rd|4th|5th|6th|7th|8th|9th)\\b'
    MonthNumRegex = f'(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\\b'
    WrittenOneToNineRegex = f'(one|two|three|four|five|six|seven|eight|nine)'
    WrittenElevenToNineteenRegex = f'(eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen)'
    WrittenTensRegex = f'(ten|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety)'
    WrittenNumRegex = f'({WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}(\\s+{WrittenOneToNineRegex})?)'
    WrittenCenturyFullYearRegex = f'((one|two)\\s+thousand(\\s+and)?(\\s+{WrittenOneToNineRegex}\\s+hundred(\\s+and)?)?)'
    WrittenCenturyOrdinalYearRegex = f'(twenty one|twenty two|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)'
    CenturyRegex = f'\\b(?<century>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}(\\s+hundred)?(\\s+and)?)\\b'
    LastTwoYearNumRegex = f'(zero\\s+{WrittenOneToNineRegex}|{WrittenElevenToNineteenRegex}|{WrittenTensRegex}(\\s+{WrittenOneToNineRegex})?)'
    FullTextYearRegex = f'\\b((?<firsttwoyearnum>{CenturyRegex})\\s+(?<lasttwoyearnum>{LastTwoYearNumRegex})\\b|\\b(?<firsttwoyearnum>{WrittenCenturyFullYearRegex}|{WrittenCenturyOrdinalYearRegex}\\s+hundred(\\s+and)?))\\b'
    OclockRegex = f'(?<oclock>o\\s*’\\s*clock|o\\s*‘\\s*clock|o\\s*\'\\s*clock|o\\s*clock)'
    SpecialDescRegex = f'(p\\b)'
    AmDescRegex = f'({BaseDateTime.BaseAmDescRegex})'
    PmDescRegex = f'({BaseDateTime.BasePmDescRegex})'
    AmPmDescRegex = f'({BaseDateTime.BaseAmPmDescRegex})'
    DescRegex = f'((({OclockRegex}\\s+)?(?<desc>({AmPmDescRegex}|{AmDescRegex}|{PmDescRegex}|{SpecialDescRegex})))|{OclockRegex})'
    TwoDigitYearRegex = f'\\b(?<![$])(?<year>([0-27-9]\\d))(?!(\\s*((\\:)|{AmDescRegex}|{PmDescRegex}|\\.\\d)))\\b'
    YearRegex = f'({BaseDateTime.FourDigitYearRegex}|{FullTextYearRegex})'
    WeekDayRegex = f'\\b(?<weekday>sunday|monday|tuesday|wednesday|thursday|friday|saturday|mon|tues|tue|wedn|weds|wed|thurs|thur|thu|fri|sat|sun)s?\\b'
    SingleWeekDayRegex = f'\\b(?<weekday>sunday|monday|tuesday|wednesday|thursday|friday|saturday|mon|tue|tues|wedn|weds|wed|thurs|thur|thu|fri|((?<=on\\s+)(sat|sun)))\\b'
    RelativeMonthRegex = f'(?<relmonth>(of\\s+)?{RelativeRegex}\\s+month)\\b'
    WrittenMonthRegex = f'(((the\\s+)?month of\\s+)?(?<month>april|apr|august|aug|december|dec|february|feb|january|jan|july|jul|june|jun|march|mar|may|november|nov|october|oct|september|sept|sep))'
    MonthSuffixRegex = f'(?<msuf>((in|of|on)\\s+)?({RelativeMonthRegex}|{WrittenMonthRegex}))'
    DateUnitRegex = f'(?<unit>decades?|years?|months?|weeks?|(?<business>business\\s+)?days?)\\b'
    DateTokenPrefix = 'on '
    TimeTokenPrefix = 'at '
    TokenBeforeDate = 'on '
    TokenBeforeTime = 'at '
    SimpleCasesRegex = f'\\b({RangePrefixRegex}\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex}\\s+{MonthSuffixRegex}|{MonthSuffixRegex}\\s+{DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontSimpleCasesRegex = f'\\b({RangePrefixRegex}\\s+)?{MonthSuffixRegex}\\s+((from)\\s+)?({DayRegex})\\s*{TillRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthFrontBetweenRegex = f'\\b{MonthSuffixRegex}\\s+(between\\s+)({DayRegex})\\s*{RangeConnectorRegex}\\s*({DayRegex})((\\s+|\\s*,\\s*){YearRegex})?\\b'
    BetweenRegex = f'\\b(between\\s+)({DayRegex})\\s*{RangeConnectorRegex}\\s*({DayRegex})\\s+{MonthSuffixRegex}((\\s+|\\s*,\\s*){YearRegex})?\\b'
    MonthWithYear = f'\\b(({WrittenMonthRegex}(\\.)?(\\s*)[/\\\\\\-\\.,]?(\\s+of)?(\\s*)({YearRegex}|(?<order>following|next|last|this)\\s+year))|(({YearRegex}|(?<order>following|next|last|this)\\s+year)(\\s*),?(\\s*){WrittenMonthRegex}))\\b'
    OneWordPeriodRegex = f'\\b((((the\\s+)?month of\\s+)?({StrictRelativeRegex}\\s+)?(?<month>april|apr|august|aug|december|dec|february|feb|january|jan|july|jul|june|jun|march|mar|may|november|nov|october|oct|september|sept|sep))|(month|year) to date|({RelativeRegex}\\s+)?(my\\s+)?(weekend|week|month|year)(?!((\\s+of)?\\s+\\d+|\\s+to\\s+date))(\\s+{AfterNextSuffixRegex})?)\\b'
    MonthNumWithYear = f'\\b(({BaseDateTime.FourDigitYearRegex}(\\s*)[/\\-\\.](\\s*){MonthNumRegex})|({MonthNumRegex}(\\s*)[/\\-](\\s*){BaseDateTime.FourDigitYearRegex}))\\b'
    WeekOfMonthRegex = f'\\b(?<wom>(the\\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th|fifth|5th|last)\\s+week\\s+{MonthSuffixRegex}(\\s+{BaseDateTime.FourDigitYearRegex}|{RelativeRegex}\\s+year)?)\\b'
    WeekOfYearRegex = f'\\b(?<woy>(the\\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th|fifth|5th|last)\\s+week(\\s+of)?\\s+({YearRegex}|{RelativeRegex}\\s+year))\\b'
    FollowedDateUnit = f'^\\s*{DateUnitRegex}'
    NumberCombinedWithDateUnit = f'\\b(?<num>\\d+(\\.\\d*)?){DateUnitRegex}'
    QuarterTermRegex = f'\\b(((?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th)[ -]+quarter)|(q(?<number>[1-4])))\\b'
    QuarterRegex = f'(the\\s+)?{QuarterTermRegex}((\\s+of|\\s*,\\s*)?\\s+({YearRegex}|{RelativeRegex}\\s+year))?'
    QuarterRegexYearFront = f'({YearRegex}|{RelativeRegex}\\s+year)(\'s)?\\s+(the\\s+)?{QuarterTermRegex}'
    HalfYearTermRegex = f'(?<cardinal>first|1st|second|2nd)\\s+half'
    HalfYearFrontRegex = f'(?<year>((1[5-9]|20)\\d{{2}})|2100)\\s*(the\\s+)?h(?<number>[1-2])'
    HalfYearBackRegex = f'(the\\s+)?(h(?<number>[1-2])|({HalfYearTermRegex}))(\\s+of|\\s*,\\s*)?\\s+({YearRegex})'
    HalfYearRelativeRegex = f'(the\\s+)?{HalfYearTermRegex}(\\s+of|\\s*,\\s*)?\\s+({RelativeRegex}\\s+year)'
    AllHalfYearRegex = f'({HalfYearFrontRegex})|({HalfYearBackRegex})|({HalfYearRelativeRegex})'
    EarlyPrefixRegex = f'\\b(?<EarlyPrefix>early|beginning of|start of|(?<RelEarly>earlier(\\s+in)?))\\b'
    MidPrefixRegex = f'\\b(?<MidPrefix>mid-?|middle of)\\b'
    LaterPrefixRegex = f'\\b(?<LatePrefix>late|end of|(?<RelLate>later(\\s+in)?))\\b'
    PrefixPeriodRegex = f'({EarlyPrefixRegex}|{MidPrefixRegex}|{LaterPrefixRegex})'
    PrefixDayRegex = f'\\b((?<EarlyPrefix>early)|(?<MidPrefix>mid|middle)|(?<LatePrefix>late|later))(\\s+in)?(\\s+the\\s+day)?$'
    SeasonDescRegex = f'(?<seas>spring|summer|fall|autumn|winter)'
    SeasonRegex = f'\\b(?<season>({PrefixPeriodRegex}\\s+)?({RelativeRegex}\\s+)?{SeasonDescRegex}((\\s+of|\\s*,\\s*)?\\s+({YearRegex}|{RelativeRegex}\\s+year))?)\\b'
    WhichWeekRegex = f'(week)(\\s*)(?<number>\\d\\d|\\d|0\\d)'
    WeekOfRegex = f'(the\\s+)?(week)(\\s+of)(\\s+the)?'
    MonthOfRegex = f'(month)(\\s*)(of)'
    MonthRegex = f'(?<month>april|apr|august|aug|december|dec|february|feb|january|jan|july|jul|june|jun|march|mar|may|november|nov|october|oct|september|sept|sep)'
    AmbiguousMonthP0Regex = f'\\b((^may i)|(i|you|he|she|we|they)\\s+may|(may\\s+((((also|not|(also not)|well)\\s+)?(be|ask|contain|constitute|email|e-mail|take|have|result|involve|get|work|reply))|(or may not))))\\b'
    DateYearRegex = f'(?<year>{BaseDateTime.FourDigitYearRegex}|{TwoDigitYearRegex})'
    YearSuffix = f'(,?\\s*({DateYearRegex}|{FullTextYearRegex}))'
    OnRegex = f'(?<=\\bon\\s+)({DayRegex}s?)\\b'
    RelaxedOnRegex = f'(?<=\\b(on|at|in)\\s+)((?<day>10th|11th|11st|12nd|12th|13rd|13th|14th|15th|16th|17th|18th|19th|1st|20th|21st|21th|22nd|22th|23rd|23th|24th|25th|26th|27th|28th|29th|2nd|30th|31st|3rd|4th|5th|6th|7th|8th|9th)s?)\\b'
    PrefixWeekDayRegex = f'(\\s*((,?\\s*on)|[-—–]))'
    ThisRegex = f'\\b(this(\\s*week{PrefixWeekDayRegex}?)?\\s*{WeekDayRegex})|({WeekDayRegex}((\\s+of)?\\s+this\\s*week))\\b'
    LastDateRegex = f'\\b({PastPrefixRegex}(\\s*week{PrefixWeekDayRegex}?)?\\s*{WeekDayRegex})|({WeekDayRegex}(\\s+last\\s*week))\\b'
    NextDateRegex = f'\\b({NextPrefixRegex}(\\s*week{PrefixWeekDayRegex}?)?\\s*{WeekDayRegex})|((on\\s+)?{WeekDayRegex}((\\s+of)?\\s+(the\\s+following|(the\\s+)?next)\\s*week))\\b'
    SpecialDayRegex = f'\\b((the\\s+)?day before yesterday|(the\\s+)?day after (tomorrow|tmr)|the\\s+day\\s+(before|after)(?!=\\s+day)|((the\\s+)?({RelativeRegex}|my)\\s+day)|yesterday|tomorrow|tmr|today)\\b'
    SpecialDayWithNumRegex = f'\\b((?<number>{WrittenNumRegex})\\s+days?\\s+from\\s+(?<day>yesterday|tomorrow|tmr|today))\\b'
    RelativeDayRegex = f'\\b(((the\\s+)?{RelativeRegex}\\s+day))\\b'
    SetWeekDayRegex = f'\\b(?<prefix>on\\s+)?(?<weekday>morning|afternoon|evening|night|sunday|monday|tuesday|wednesday|thursday|friday|saturday)s\\b'
    WeekDayOfMonthRegex = f'(?<wom>(the\\s+)?(?<cardinal>first|1st|second|2nd|third|3rd|fourth|4th|fifth|5th|last)\\s+{WeekDayRegex}\\s+{MonthSuffixRegex})'
    RelativeWeekDayRegex = f'\\b({WrittenNumRegex}\\s+{WeekDayRegex}\\s+(from\\s+now|later))\\b'
    SpecialDate = f'(?=\\b(on|at)\\s+the\\s+){DayRegex}\\b'
    DatePreposition = f'\\b(on|in)'
    DateExtractor1 = f'\\b((this\\s+)?{WeekDayRegex}\\s*[,-]?\\s*)?(({MonthRegex}(\\.)?\\s*[/\\\\.,-]?\\s*{DayRegex})|(\\({MonthRegex}\\s*[-.]\\s*{DayRegex}\\)))(\\s*\\(\\s*{WeekDayRegex}\\s*\\))?'
    DateExtractor2 = f'\\b{DateExtractor1}(\\s+|\\s*,\\s*|\\s+of\\s+){DateYearRegex}\\b'
    DateExtractor3 = f'\\b({WeekDayRegex}(\\s+|\\s*,\\s*))?{DayRegex}(\\.)?(\\s+|\\s*,\\s*|\\s+of\\s+|\\s*-\\s*){MonthRegex}(\\.)?((\\s+|\\s*,\\s*){DateYearRegex})?\\b'
    DateExtractor4 = f'\\b{MonthNumRegex}\\s*[/\\\\\\-]\\s*{DayRegex}(\\.)?\\s*[/\\\\\\-]\\s*{DateYearRegex}'
    DateExtractor5 = f'\\b{DayRegex}\\s*[/\\\\\\-\\.]\\s*({MonthNumRegex}|{MonthRegex})\\s*[/\\\\\\-\\.]\\s*{DateYearRegex}'
    DateExtractor6 = f'(?<={DatePreposition}\\s+)({WeekDayRegex}\\s+)?{MonthNumRegex}[\\-\\.]{DayRegex}(?![%])\\b'
    DateExtractor7L = f'\\b({WeekDayRegex}\\s+)?{MonthNumRegex}\\s*/\\s*{DayRegex}((\\s+|\\s*,\\s*|\\s+of\\s+){DateYearRegex})(?![%])\\b'
    DateExtractor7S = f'\\b({WeekDayRegex}\\s+)?{MonthNumRegex}\\s*/\\s*{DayRegex}(?![%])\\b'
    DateExtractor8 = f'(?<={DatePreposition}\\s+)({WeekDayRegex}\\s+)?{DayRegex}[\\\\\\-]{MonthNumRegex}(?![%])\\b'
    DateExtractor9L = f'\\b({WeekDayRegex}\\s+)?{DayRegex}\\s*/\\s*{MonthNumRegex}((\\s+|\\s*,\\s*|\\s+of\\s+){DateYearRegex})(?![%])\\b'
    DateExtractor9S = f'\\b({WeekDayRegex}\\s+)?{DayRegex}\\s*/\\s*{MonthNumRegex}(?![%])\\b'
    DateExtractorA = f'\\b({WeekDayRegex}\\s+)?{BaseDateTime.FourDigitYearRegex}\\s*[/\\\\\\-\\.]\\s*{MonthNumRegex}\\s*[/\\\\\\-\\.]\\s*{DayRegex}'
    OfMonth = f'^\\s*of\\s*{MonthRegex}'
    MonthEnd = f'{MonthRegex}\\s*(the)?\\s*$'
    WeekDayEnd = f'(this\\s+)?{WeekDayRegex}\\s*,?\\s*$'
    RangeUnitRegex = f'\\b(?<unit>years|year|months|month|weeks|week)\\b'
    HourNumRegex = f'\\b(?<hournum>zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)\\b'
    MinuteNumRegex = f'(?<minnum>one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|forty|fifty)'
    DeltaMinuteNumRegex = f'(?<deltaminnum>one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty|thirty|forty|fifty)'
    PmRegex = f'(?<pm>(((at|in|around|on|for)\\s+(the\\s+)?)?(afternoon|evening|midnight|lunchtime))|((at|in|around|on|for)\\s+(the\\s+)?night))'
    PmRegexFull = f'(?<pm>((at|in|around|on|for)\\s+(the\\s+)?)?(afternoon|evening|midnight|night|lunchtime))'
    AmRegex = f'(?<am>((at|in|around|on|for)\\s+(the\\s+)?)?(morning))'
    LunchRegex = f'\\b(lunchtime)\\b'
    NightRegex = f'\\b(midnight|night)\\b'
    CommonDatePrefixRegex = f'^[\\.]'
    LessThanOneHour = f'(?<lth>(a\\s+)?quarter|three quarter(s)?|half( an hour)?|{BaseDateTime.DeltaMinuteRegex}(\\s+(minute|minutes|min|mins))|{DeltaMinuteNumRegex}(\\s+(minute|minutes|min|mins)))'
    WrittenTimeRegex = f'(?<writtentime>{HourNumRegex}\\s+({MinuteNumRegex}|(?<tens>twenty|thirty|forty|fourty|fifty)\\s+{MinuteNumRegex}))'
    TimePrefix = f'(?<prefix>({LessThanOneHour} past|{LessThanOneHour} to))'
    TimeSuffix = f'(?<suffix>{AmRegex}|{PmRegex}|{OclockRegex})'
    TimeSuffixFull = f'(?<suffix>{AmRegex}|{PmRegexFull}|{OclockRegex})'
    BasicTime = f'\\b(?<basictime>{WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}:{BaseDateTime.MinuteRegex}(:{BaseDateTime.SecondRegex})?|{BaseDateTime.HourRegex})'
    MidnightRegex = f'(?<midnight>midnight|mid-night|mid night)'
    MidmorningRegex = f'(?<midmorning>midmorning|mid-morning|mid morning)'
    MidafternoonRegex = f'(?<midafternoon>midafternoon|mid-afternoon|mid afternoon)'
    MiddayRegex = f'(?<midday>midday|mid-day|mid day|((12\\s)?noon))'
    MidTimeRegex = f'(?<mid>({MidnightRegex}|{MidmorningRegex}|{MidafternoonRegex}|{MiddayRegex}))'
    AtRegex = f'\\b(((?<=\\bat\\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}(?!\\.\\d)(\\s*((?<iam>a)|(?<ipm>p)))?|{MidTimeRegex}))|{MidTimeRegex})\\b'
    IshRegex = f'\\b({BaseDateTime.HourRegex}(-|——)?ish|noonish|noon)\\b'
    TimeUnitRegex = f'([^A-Za-z]{{1,}}|\\b)(?<unit>hours|hour|hrs|hr|h|minutes|minute|mins|min|seconds|second|secs|sec)\\b'
    RestrictedTimeUnitRegex = f'(?<unit>hour|minute)\\b'
    FivesRegex = f'(?<tens>(fifteen|twenty(\\s*five)?|thirty(\\s*five)?|forty(\\s*five)?|fourty(\\s*five)?|fifty(\\s*five)?|ten|five))\\b'
    HourRegex = f'\\b{BaseDateTime.HourRegex}'
    PeriodHourNumRegex = f'\\b(?<hour>twenty one|twenty two|twenty three|twenty four|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|twenty)\\b'
    ConnectNumRegex = f'\\b{BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\\s*{DescRegex}'
    TimeRegexWithDotConnector = f'({BaseDateTime.HourRegex}(\\s*\\.\\s*){BaseDateTime.MinuteRegex})'
    TimeRegex1 = f'\\b({TimePrefix}\\s+)?({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex})\\s*{DescRegex}'
    TimeRegex2 = f'(\\b{TimePrefix}\\s+)?(t)?{BaseDateTime.HourRegex}(\\s*)?:(\\s*)?{BaseDateTime.MinuteRegex}((\\s*)?:(\\s*)?{BaseDateTime.SecondRegex})?((\\s*{DescRegex})|\\b)'
    TimeRegex3 = f'(\\b{TimePrefix}\\s+)?{BaseDateTime.HourRegex}\\.{BaseDateTime.MinuteRegex}(\\s*{DescRegex})'
    TimeRegex4 = f'\\b{TimePrefix}\\s+{BasicTime}(\\s*{DescRegex})?\\s+{TimeSuffix}\\b'
    TimeRegex5 = f'\\b{TimePrefix}\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex6 = f'{BasicTime}(\\s*{DescRegex})?\\s+{TimeSuffix}\\b'
    TimeRegex7 = f'\\b{TimeSuffixFull}\\s+at\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex8 = f'\\b{TimeSuffixFull}\\s+{BasicTime}((\\s*{DescRegex})|\\b)'
    TimeRegex9 = f'\\b{PeriodHourNumRegex}\\s+{FivesRegex}((\\s*{DescRegex})|\\b)'
    TimeRegex10 = f'\\b({TimePrefix}\\s+)?{BaseDateTime.HourRegex}(\\s*h\\s*){BaseDateTime.MinuteRegex}(\\s*{DescRegex})?'
    TimeRegex11 = f'\\b(({TimeTokenPrefix}{TimeRegexWithDotConnector})(?!\\s*per\\s*cent|%)|({TimeRegexWithDotConnector}(\\s*{DescRegex})))'
    FirstTimeRegexInTimeRange = f'\\b{TimeRegexWithDotConnector}(\\s*{DescRegex})?'
    PureNumFromTo = f'({RangePrefixRegex}\\s+)?({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?\\s*{TillRegex}\\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\\s*({PmRegex}|{AmRegex}|{DescRegex}))?'
    PureNumBetweenAnd = f'(between\\s+)({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?\\s*{RangeConnectorRegex}\\s*({HourRegex}|{PeriodHourNumRegex})(?<rightDesc>\\s*({PmRegex}|{AmRegex}|{DescRegex}))?'
    SpecificTimeFromTo = f'({RangePrefixRegex}\\s+)?(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?))\\s*{TillRegex}\\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\\s*(?<rightDesc>{DescRegex}))?))'
    SpecificTimeBetweenAnd = f'(between\\s+)(?<time1>(({TimeRegex2}|{FirstTimeRegexInTimeRange})|({HourRegex}|{PeriodHourNumRegex})(\\s*(?<leftDesc>{DescRegex}))?))\\s*{RangeConnectorRegex}\\s*(?<time2>(({TimeRegex2}|{TimeRegexWithDotConnector}(?<rightDesc>\\s*{DescRegex}))|({HourRegex}|{PeriodHourNumRegex})(\\s*(?<rightDesc>{DescRegex}))?))'
    PrepositionRegex = f'(?<prep>^(at|on|of)(\\s+the)?$)'
    TimeOfDayRegex = f'\\b(?<timeOfDay>((((in\\s+(the)?\\s+)?((?<early>early(\\s+|-))|(?<late>late(\\s+|-)))?(morning|afternoon|night|evening)))|(((in\\s+(the)?\\s+)?)(daytime|business\\s+hour)))s?)\\b'
    SpecificTimeOfDayRegex = f'\\b(({StrictRelativeRegex}\\s+{TimeOfDayRegex})\\b|\\btonight)s?\\b'
    TimeFollowedUnit = f'^\\s*{TimeUnitRegex}'
    TimeNumberCombinedWithUnit = f'\\b(?<num>\\d+(\\.\\d*)?){TimeUnitRegex}'
    BusinessHourSplitStrings = [r'business', r'hour']
    NowRegex = f'\\b(?<now>(right\\s+)?now|as soon as possible|asap|recently|previously)\\b'
    SuffixRegex = f'^\\s*(in the\\s+)?(morning|afternoon|evening|night)\\b'
    DateTimeTimeOfDayRegex = f'\\b(?<timeOfDay>morning|afternoon|night|evening)\\b'
    DateTimeSpecificTimeOfDayRegex = f'\\b(({RelativeRegex}\\s+{DateTimeTimeOfDayRegex})\\b|\\btonight)\\b'
    TimeOfTodayAfterRegex = f'^\\s*(,\\s*)?(in\\s+)?{DateTimeSpecificTimeOfDayRegex}'
    TimeOfTodayBeforeRegex = f'{DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+(at|around|in|on))?\\s*$'
    SimpleTimeOfTodayAfterRegex = f'({HourNumRegex}|{BaseDateTime.HourRegex})\\s*(,\\s*)?(in\\s+)?{DateTimeSpecificTimeOfDayRegex}'
    SimpleTimeOfTodayBeforeRegex = f'\\b{DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+(at|around))?\\s*({HourNumRegex}|{BaseDateTime.HourRegex})\\b'
    SpecificEndOfRegex = f'(the\\s+)?end of(\\s+the)?\\s*$'
    UnspecificEndOfRegex = f'\\b(the\\s+)?(eod|(end\\s+of\\s+day))\\b'
    UnspecificEndOfRangeRegex = f'\\b(eoy)\\b'
    PeriodTimeOfDayRegex = f'\\b((in\\s+(the)?\\s+)?((?<early>early(\\s+|-))|(?<late>late(\\s+|-)))?(?<timeOfDay>morning|afternoon|night|evening))\\b'
    PeriodSpecificTimeOfDayRegex = f'\\b(({StrictRelativeRegex}\\s+{PeriodTimeOfDayRegex})\\b|\\btonight)\\b'
    PeriodTimeOfDayWithDateRegex = f'\\b(({TimeOfDayRegex}(\\s+(on|of))?))\\b'
    LessThanRegex = f'\\b(less\\s+than)\\b'
    MoreThanRegex = f'\\b(more\\s+than)\\b'
    DurationUnitRegex = f'(?<unit>{DateUnitRegex}|hours?|hrs?|h|minutes?|mins?|seconds?|secs?)\\b'
    SuffixAndRegex = f'(?<suffix>\\s*(and)\\s+((an|a)\\s+)?(?<suffix_num>half|quarter))'
    PeriodicRegex = f'\\b(?<periodic>daily|monthly|weekly|biweekly|yearly|annually|annual)\\b'
    EachUnitRegex = f'(?<each>(each|every)(?<other>\\s+other)?\\s*{DurationUnitRegex})'
    EachPrefixRegex = f'\\b(?<each>(each|(every))\\s*$)'
    SetEachRegex = f'\\b(?<each>(each|(every))\\s*)'
    SetLastRegex = f'(?<last>following|next|upcoming|this|last|past|previous|current)'
    EachDayRegex = f'^\\s*(each|every)\\s*day\\b'
    DurationFollowedUnit = f'(^\\s*{DurationUnitRegex}\\s+{SuffixAndRegex})|(^\\s*{SuffixAndRegex}?(\\s+|-)?{DurationUnitRegex})'
    NumberCombinedWithDurationUnit = f'\\b(?<num>\\d+(\\.\\d*)?)(-)?{DurationUnitRegex}'
    AnUnitRegex = f'\\b((?<half>half\\s+)?(an|a)|another)\\s+{DurationUnitRegex}'
    DuringRegex = f'\\b(for|during)\\s+the\\s+(?<unit>year|month|week|day)\\b'
    AllRegex = f'\\b(?<all>(all|full|whole)(\\s+|-)(?<unit>year|month|week|day))\\b'
    HalfRegex = f'(((a|an)\\s*)|\\b)(?<half>half\\s+(?<unit>year|month|week|day|hour))\\b'
    ConjunctionRegex = f'\\b((and(\\s+for)?)|with)\\b'
    HolidayRegex1 = f'\\b(?<holiday>clean monday|good friday|ash wednesday|mardi gras|washington\'s birthday|mao\'s birthday|chinese new year|new years\' eve|new year\'s eve|new year \'s eve|new years eve|new year eve|new years\'|new year\'s|new year \'s|new years|new year|may\\s*day|yuan dan|april fools|christmas eve|christmas|xmas|thanksgiving|halloween|yuandan|easter)(\\s+(of\\s+)?({YearRegex}|{RelativeRegex}\\s+year))?\\b'
    HolidayRegex2 = f'\\b(?<holiday>all saint\'s|tree planting day|white lover|st patrick|st george|cinco de mayo|us independence|all hallow|all souls|guy fawkes)(\\s+(of\\s+)?({YearRegex}|{RelativeRegex}\\s+year))?\\b'
    HolidayRegex3 = f'(?<holiday>(independence|mlk|martin luther king|martin luther king jr|canberra|easter|columbus|thanks\\s*giving|christmas|xmas|labour|(international|int\'l)\\s+workers\'?|mother\'s|mother|mothers|father\'s|father|fathers|female|single|teacher\'s|youth|children|arbor|girls|chsmilbuild|lover|labor|inauguration|groundhog|valentine\'s|baptiste|bastille|halloween|veterans|memorial|mid[ \\-]autumn|moon|spring|lantern|qingming|dragon boat|new years\'|new year\'s|new year \'s|new years|new year)\\s+(day))(\\s+(of\\s+)?({YearRegex}|{RelativeRegex}\\s+year))?'
    AMTimeRegex = f'(?<am>morning)'
    PMTimeRegex = f'\\b(?<pm>afternoon|evening|night)\\b'
    InclusiveModPrepositions = f'(?<include>((on|in|at)\\s+or\\s+)|(\\s+or\\s+(on|in|at)))'
    BeforeRegex = f'(\\b{InclusiveModPrepositions}?(before|in\\s+advance\\s+of|prior\\s+to|(no\\s+later|earlier|sooner)\\s+than|ending\\s+(with|on)|by|till|til|until|(?<include>as\\s+late\\s+as)){InclusiveModPrepositions}?\\b\\s*)|(?<!\\w|>)((?<include><=)|<)'
    AfterRegex = f'(\\b{InclusiveModPrepositions}?((after|(?<!no\\s+)later than)|(year greater than))(?!\\s+or equal to){InclusiveModPrepositions}?\\b\\s*)|(?<!\\w|<)((?<include>>=)|>)'
    SinceRegex = f'(\\b(since|after\\s+or\\s+equal\\s+to|starting\\s+(from|on|with)|as\\s+early\\s+as|any\\s+time\\s+from)\\b\\s*)|(?<!\\w|<)(>=)'
    AroundRegex = f'(\\b(around|circa)\\s*\\b)'
    AgoRegex = f'\\b(ago|before\\s+(?<day>yesterday|today))\\b'
    LaterRegex = f'\\b(later|from now|(from|after) (?<day>tomorrow|tmr|today))\\b'
    InConnectorRegex = f'\\b(in)\\b'
    WithinNextPrefixRegex = f'\\b(within(\\s+the)?(\\s+(?<next>{NextPrefixRegex}))?)\\b'
    MorningStartEndRegex = f'(^(morning|{AmDescRegex}))|((morning|{AmDescRegex})$)'
    AfternoonStartEndRegex = f'(^(afternoon|{PmDescRegex}))|((afternoon|{PmDescRegex})$)'
    EveningStartEndRegex = f'(^(evening))|((evening)$)'
    NightStartEndRegex = f'(^(overnight|tonight|night))|((overnight|tonight|night)$)'
    InexactNumberRegex = f'\\b(a few|few|some|several|(?<NumTwoTerm>(a\\s+)?couple(\\s+of)?))\\b'
    InexactNumberUnitRegex = f'({InexactNumberRegex})\\s+({DurationUnitRegex})'
    RelativeTimeUnitRegex = f'((({NextPrefixRegex}|{PastPrefixRegex}|{ThisPrefixRegex})\\s+({TimeUnitRegex}))|((the|my))\\s+({RestrictedTimeUnitRegex}))'
    RelativeDurationUnitRegex = f'(((?<=({NextPrefixRegex}|{PastPrefixRegex}|{ThisPrefixRegex})\\s+)({DurationUnitRegex}))|((the|my))\\s+({RestrictedTimeUnitRegex}))'
    ReferenceDatePeriodRegex = f'\\b{ReferencePrefixRegex}\\s+(?<duration>week|month|year|decade|weekend)\\b'
    ConnectorRegex = f'^(-|,|for|t|around|@)$'
    FromToRegex = f'\\b(from).+(to)\\b.+'
    SingleAmbiguousMonthRegex = f'^(the\\s+)?(may|march)$'
    SingleAmbiguousTermsRegex = f'^(the\\s+)?(day|week|month|year)$'
    UnspecificDatePeriodRegex = f'^(week|weekend|month|year)$'
    PrepositionSuffixRegex = f'\\b(on|in|at|around|from|to)$'
    FlexibleDayRegex = f'(?<DayOfMonth>([A-Za-z]+\\s)?[A-Za-z\\d]+)'
    ForTheRegex = f'\\b((((?<=for\\s+)the\\s+{FlexibleDayRegex})|((?<=on\\s+)(the\\s+)?{FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\\s*(,|\\.|!|\\?|$)))'
    WeekDayAndDayOfMonthRegex = f'\\b{WeekDayRegex}\\s+(the\\s+{FlexibleDayRegex})\\b'
    RestOfDateRegex = f'\\brest\\s+(of\\s+)?((the|my|this|current)\\s+)?(?<duration>week|month|year|decade)\\b'
    RestOfDateTimeRegex = f'\\brest\\s+(of\\s+)?((the|my|this|current)\\s+)?(?<unit>day)\\b'
    MealTimeRegex = f'\\b(at\\s+)?(?<mealTime>lunchtime)\\b'
    NumberEndingPattern = f'^(\\s+(?<meeting>meeting|appointment|conference|call|skype call)\\s+to\\s+(?<newTime>{PeriodHourNumRegex}|{HourRegex})((\\.)?$|(\\.,|,|!|\\?)))'
    OneOnOneRegex = f'\\b(1\\s*:\\s*1)|(one (on )?one|one\\s*-\\s*one|one\\s*:\\s*one)\\b'
    LaterEarlyPeriodRegex = f'\\b(({PrefixPeriodRegex})\\s*\\b\\s*(?<suffix>{OneWordPeriodRegex})|({UnspecificEndOfRangeRegex}))\\b'
    WeekWithWeekDayRangeRegex = f'\\b((?<week>({NextPrefixRegex}|{PastPrefixRegex}|this)\\s+week)((\\s+between\\s+{WeekDayRegex}\\s+and\\s+{WeekDayRegex})|(\\s+from\\s+{WeekDayRegex}\\s+to\\s+{WeekDayRegex})))\\b'
    GeneralEndingRegex = f'^\\s*((\\.,)|\\.|,|!|\\?)?\\s*$'
    MiddlePauseRegex = f'\\s*(,)\\s*'
    DurationConnectorRegex = f'^\\s*(?<connector>\\s+|and|,)\\s*$'
    PrefixArticleRegex = f'\\bthe\\s+'
    OrRegex = f'\\s*((\\b|,\\s*)(or|and)\\b|,)\\s*'
    YearPlusNumberRegex = f'\\b(year\\s+((?<year>(\\d{{3,4}}))|{FullTextYearRegex}))\\b'
    NumberAsTimeRegex = f'\\b({WrittenTimeRegex}|{PeriodHourNumRegex}|{BaseDateTime.HourRegex})\\b'
    TimeBeforeAfterRegex = f'\\b(((?<=\\b(before|no later than|by|after)\\s+)({WrittenTimeRegex}|{HourNumRegex}|{BaseDateTime.HourRegex}|{MidTimeRegex}))|{MidTimeRegex})\\b'
    DateNumberConnectorRegex = f'^\\s*(?<connector>\\s+at)\\s*$'
    DecadeRegex = f'(?<decade>noughties|twenties|thirties|forties|fifties|sixties|seventies|eighties|nineties|two thousands)'
    DecadeWithCenturyRegex = f'(the\\s+)?(((?<century>\\d|1\\d|2\\d)?(\')?(?<decade>\\d0)(\')?s)|(({CenturyRegex}(\\s+|-)(and\\s+)?)?{DecadeRegex})|({CenturyRegex}(\\s+|-)(and\\s+)?(?<decade>tens|hundreds)))'
    RelativeDecadeRegex = f'\\b((the\\s+)?{RelativeRegex}\\s+((?<number>[\\w,]+)\\s+)?decades?)\\b'
    DateAfterRegex = f'\\b((or|and)\\s+(above|after|later|greater)(?!\\s+than))\\b'
    YearPeriodRegex = f'((((from|during|in)\\s+)?{YearRegex}\\s*({TillRegex})\\s*{YearRegex})|(((between)\\s+){YearRegex}\\s*({RangeConnectorRegex})\\s*{YearRegex}))'
    ComplexDatePeriodRegex = f'(((from|during|in)\\s+)?(?<start>.+)\\s*({TillRegex})\\s*(?<end>.+)|((between)\\s+)(?<start>.+)\\s*({RangeConnectorRegex})\\s*(?<end>.+))'
    UnitMap = dict([(r'''decades''', r'''10Y'''),
                    (r'''decade''', r'''10Y'''),
                    (r'''years''', r'''Y'''),
                    (r'''year''', r'''Y'''),
                    (r'''months''', r'''MON'''),
                    (r'''month''', r'''MON'''),
                    (r'''weeks''', r'''W'''),
                    (r'''week''', r'''W'''),
                    (r'''days''', r'''D'''),
                    (r'''day''', r'''D'''),
                    (r'''hours''', r'''H'''),
                    (r'''hour''', r'''H'''),
                    (r'''hrs''', r'''H'''),
                    (r'''hr''', r'''H'''),
                    (r'''h''', r'''H'''),
                    (r'''minutes''', r'''M'''),
                    (r'''minute''', r'''M'''),
                    (r'''mins''', r'''M'''),
                    (r'''min''', r'''M'''),
                    (r'''seconds''', r'''S'''),
                    (r'''second''', r'''S'''),
                    (r'''secs''', r'''S'''),
                    (r'''sec''', r'''S''')])
    UnitValueMap = dict([(r'''decades''', 315360000),
                         (r'''decade''', 315360000),
                         (r'''years''', 31536000),
                         (r'''year''', 31536000),
                         (r'''months''', 2592000),
                         (r'''month''', 2592000),
                         (r'''weeks''', 604800),
                         (r'''week''', 604800),
                         (r'''days''', 86400),
                         (r'''day''', 86400),
                         (r'''hours''', 3600),
                         (r'''hour''', 3600),
                         (r'''hrs''', 3600),
                         (r'''hr''', 3600),
                         (r'''h''', 3600),
                         (r'''minutes''', 60),
                         (r'''minute''', 60),
                         (r'''mins''', 60),
                         (r'''min''', 60),
                         (r'''seconds''', 1),
                         (r'''second''', 1),
                         (r'''secs''', 1),
                         (r'''sec''', 1)])
    SeasonMap = dict([(r'''spring''', r'''SP'''),
                      (r'''summer''', r'''SU'''),
                      (r'''fall''', r'''FA'''),
                      (r'''autumn''', r'''FA'''),
                      (r'''winter''', r'''WI''')])
    SeasonValueMap = dict([(r'''SP''', 3),
                           (r'''SU''', 6),
                           (r'''FA''', 9),
                           (r'''WI''', 12)])
    CardinalMap = dict([(r'''first''', 1),
                        (r'''1st''', 1),
                        (r'''second''', 2),
                        (r'''2nd''', 2),
                        (r'''third''', 3),
                        (r'''3rd''', 3),
                        (r'''fourth''', 4),
                        (r'''4th''', 4),
                        (r'''fifth''', 5),
                        (r'''5th''', 5)])
    DayOfWeek = dict([(r'''monday''', 1),
                      (r'''tuesday''', 2),
                      (r'''wednesday''', 3),
                      (r'''thursday''', 4),
                      (r'''friday''', 5),
                      (r'''saturday''', 6),
                      (r'''sunday''', 0),
                      (r'''mon''', 1),
                      (r'''tue''', 2),
                      (r'''tues''', 2),
                      (r'''wed''', 3),
                      (r'''wedn''', 3),
                      (r'''weds''', 3),
                      (r'''thu''', 4),
                      (r'''thur''', 4),
                      (r'''thurs''', 4),
                      (r'''fri''', 5),
                      (r'''sat''', 6),
                      (r'''sun''', 0)])
    MonthOfYear = dict([(r'''january''', 1),
                        (r'''february''', 2),
                        (r'''march''', 3),
                        (r'''april''', 4),
                        (r'''may''', 5),
                        (r'''june''', 6),
                        (r'''july''', 7),
                        (r'''august''', 8),
                        (r'''september''', 9),
                        (r'''october''', 10),
                        (r'''november''', 11),
                        (r'''december''', 12),
                        (r'''jan''', 1),
                        (r'''feb''', 2),
                        (r'''mar''', 3),
                        (r'''apr''', 4),
                        (r'''jun''', 6),
                        (r'''jul''', 7),
                        (r'''aug''', 8),
                        (r'''sep''', 9),
                        (r'''sept''', 9),
                        (r'''oct''', 10),
                        (r'''nov''', 11),
                        (r'''dec''', 12),
                        (r'''1''', 1),
                        (r'''2''', 2),
                        (r'''3''', 3),
                        (r'''4''', 4),
                        (r'''5''', 5),
                        (r'''6''', 6),
                        (r'''7''', 7),
                        (r'''8''', 8),
                        (r'''9''', 9),
                        (r'''10''', 10),
                        (r'''11''', 11),
                        (r'''12''', 12),
                        (r'''01''', 1),
                        (r'''02''', 2),
                        (r'''03''', 3),
                        (r'''04''', 4),
                        (r'''05''', 5),
                        (r'''06''', 6),
                        (r'''07''', 7),
                        (r'''08''', 8),
                        (r'''09''', 9)])
    Numbers = dict([(r'''zero''', 0),
                    (r'''one''', 1),
                    (r'''a''', 1),
                    (r'''an''', 1),
                    (r'''two''', 2),
                    (r'''three''', 3),
                    (r'''four''', 4),
                    (r'''five''', 5),
                    (r'''six''', 6),
                    (r'''seven''', 7),
                    (r'''eight''', 8),
                    (r'''nine''', 9),
                    (r'''ten''', 10),
                    (r'''eleven''', 11),
                    (r'''twelve''', 12),
                    (r'''thirteen''', 13),
                    (r'''fourteen''', 14),
                    (r'''fifteen''', 15),
                    (r'''sixteen''', 16),
                    (r'''seventeen''', 17),
                    (r'''eighteen''', 18),
                    (r'''nineteen''', 19),
                    (r'''twenty''', 20),
                    (r'''twenty one''', 21),
                    (r'''twenty two''', 22),
                    (r'''twenty three''', 23),
                    (r'''twenty four''', 24),
                    (r'''twenty five''', 25),
                    (r'''twenty six''', 26),
                    (r'''twenty seven''', 27),
                    (r'''twenty eight''', 28),
                    (r'''twenty nine''', 29),
                    (r'''thirty''', 30),
                    (r'''thirty one''', 31),
                    (r'''thirty two''', 32),
                    (r'''thirty three''', 33),
                    (r'''thirty four''', 34),
                    (r'''thirty five''', 35),
                    (r'''thirty six''', 36),
                    (r'''thirty seven''', 37),
                    (r'''thirty eight''', 38),
                    (r'''thirty nine''', 39),
                    (r'''forty''', 40),
                    (r'''forty one''', 41),
                    (r'''forty two''', 42),
                    (r'''forty three''', 43),
                    (r'''forty four''', 44),
                    (r'''forty five''', 45),
                    (r'''forty six''', 46),
                    (r'''forty seven''', 47),
                    (r'''forty eight''', 48),
                    (r'''forty nine''', 49),
                    (r'''fifty''', 50),
                    (r'''fifty one''', 51),
                    (r'''fifty two''', 52),
                    (r'''fifty three''', 53),
                    (r'''fifty four''', 54),
                    (r'''fifty five''', 55),
                    (r'''fifty six''', 56),
                    (r'''fifty seven''', 57),
                    (r'''fifty eight''', 58),
                    (r'''fifty nine''', 59),
                    (r'''sixty''', 60),
                    (r'''sixty one''', 61),
                    (r'''sixty two''', 62),
                    (r'''sixty three''', 63),
                    (r'''sixty four''', 64),
                    (r'''sixty five''', 65),
                    (r'''sixty six''', 66),
                    (r'''sixty seven''', 67),
                    (r'''sixty eight''', 68),
                    (r'''sixty nine''', 69),
                    (r'''seventy''', 70),
                    (r'''seventy one''', 71),
                    (r'''seventy two''', 72),
                    (r'''seventy three''', 73),
                    (r'''seventy four''', 74),
                    (r'''seventy five''', 75),
                    (r'''seventy six''', 76),
                    (r'''seventy seven''', 77),
                    (r'''seventy eight''', 78),
                    (r'''seventy nine''', 79),
                    (r'''eighty''', 80),
                    (r'''eighty one''', 81),
                    (r'''eighty two''', 82),
                    (r'''eighty three''', 83),
                    (r'''eighty four''', 84),
                    (r'''eighty five''', 85),
                    (r'''eighty six''', 86),
                    (r'''eighty seven''', 87),
                    (r'''eighty eight''', 88),
                    (r'''eighty nine''', 89),
                    (r'''ninety''', 90),
                    (r'''ninety one''', 91),
                    (r'''ninety two''', 92),
                    (r'''ninety three''', 93),
                    (r'''ninety four''', 94),
                    (r'''ninety five''', 95),
                    (r'''ninety six''', 96),
                    (r'''ninety seven''', 97),
                    (r'''ninety eight''', 98),
                    (r'''ninety nine''', 99),
                    (r'''one hundred''', 100)])
    DayOfMonth = dict([(r'''1st''', 1),
                       (r'''2nd''', 2),
                       (r'''3rd''', 3),
                       (r'''4th''', 4),
                       (r'''5th''', 5),
                       (r'''6th''', 6),
                       (r'''7th''', 7),
                       (r'''8th''', 8),
                       (r'''9th''', 9),
                       (r'''10th''', 10),
                       (r'''11th''', 11),
                       (r'''11st''', 11),
                       (r'''12th''', 12),
                       (r'''12nd''', 12),
                       (r'''13th''', 13),
                       (r'''13rd''', 13),
                       (r'''14th''', 14),
                       (r'''15th''', 15),
                       (r'''16th''', 16),
                       (r'''17th''', 17),
                       (r'''18th''', 18),
                       (r'''19th''', 19),
                       (r'''20th''', 20),
                       (r'''21st''', 21),
                       (r'''21th''', 21),
                       (r'''22nd''', 22),
                       (r'''22th''', 22),
                       (r'''23rd''', 23),
                       (r'''23th''', 23),
                       (r'''24th''', 24),
                       (r'''25th''', 25),
                       (r'''26th''', 26),
                       (r'''27th''', 27),
                       (r'''28th''', 28),
                       (r'''29th''', 29),
                       (r'''30th''', 30),
                       (r'''31st''', 31)])
    DoubleNumbers = dict([(r'''half''', 0.5),
                          (r'''quarter''', 0.25)])
    HolidayNames = dict([(r'''easterday''', ["easterday", "easter"]),
                         (r'''fathers''', ["fatherday", "fathersday"]),
                         (r'''mothers''', ["motherday", "mothersday"]),
                         (r'''thanksgiving''', ["thanksgivingday", "thanksgiving"]),
                         (r'''martinlutherking''', ["mlkday", "martinlutherkingday", "martinlutherkingjrday"]),
                         (r'''washingtonsbirthday''', ["washingtonsbirthday", "washingtonbirthday"]),
                         (r'''canberra''', ["canberraday"]),
                         (r'''labour''', ["labourday", "laborday"]),
                         (r'''columbus''', ["columbusday"]),
                         (r'''memorial''', ["memorialday"]),
                         (r'''yuandan''', ["yuandan"]),
                         (r'''maosbirthday''', ["maosbirthday"]),
                         (r'''teachersday''', ["teachersday", "teacherday"]),
                         (r'''singleday''', ["singleday"]),
                         (r'''allsaintsday''', ["allsaintsday"]),
                         (r'''youthday''', ["youthday"]),
                         (r'''childrenday''', ["childrenday", "childday"]),
                         (r'''femaleday''', ["femaleday"]),
                         (r'''treeplantingday''', ["treeplantingday"]),
                         (r'''arborday''', ["arborday"]),
                         (r'''girlsday''', ["girlsday"]),
                         (r'''whiteloverday''', ["whiteloverday"]),
                         (r'''loverday''', ["loverday"]),
                         (r'''christmas''', ["christmasday", "christmas"]),
                         (r'''xmas''', ["xmasday", "xmas"]),
                         (r'''newyear''', ["newyear"]),
                         (r'''newyearday''', ["newyearday"]),
                         (r'''newyearsday''', ["newyearsday"]),
                         (r'''inaugurationday''', ["inaugurationday"]),
                         (r'''groundhougday''', ["groundhougday"]),
                         (r'''valentinesday''', ["valentinesday"]),
                         (r'''stpatrickday''', ["stpatrickday"]),
                         (r'''aprilfools''', ["aprilfools"]),
                         (r'''stgeorgeday''', ["stgeorgeday"]),
                         (r'''mayday''', ["mayday", "intlworkersday", "internationalworkersday"]),
                         (r'''cincodemayoday''', ["cincodemayoday"]),
                         (r'''baptisteday''', ["baptisteday"]),
                         (r'''usindependenceday''', ["usindependenceday"]),
                         (r'''independenceday''', ["independenceday"]),
                         (r'''bastilleday''', ["bastilleday"]),
                         (r'''halloweenday''', ["halloweenday"]),
                         (r'''allhallowday''', ["allhallowday"]),
                         (r'''allsoulsday''', ["allsoulsday"]),
                         (r'''guyfawkesday''', ["guyfawkesday"]),
                         (r'''veteransday''', ["veteransday"]),
                         (r'''christmaseve''', ["christmaseve"]),
                         (r'''newyeareve''', ["newyearseve", "newyeareve"])])
    WrittenDecades = dict([(r'''hundreds''', 0),
                           (r'''tens''', 10),
                           (r'''twenties''', 20),
                           (r'''thirties''', 30),
                           (r'''forties''', 40),
                           (r'''fifties''', 50),
                           (r'''sixties''', 60),
                           (r'''seventies''', 70),
                           (r'''eighties''', 80),
                           (r'''nineties''', 90)])
    SpecialDecadeCases = dict([(r'''noughties''', 2000),
                               (r'''two thousands''', 2000)])
    DefaultLanguageFallback = 'MDY'
    SuperfluousWordList = [r'preferably', r'how about', r'maybe', r'say', r'like']
    DurationDateRestrictions = [r'today', r'now']
    AmbiguityFiltersDict = dict([(r'''\bmorning|afternoon|evening|night|day\b''', r'''\b(good\s+(morning|afternoon|evening|night|day))|(nighty\s+night)\b'''),
                                 (r'''\bmay\b''', r'''\b((^may i)|(i|you|he|she|we|they)\s+may|(may\s+((((also|not|(also not)|well)\s+)?(be|ask|contain|constitute|email|e-mail|take|have|result|involve|get|work|reply))|(or may not))))\b''')])
    MorningTermList = [r'morning']
    AfternoonTermList = [r'afternoon']
    EveningTermList = [r'evening']
    DaytimeTermList = [r'daytime']
    NightTermList = [r'night']
    SameDayTerms = [r'today']
    PlusOneDayTerms = [r'tomorrow', r'tmr', r'day after']
    MinusOneDayTerms = [r'yesterday', r'day before']
    PlusTwoDayTerms = [r'day after tomorrow', r'day after tmr']
    MinusTwoDayTerms = [r'day before yesterday']
    FutureTerms = [r'this', r'next']
    LastCardinalTerms = [r'last']
    MonthTerms = [r'month']
    MonthToDateTerms = [r'month to date']
    WeekendTerms = [r'weekend']
    WeekTerms = [r'week']
    YearTerms = [r'year']
    GenericYearTerms = [r'y']
    YearToDateTerms = [r'year to date']
# pylint: enable=line-too-long
